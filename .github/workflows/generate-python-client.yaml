name: Generate Python Client

on:
  workflow_dispatch: # Allow manual triggers

jobs:
  generate-client:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      # Step 1: Define environment variable for OpenAPI spec URL
      - name: Set OpenAPI Spec URL
        run: echo "OPENAPI_SPEC_URL=https://app.fieldmanager.io/api/location/openapi.json" >> $GITHUB_ENV

      # Step 2: Check out the code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: trunk # Ensure you check out the `trunk` branch

      # Step 3: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Step 4: Install dependencies (pipx and jq)
      - name: Install pipx and jq
        run: |
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
          pipx install openapi-python-client --include-deps
          sudo apt-get update && sudo apt-get install -y jq
          sudo snap install yq
          npm install -g prettier

      # Step 5: Download the OpenAPI specification
      - name: Download OpenAPI Specification
        run: |
          echo "Downloading OpenAPI specification..."
          curl -s ${{ env.OPENAPI_SPEC_URL }} > ./openapi_specification/openapi.json

      # Step 6: Format the OpenAPI specification
      - name: Format OpenAPI Specification
        run: |
          echo "Formatting OpenAPI specification..."
          npx prettier --write ./openapi_specification/openapi.json

      # Step 7: Get version and save to logs/versions
      - name: Get API version
        run: |
          mkdir -p logs
          VERSION=$(yq -r '.package_version_override' config.yaml)
          echo "Field Manager Data API version: $VERSION" > logs/versions
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 8: Generate the Python client
      - name: Generate Python Client
        run: |
          mkdir -p logs
          echo "Generating API client..."
          openapi-python-client generate --path ./openapi_specification/openapi.json --overwrite --custom-template-path=templates --config config.yaml >> logs/log
          cat logs/log

      # Step 9: Configure Git for the runner
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Step 10: Create a new branch
      - name: Create and Push Branch
        run: |
          BRANCH_NAME="update-python-client-${{ env.VERSION }}"
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "chore: Update Python client to API version ${{ env.VERSION }}"
          git push origin $BRANCH_NAME

      # Step 11: Create a Pull Request
    #   - name: Create Pull Request
    #     uses: peter-evans/create-pull-request@v7
    #     with:
    #       token: ${{ secrets.PULL_REQUEST_TOKEN }}
    #       branch: update-python-client-${{ env.VERSION }}
    #       base: trunk
    #       title: "Update Python client to API version ${{ env.VERSION }}"
    #       body: |
    #         This PR updates the generated Python client to match API version ${{ env.VERSION }}.
