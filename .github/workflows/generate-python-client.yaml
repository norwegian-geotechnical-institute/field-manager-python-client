name: Generate Python Client

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight UTC

jobs:
  generate-client:
    runs-on: ubuntu-latest

    env:
      OPENAPI_SPEC_URL: https://app.fieldmanager.io/api/location/openapi.json

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: trunk

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Step 3: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      # Step 4: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openapi-python-client yq
          sudo apt-get update && sudo apt-get install -y jq
          mkdir -p logs
          echo "Recording openapi-python-client version..." > logs/log
          openapi-python-client --version >> logs/log 2>&1

      # Step 5: Download OpenAPI Specification
      - name: Download OpenAPI Specification
        run: |
          echo "Downloading OpenAPI specification..."
          mkdir -p openapi_specification
          curl -s ${{ env.OPENAPI_SPEC_URL }} > ./openapi_specification/openapi.json

      # Step 6: Format OpenAPI Specification
      - name: Format OpenAPI Specification
        run: |
          echo "Formatting OpenAPI specification..."
          npx prettier --write ./openapi_specification/openapi.json

      # Step 7: Get API Version
      - name: Get API Version
        run: |
          if yq -e '.package_version_override' config.yaml > /dev/null; then
            VERSION=$(yq -r '.package_version_override' config.yaml)
          else
            VERSION=$(jq -r '.info.version' ./openapi_specification/openapi.json)
          fi
          echo "$VERSION" > openapi_specification/version
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 8: Generate Python Client
      - name: Generate Python Client
        run: |
          echo "Generating API client..."
          openapi-python-client generate \
            --path ./openapi_specification/openapi.json \
            --overwrite \
            --custom-template-path=templates \
            --config config.yaml >> logs/log
          cat logs/log

      # Step 9: Check for Changes
      - name: Check for Changes
        id: git_diff
        run: |
          git add .
          if git diff --cached --quiet; then
            echo "::set-output name=changes_detected::false"
          else
            echo "::set-output name=changes_detected::true"
          fi

      # Step 10: Configure Git
      - name: Configure Git
        if: steps.git_diff.outputs.changes_detected == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Step 11: Create Pull Request
      - name: Create Pull Request
        if: steps.git_diff.outputs.changes_detected == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PULL_REQUEST_TOKEN }}
          branch: update-python-client-${{ env.VERSION }}
          base: trunk
          title: "Update Python client to API version ${{ env.VERSION }}"
          body: |
            This PR updates the generated Python client to match API version ${{ env.VERSION }}.
          branch-suffix: timestamp
