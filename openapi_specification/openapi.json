{
  "openapi": "3.1.0",
  "info": { "title": "Field Manager Data API", "version": "4.5.20" },
  "servers": [
    {
      "url": "https://api.fieldmanager.io/fieldmanager",
      "description": "API gateway"
    }
  ],
  "paths": {
    "/organizations/{organization_id}": {
      "get": {
        "tags": ["organizations"],
        "summary": "Get Organization",
        "description": "Retrieve one organization",
        "operationId": "get_organization_organizations__organization_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Organization Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Organization" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["organizations"],
        "summary": "Update Organization",
        "description": "Update an organization with passed organization_in.",
        "operationId": "update_organization_organizations__organization_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Organization Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrganizationUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Organization" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/files": {
      "get": {
        "tags": ["organizations", "files"],
        "summary": "Get Files In Organization",
        "description": "Get all database file objects that are directly attached to the specified organization with organization_id and\npossible filtered by file types.\n\nPlease note that you will not get files that is only attached to an underlying Project, Location or Method in\nthe Organization.",
        "operationId": "get_files_in_organization_organizations__organization_id__files_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Organization Id" }
          },
          {
            "name": "file_types",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/FileType" },
              "default": [],
              "title": "File Types"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/File" },
                  "title": "Response Get Files In Organization Organizations  Organization Id  Files Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/upload": {
      "post": {
        "tags": ["organizations", "files"],
        "summary": "Upload File To Organization",
        "description": "Upload data file to organization. The file is not parsed, but only attached to the organization.",
        "operationId": "upload_file_to_organization_organizations__organization_id__upload_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Organization Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_to_organization_organizations__organization_id__upload_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/File" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/files/{file_id}/download": {
      "get": {
        "tags": ["organizations", "files"],
        "summary": "Download File",
        "description": "Download the file blob content by organization_id and file_id",
        "operationId": "download_file_organizations__organization_id__files__file_id__download_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Organization Id" }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ImageSize",
              "default": "ORIGINAL"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/files/{file_id}": {
      "delete": {
        "tags": ["organizations", "files"],
        "summary": "Delete File",
        "description": "Delete file with specified file_id from organization with organization_id.",
        "operationId": "delete_file_organizations__organization_id__files__file_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Organization Id" }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects": {
      "get": {
        "tags": ["organizations"],
        "summary": "Get Organization Projects",
        "description": "Retrieve all projects in organization with organization_id",
        "operationId": "get_organization_projects_organizations__organization_id__projects_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Organization Id" }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Project" },
                  "title": "Response Get Organization Projects Organizations  Organization Id  Projects Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/projects/{project_id}/move": {
      "post": {
        "tags": ["organizations"],
        "summary": "Move Organization Project",
        "description": "Move a project from one organization to another. The calling user must be an admin in both organizations.\n\nReturn 200 OK if successful move.",
        "operationId": "move_organization_project_organizations__organization_id__projects__project_id__move_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Organization Id" }
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          },
          {
            "name": "target_organization_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Target Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": ["organizations"],
        "summary": "Get Organizations",
        "description": "Retrieve the organizations you have access to.",
        "operationId": "get_organizations_organizations_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Organization" },
                  "title": "Response Get Organizations Organizations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["organizations"],
        "summary": "Add Organization",
        "description": "Add an organization object. You must be an application admin to add organizations.",
        "operationId": "add_organization_organizations_post",
        "security": [{ "HTTPBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/OrganizationCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Organization" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/get_by_external_id/{external_id}": {
      "get": {
        "tags": ["organizations"],
        "summary": "Get Organization By External Id",
        "description": "Return a specific organization_id",
        "operationId": "get_organization_by_external_id_organizations_get_by_external_id__external_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "external_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "External Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Organization" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Project",
        "operationId": "get_project_projects__project_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectInfo" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["projects"],
        "summary": "Update Project",
        "description": "Update a project with passed project_in.\n\nIf srid is changed, then all location values are transformed from the old srid to the new srid.\nThe location should not move on the map.",
        "operationId": "update_project_projects__project_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["projects"],
        "summary": "Delete Project",
        "description": "Soft delete a project with passed project_id.",
        "operationId": "delete_project_projects__project_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/files": {
      "get": {
        "tags": ["projects", "files"],
        "summary": "Get Files In Project",
        "description": "Get all database file objects in a project by project_id and possible filtered by file type.",
        "operationId": "get_files_in_project_projects__project_id__files_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "file_types",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/components/schemas/FileType" },
              "default": [],
              "title": "File Types"
            }
          },
          {
            "name": "extended_result",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Extended Result"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      { "$ref": "#/components/schemas/FileExtended" },
                      { "$ref": "#/components/schemas/File" }
                    ]
                  },
                  "title": "Response Get Files In Project Projects  Project Id  Files Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["projects", "files"],
        "summary": "Delete Files",
        "description": "Batch delete project files.\n\nHaving a request body in a DELETE method is not supported by every client library.\nIf you have trouble using this endpoint, you may want to use the endpoint\n`DELETE /projects/{project_id}/files/{file_id}` instead.",
        "operationId": "delete_files_projects__project_id__files_delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "uniqueItems": true,
                "items": { "type": "string", "format": "uuid" },
                "title": "File Ids"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/files/{file_id}": {
      "get": {
        "tags": ["projects", "files"],
        "summary": "Get File In Project",
        "description": "Return a database file object with the given file_id in specified project.",
        "operationId": "get_file_in_project_projects__project_id__files__file_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/File" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["projects", "files"],
        "summary": "Delete File",
        "description": "Delete file for project.",
        "operationId": "delete_file_projects__project_id__files__file_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["files", "projects"],
        "summary": "Change File Metadata",
        "description": "Update the file metadata by project_id and file_id",
        "operationId": "change_file_metadata_projects__project_id__files__file_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/FileUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/File" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/logo": {
      "get": {
        "tags": ["projects", "files"],
        "summary": "Download Logo",
        "description": "Download the project's organization logo file.\n\nIf not present, then return the default Field Manager logo file\n\nFor now, all image files uploaded directly to the organization is considered as a logo file.\nRandom picks one.",
        "operationId": "download_logo_projects__project_id__logo_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/linked_projects": {
      "get": {
        "tags": ["projects", "linked_projects"],
        "summary": "Get Linked Projects",
        "description": "Get all linked projects in a project by project_id.",
        "operationId": "get_linked_projects_projects__project_id__linked_projects_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/LinkedProjectInfo" },
                  "title": "Response Get Linked Projects Projects  Project Id  Linked Projects Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/linked_projects/{linked_project_id}": {
      "post": {
        "tags": ["projects", "linked_projects"],
        "summary": "Link Linked Project",
        "description": "Link another project to a project by project_id.",
        "operationId": "link_linked_project_projects__project_id__linked_projects__linked_project_id__post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "linked_project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Linked Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["projects", "linked_projects"],
        "summary": "Unlink Linked Project",
        "description": "Unlink linked project to a project by project_id.",
        "operationId": "unlink_linked_project_projects__project_id__linked_projects__linked_project_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "linked_project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Linked Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/upload": {
      "post": {
        "tags": ["projects", "files"],
        "summary": "Upload File To Project",
        "description": "Upload data file to project. If layer_file is passed as True, then the file is converted to GeoJSON and used for\nshowing extra layers in a project. Otherwise, the file is not parsed, but only attached to the project.\n\nFor layer files, only two types are supported: .dxf files with POINT, LINE and / or POLYLINE and .zip files\ncontaining shape (.shp) files.",
        "operationId": "upload_file_to_project_projects__project_id__upload_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "layer_file",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Layer File"
            }
          },
          {
            "name": "srid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Srid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_to_project_projects__project_id__upload_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/summary": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Project Summary",
        "description": "This is a very heavy and specialized endpoint, only returning exactly what is needed for displaying information\nin the map (Locations, Methods and some numbers shown for the location in the map).",
        "operationId": "get_project_summary_projects__project_id__summary_get",
        "deprecated": true,
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectSummary" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": ["projects"],
        "summary": "Get Projects",
        "description": "Get all projects you have access to.",
        "operationId": "get_projects_projects_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": { "type": "string" },
              "default": [],
              "title": "Tags"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ProjectInfo" },
                  "title": "Response Get Projects Projects Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["projects"],
        "summary": "Delete Projects",
        "description": "Delete multiple projects. Pass a list of project_ids to be deleted in the request body.",
        "operationId": "delete_projects_projects_delete",
        "security": [{ "HTTPBearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "uniqueItems": true,
                "items": { "type": "string", "format": "uuid" },
                "title": "Project Ids"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["projects"],
        "summary": "Add Project",
        "description": "Add a project with passed project_in.\n\nIf you pass in set_manager_user as:\n- True, then the calling user set as the project manager.\n- False, then the calling user is not set as the project manager.\n- None (default), the calling user is set as the project manager if the user is not an organization admin.",
        "operationId": "add_project_projects_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "set_manager_user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Set Manager User"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Project" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/search": {
      "post": {
        "tags": ["projects"],
        "summary": "Search Projects",
        "operationId": "search_projects_projects_search_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ProjectSearch" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ProjectInfo" },
                  "title": "Response Search Projects Projects Search Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/favorite": {
      "put": {
        "tags": ["projects"],
        "summary": "Update Project Favorite",
        "description": "Update a project favorite (for the calling user).",
        "operationId": "update_project_favorite_projects__project_id__favorite_put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectInfo" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["projects"],
        "summary": "Update Project Favorite",
        "description": "Update a project favorite (for the calling user).",
        "operationId": "update_project_favorite_projects__project_id__favorite_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectInfo" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["projects"],
        "summary": "Update Project Favorite",
        "description": "Remove a project as favorite (for the calling user).",
        "operationId": "update_project_favorite_projects__project_id__favorite_delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProjectInfo" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations": {
      "get": {
        "tags": ["locations"],
        "summary": "Get Locations In Project",
        "description": "Return all locations in project.\n\nIt is possible to filter on tags (only return locations with any of the passed tags).\nIf no tags are specified, all locations are returned.\n\nIf method_types are specified, only locations with methods of the specified types are returned.",
        "operationId": "get_locations_in_project_projects__project_id__locations_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          },
          {
            "name": "deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Deleted"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": { "type": "string" },
              "default": [],
              "title": "Tags"
            }
          },
          {
            "name": "method_types",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": { "$ref": "#/components/schemas/MethodTypeEnum" },
              "default": [],
              "title": "Method Types"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Location" },
                  "title": "Response Get Locations In Project Projects  Project Id  Locations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["locations"],
        "summary": "Update Locations In Project",
        "description": "Batch updates locations",
        "operationId": "update_locations_in_project_projects__project_id__locations_put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/LocationUpdate" },
                "title": "Locations In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Location" },
                  "title": "Response Update Locations In Project Projects  Project Id  Locations Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["locations"],
        "summary": "Add Location To Project",
        "description": "Add location to project.",
        "operationId": "add_location_to_project_projects__project_id__locations_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LocationCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Location" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["locations"],
        "summary": "Delete Locations In Project",
        "description": "Delete multiple locations in a project",
        "operationId": "delete_locations_in_project_projects__project_id__locations_delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "uniqueItems": true,
                "items": { "type": "string", "format": "uuid" },
                "title": "Location Ids"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}": {
      "get": {
        "tags": ["locations"],
        "summary": "Get Location In Project",
        "description": "Return a specific location",
        "operationId": "get_location_in_project_projects__project_id__locations__location_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Location" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["locations"],
        "summary": "Update Location In Project",
        "description": "Updates location",
        "operationId": "update_location_in_project_projects__project_id__locations__location_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LocationUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Location" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["locations"],
        "summary": "Delete Location In Project",
        "description": "Delete a single location in project",
        "operationId": "delete_location_in_project_projects__project_id__locations__location_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/files": {
      "get": {
        "tags": ["locations", "files"],
        "summary": "Get Files In Location In Project",
        "description": "Return database file objects for a specific location and optional file type",
        "operationId": "get_files_in_location_in_project_projects__project_id__locations__location_id__files_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "file_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/FileType" },
                { "type": "null" }
              ],
              "title": "File Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/File" },
                  "title": "Response Get Files In Location In Project Projects  Project Id  Locations  Location Id  Files Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/files/{file_id}": {
      "delete": {
        "tags": ["locations", "files"],
        "summary": "Delete File",
        "description": "Delete file in location.\n\nA file may be the source for several locations, so we don't delete the file blob before the last reference is\ndeleted.",
        "operationId": "delete_file_projects__project_id__locations__location_id__files__file_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/get_by_name/{name}": {
      "get": {
        "tags": ["locations"],
        "summary": "Get Location In Project By Name",
        "description": "Return a specific location",
        "operationId": "get_location_in_project_by_name_projects__project_id__locations_get_by_name__name__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Location" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/export": {
      "get": {
        "tags": ["locations", "export"],
        "summary": "Export",
        "description": "Endpoint for exporting specified location data.\n\nSupported **export_type** (MethodExportType):\n\n- **SND**: Download SND file.\n           For now only CPT, RP, SS and TOT methods are supported.\n           You will get a single SND file containing all methods for this location.",
        "operationId": "export_projects__project_id__locations__location_id__export_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "export_type",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/MethodExportType" }
          },
          {
            "name": "swap_x_y",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Swap X Y"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/upload": {
      "post": {
        "tags": ["locations", "files"],
        "summary": "Upload Locations To Project",
        "description": "Upload locations from a file.\n\nSupported file extensions are: .ags, .csv, .gvr, .kof, .prv, .snd, .vb, .xlsx, .xls and image files.\n\nPlease do not call this endpoint in parallel, since it is very resource intensive and will affect other users of\nthe system.",
        "operationId": "upload_locations_to_project_projects__project_id__locations_upload_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "srid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "title": "Srid"
            }
          },
          {
            "name": "swap_x_y",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "title": "Swap X Y"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_locations_to_project_projects__project_id__locations_upload_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Location" },
                  "title": "Response Upload Locations To Project Projects  Project Id  Locations Upload Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/queue": {
      "post": {
        "tags": ["locations", "files"],
        "summary": "Queue Locations To Project",
        "description": "Upload location file and add to queue for parsing.\n\nSupported file extensions: .ags, .csv, .gvr, .kof, .snd, .xlsx, .xls and image files.\n\n\nParsing of the file is done asynchronously, so the response can be returned before parsing is done.\n\nYou may check the status of the parsing by using the endpoints specified here:\nhttps://app.fieldmanager.io/developer/file-director",
        "operationId": "queue_locations_to_project_projects__project_id__locations_queue_post",
        "deprecated": true,
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "srid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "title": "Srid"
            }
          },
          {
            "name": "swap_x_y",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "title": "Swap X Y"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_queue_locations_to_project_projects__project_id__locations_queue_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/File" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/files/{file_id}/parse": {
      "post": {
        "tags": ["files"],
        "summary": "Parse Project File",
        "description": "Parse an already queued location file.",
        "operationId": "parse_project_file_projects__project_id__files__file_id__parse_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          },
          {
            "name": "srid",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "integer" }, { "type": "null" }],
              "title": "Srid"
            }
          },
          {
            "name": "swap_x_y",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Swap X Y"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Location" },
                  "title": "Response Parse Project File Projects  Project Id  Files  File Id  Parse Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/upload": {
      "post": {
        "tags": ["locations", "files"],
        "summary": "Upload File To Location",
        "description": "Upload a data file to location. Will create new methods and upload the submitted file data\n\nSupported file types are .A00, .ASC, .CPT, .DTR, .ENK, .GVR, .PRV, .RP, .SND, .STD, .TOT, .VB, .VIM",
        "operationId": "upload_file_to_location_projects__project_id__locations__location_id__upload_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_to_location_projects__project_id__locations__location_id__upload_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      { "$ref": "#/components/schemas/MethodCPT" },
                      { "$ref": "#/components/schemas/MethodTOT" },
                      { "$ref": "#/components/schemas/MethodRP" },
                      { "$ref": "#/components/schemas/MethodSA" },
                      { "$ref": "#/components/schemas/MethodPZ" },
                      { "$ref": "#/components/schemas/MethodSS" },
                      { "$ref": "#/components/schemas/MethodRWS" },
                      { "$ref": "#/components/schemas/MethodRCD" },
                      { "$ref": "#/components/schemas/MethodRS" },
                      { "$ref": "#/components/schemas/MethodSVT" },
                      { "$ref": "#/components/schemas/MethodSPT" },
                      { "$ref": "#/components/schemas/MethodCD" },
                      { "$ref": "#/components/schemas/MethodTP" },
                      { "$ref": "#/components/schemas/MethodPT" },
                      { "$ref": "#/components/schemas/MethodESA" },
                      { "$ref": "#/components/schemas/MethodAD" },
                      { "$ref": "#/components/schemas/MethodRO" },
                      { "$ref": "#/components/schemas/MethodINC" },
                      { "$ref": "#/components/schemas/MethodSR" },
                      { "$ref": "#/components/schemas/MethodIW" },
                      { "$ref": "#/components/schemas/MethodDT" },
                      { "$ref": "#/components/schemas/MethodOTHER" },
                      { "$ref": "#/components/schemas/MethodSRS" },
                      { "$ref": "#/components/schemas/MethodDP" },
                      { "$ref": "#/components/schemas/MethodWST" }
                    ],
                    "discriminator": {
                      "propertyName": "method_type_id",
                      "mapping": {
                        "1": "#/components/schemas/MethodCPT",
                        "2": "#/components/schemas/MethodTOT",
                        "3": "#/components/schemas/MethodRP",
                        "4": "#/components/schemas/MethodSA",
                        "5": "#/components/schemas/MethodPZ",
                        "6": "#/components/schemas/MethodSS",
                        "7": "#/components/schemas/MethodRWS",
                        "8": "#/components/schemas/MethodRCD",
                        "9": "#/components/schemas/MethodRS",
                        "10": "#/components/schemas/MethodSVT",
                        "11": "#/components/schemas/MethodSPT",
                        "12": "#/components/schemas/MethodCD",
                        "13": "#/components/schemas/MethodTP",
                        "14": "#/components/schemas/MethodPT",
                        "15": "#/components/schemas/MethodESA",
                        "17": "#/components/schemas/MethodAD",
                        "18": "#/components/schemas/MethodRO",
                        "19": "#/components/schemas/MethodINC",
                        "20": "#/components/schemas/MethodSR",
                        "21": "#/components/schemas/MethodIW",
                        "22": "#/components/schemas/MethodDT",
                        "23": "#/components/schemas/MethodOTHER",
                        "24": "#/components/schemas/MethodSRS",
                        "25": "#/components/schemas/MethodDP",
                        "26": "#/components/schemas/MethodWST"
                      }
                    }
                  },
                  "title": "Response Upload File To Location Projects  Project Id  Locations  Location Id  Upload Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods": {
      "get": {
        "tags": ["methods"],
        "summary": "Get Methods For Location",
        "description": "Return all methods for location. Please note that the return object is a\nunion of all possible attributes for all return types.",
        "operationId": "get_methods_for_location_projects__project_id__locations__location_id__methods_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      { "$ref": "#/components/schemas/MethodCPT" },
                      { "$ref": "#/components/schemas/MethodTOT" },
                      { "$ref": "#/components/schemas/MethodRP" },
                      { "$ref": "#/components/schemas/MethodSA" },
                      { "$ref": "#/components/schemas/MethodPZ" },
                      { "$ref": "#/components/schemas/MethodSS" },
                      { "$ref": "#/components/schemas/MethodRWS" },
                      { "$ref": "#/components/schemas/MethodRCD" },
                      { "$ref": "#/components/schemas/MethodRS" },
                      { "$ref": "#/components/schemas/MethodSVT" },
                      { "$ref": "#/components/schemas/MethodSPT" },
                      { "$ref": "#/components/schemas/MethodCD" },
                      { "$ref": "#/components/schemas/MethodTP" },
                      { "$ref": "#/components/schemas/MethodPT" },
                      { "$ref": "#/components/schemas/MethodESA" },
                      { "$ref": "#/components/schemas/MethodAD" },
                      { "$ref": "#/components/schemas/MethodRO" },
                      { "$ref": "#/components/schemas/MethodINC" },
                      { "$ref": "#/components/schemas/MethodSR" },
                      { "$ref": "#/components/schemas/MethodIW" },
                      { "$ref": "#/components/schemas/MethodDT" },
                      { "$ref": "#/components/schemas/MethodOTHER" },
                      { "$ref": "#/components/schemas/MethodSRS" },
                      { "$ref": "#/components/schemas/MethodDP" },
                      { "$ref": "#/components/schemas/MethodWST" }
                    ],
                    "discriminator": {
                      "propertyName": "method_type_id",
                      "mapping": {
                        "1": "#/components/schemas/MethodCPT",
                        "2": "#/components/schemas/MethodTOT",
                        "3": "#/components/schemas/MethodRP",
                        "4": "#/components/schemas/MethodSA",
                        "5": "#/components/schemas/MethodPZ",
                        "6": "#/components/schemas/MethodSS",
                        "7": "#/components/schemas/MethodRWS",
                        "8": "#/components/schemas/MethodRCD",
                        "9": "#/components/schemas/MethodRS",
                        "10": "#/components/schemas/MethodSVT",
                        "11": "#/components/schemas/MethodSPT",
                        "12": "#/components/schemas/MethodCD",
                        "13": "#/components/schemas/MethodTP",
                        "14": "#/components/schemas/MethodPT",
                        "15": "#/components/schemas/MethodESA",
                        "17": "#/components/schemas/MethodAD",
                        "18": "#/components/schemas/MethodRO",
                        "19": "#/components/schemas/MethodINC",
                        "20": "#/components/schemas/MethodSR",
                        "21": "#/components/schemas/MethodIW",
                        "22": "#/components/schemas/MethodDT",
                        "23": "#/components/schemas/MethodOTHER",
                        "24": "#/components/schemas/MethodSRS",
                        "25": "#/components/schemas/MethodDP",
                        "26": "#/components/schemas/MethodWST"
                      }
                    }
                  },
                  "title": "Response Get Methods For Location Projects  Project Id  Locations  Location Id  Methods Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["methods"],
        "summary": "Add Method To Location",
        "description": "Add method to location",
        "operationId": "add_method_to_location_projects__project_id__locations__location_id__methods_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/MethodADCreate" },
                  { "$ref": "#/components/schemas/MethodCDCreate" },
                  { "$ref": "#/components/schemas/MethodCPTCreate" },
                  { "$ref": "#/components/schemas/MethodDPCreate" },
                  { "$ref": "#/components/schemas/MethodDTCreate" },
                  { "$ref": "#/components/schemas/MethodESACreate" },
                  { "$ref": "#/components/schemas/MethodINCCreate" },
                  { "$ref": "#/components/schemas/MethodIWCreate" },
                  { "$ref": "#/components/schemas/MethodOTHERCreate" },
                  { "$ref": "#/components/schemas/MethodPTCreate" },
                  { "$ref": "#/components/schemas/MethodPZCreate" },
                  { "$ref": "#/components/schemas/MethodRCDCreate" },
                  { "$ref": "#/components/schemas/MethodROCreate" },
                  { "$ref": "#/components/schemas/MethodRPCreate" },
                  { "$ref": "#/components/schemas/MethodRSCreate" },
                  { "$ref": "#/components/schemas/MethodRWSCreate" },
                  { "$ref": "#/components/schemas/MethodSACreate" },
                  { "$ref": "#/components/schemas/MethodSPTCreate" },
                  { "$ref": "#/components/schemas/MethodSRCreate" },
                  { "$ref": "#/components/schemas/MethodSRSCreate" },
                  { "$ref": "#/components/schemas/MethodSSCreate" },
                  { "$ref": "#/components/schemas/MethodSVTCreate" },
                  { "$ref": "#/components/schemas/MethodTOTCreate" },
                  { "$ref": "#/components/schemas/MethodTPCreate" },
                  { "$ref": "#/components/schemas/MethodWSTCreate" }
                ],
                "discriminator": {
                  "propertyName": "method_type_id",
                  "mapping": {
                    "17": "#/components/schemas/MethodADCreate",
                    "12": "#/components/schemas/MethodCDCreate",
                    "1": "#/components/schemas/MethodCPTCreate",
                    "25": "#/components/schemas/MethodDPCreate",
                    "22": "#/components/schemas/MethodDTCreate",
                    "15": "#/components/schemas/MethodESACreate",
                    "19": "#/components/schemas/MethodINCCreate",
                    "21": "#/components/schemas/MethodIWCreate",
                    "23": "#/components/schemas/MethodOTHERCreate",
                    "14": "#/components/schemas/MethodPTCreate",
                    "5": "#/components/schemas/MethodPZCreate",
                    "8": "#/components/schemas/MethodRCDCreate",
                    "18": "#/components/schemas/MethodROCreate",
                    "3": "#/components/schemas/MethodRPCreate",
                    "9": "#/components/schemas/MethodRSCreate",
                    "7": "#/components/schemas/MethodRWSCreate",
                    "4": "#/components/schemas/MethodSACreate",
                    "11": "#/components/schemas/MethodSPTCreate",
                    "20": "#/components/schemas/MethodSRCreate",
                    "24": "#/components/schemas/MethodSRSCreate",
                    "6": "#/components/schemas/MethodSSCreate",
                    "10": "#/components/schemas/MethodSVTCreate",
                    "2": "#/components/schemas/MethodTOTCreate",
                    "13": "#/components/schemas/MethodTPCreate",
                    "26": "#/components/schemas/MethodWSTCreate"
                  }
                },
                "title": "Method In"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/MethodCPT" },
                    { "$ref": "#/components/schemas/MethodTOT" },
                    { "$ref": "#/components/schemas/MethodRP" },
                    { "$ref": "#/components/schemas/MethodSA" },
                    { "$ref": "#/components/schemas/MethodPZ" },
                    { "$ref": "#/components/schemas/MethodSS" },
                    { "$ref": "#/components/schemas/MethodRWS" },
                    { "$ref": "#/components/schemas/MethodRCD" },
                    { "$ref": "#/components/schemas/MethodRS" },
                    { "$ref": "#/components/schemas/MethodSVT" },
                    { "$ref": "#/components/schemas/MethodSPT" },
                    { "$ref": "#/components/schemas/MethodCD" },
                    { "$ref": "#/components/schemas/MethodTP" },
                    { "$ref": "#/components/schemas/MethodPT" },
                    { "$ref": "#/components/schemas/MethodESA" },
                    { "$ref": "#/components/schemas/MethodAD" },
                    { "$ref": "#/components/schemas/MethodRO" },
                    { "$ref": "#/components/schemas/MethodINC" },
                    { "$ref": "#/components/schemas/MethodSR" },
                    { "$ref": "#/components/schemas/MethodIW" },
                    { "$ref": "#/components/schemas/MethodDT" },
                    { "$ref": "#/components/schemas/MethodOTHER" },
                    { "$ref": "#/components/schemas/MethodSRS" },
                    { "$ref": "#/components/schemas/MethodDP" },
                    { "$ref": "#/components/schemas/MethodWST" }
                  ],
                  "discriminator": {
                    "propertyName": "method_type_id",
                    "mapping": {
                      "1": "#/components/schemas/MethodCPT",
                      "2": "#/components/schemas/MethodTOT",
                      "3": "#/components/schemas/MethodRP",
                      "4": "#/components/schemas/MethodSA",
                      "5": "#/components/schemas/MethodPZ",
                      "6": "#/components/schemas/MethodSS",
                      "7": "#/components/schemas/MethodRWS",
                      "8": "#/components/schemas/MethodRCD",
                      "9": "#/components/schemas/MethodRS",
                      "10": "#/components/schemas/MethodSVT",
                      "11": "#/components/schemas/MethodSPT",
                      "12": "#/components/schemas/MethodCD",
                      "13": "#/components/schemas/MethodTP",
                      "14": "#/components/schemas/MethodPT",
                      "15": "#/components/schemas/MethodESA",
                      "17": "#/components/schemas/MethodAD",
                      "18": "#/components/schemas/MethodRO",
                      "19": "#/components/schemas/MethodINC",
                      "20": "#/components/schemas/MethodSR",
                      "21": "#/components/schemas/MethodIW",
                      "22": "#/components/schemas/MethodDT",
                      "23": "#/components/schemas/MethodOTHER",
                      "24": "#/components/schemas/MethodSRS",
                      "25": "#/components/schemas/MethodDP",
                      "26": "#/components/schemas/MethodWST"
                    }
                  },
                  "title": "Response Add Method To Location Projects  Project Id  Locations  Location Id  Methods Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}": {
      "get": {
        "tags": ["methods"],
        "summary": "Get Method",
        "description": "Get the method by method_id",
        "operationId": "get_method_projects__project_id__locations__location_id__methods__method_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/MethodCPT" },
                    { "$ref": "#/components/schemas/MethodTOT" },
                    { "$ref": "#/components/schemas/MethodRP" },
                    { "$ref": "#/components/schemas/MethodSA" },
                    { "$ref": "#/components/schemas/MethodPZ" },
                    { "$ref": "#/components/schemas/MethodSS" },
                    { "$ref": "#/components/schemas/MethodRWS" },
                    { "$ref": "#/components/schemas/MethodRCD" },
                    { "$ref": "#/components/schemas/MethodRS" },
                    { "$ref": "#/components/schemas/MethodSVT" },
                    { "$ref": "#/components/schemas/MethodSPT" },
                    { "$ref": "#/components/schemas/MethodCD" },
                    { "$ref": "#/components/schemas/MethodTP" },
                    { "$ref": "#/components/schemas/MethodPT" },
                    { "$ref": "#/components/schemas/MethodESA" },
                    { "$ref": "#/components/schemas/MethodAD" },
                    { "$ref": "#/components/schemas/MethodRO" },
                    { "$ref": "#/components/schemas/MethodINC" },
                    { "$ref": "#/components/schemas/MethodSR" },
                    { "$ref": "#/components/schemas/MethodIW" },
                    { "$ref": "#/components/schemas/MethodDT" },
                    { "$ref": "#/components/schemas/MethodOTHER" },
                    { "$ref": "#/components/schemas/MethodSRS" },
                    { "$ref": "#/components/schemas/MethodDP" },
                    { "$ref": "#/components/schemas/MethodWST" }
                  ],
                  "discriminator": {
                    "propertyName": "method_type_id",
                    "mapping": {
                      "1": "#/components/schemas/MethodCPT",
                      "2": "#/components/schemas/MethodTOT",
                      "3": "#/components/schemas/MethodRP",
                      "4": "#/components/schemas/MethodSA",
                      "5": "#/components/schemas/MethodPZ",
                      "6": "#/components/schemas/MethodSS",
                      "7": "#/components/schemas/MethodRWS",
                      "8": "#/components/schemas/MethodRCD",
                      "9": "#/components/schemas/MethodRS",
                      "10": "#/components/schemas/MethodSVT",
                      "11": "#/components/schemas/MethodSPT",
                      "12": "#/components/schemas/MethodCD",
                      "13": "#/components/schemas/MethodTP",
                      "14": "#/components/schemas/MethodPT",
                      "15": "#/components/schemas/MethodESA",
                      "17": "#/components/schemas/MethodAD",
                      "18": "#/components/schemas/MethodRO",
                      "19": "#/components/schemas/MethodINC",
                      "20": "#/components/schemas/MethodSR",
                      "21": "#/components/schemas/MethodIW",
                      "22": "#/components/schemas/MethodDT",
                      "23": "#/components/schemas/MethodOTHER",
                      "24": "#/components/schemas/MethodSRS",
                      "25": "#/components/schemas/MethodDP",
                      "26": "#/components/schemas/MethodWST"
                    }
                  },
                  "title": "Response Get Method Projects  Project Id  Locations  Location Id  Methods  Method Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["methods"],
        "summary": "Update Method For Location",
        "description": "Update method",
        "operationId": "update_method_for_location_projects__project_id__locations__location_id__methods__method_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/MethodCPTUpdate" },
                  { "$ref": "#/components/schemas/MethodTOTUpdate" },
                  { "$ref": "#/components/schemas/MethodRPUpdate" },
                  { "$ref": "#/components/schemas/MethodSAUpdate" },
                  { "$ref": "#/components/schemas/MethodPZUpdate" },
                  { "$ref": "#/components/schemas/MethodSSUpdate" },
                  { "$ref": "#/components/schemas/MethodRWSUpdate" },
                  { "$ref": "#/components/schemas/MethodRCDUpdate" },
                  { "$ref": "#/components/schemas/MethodRSUpdate" },
                  { "$ref": "#/components/schemas/MethodSVTUpdate" },
                  { "$ref": "#/components/schemas/MethodSPTUpdate" },
                  { "$ref": "#/components/schemas/MethodCDUpdate" },
                  { "$ref": "#/components/schemas/MethodTPUpdate" },
                  { "$ref": "#/components/schemas/MethodPTUpdate" },
                  { "$ref": "#/components/schemas/MethodESAUpdate" },
                  { "$ref": "#/components/schemas/MethodADUpdate" },
                  { "$ref": "#/components/schemas/MethodROUpdate" },
                  { "$ref": "#/components/schemas/MethodINCUpdate" },
                  { "$ref": "#/components/schemas/MethodSRUpdate" },
                  { "$ref": "#/components/schemas/MethodIWUpdate" },
                  { "$ref": "#/components/schemas/MethodDTUpdate" },
                  { "$ref": "#/components/schemas/MethodOTHERUpdate" },
                  { "$ref": "#/components/schemas/MethodSRSUpdate" },
                  { "$ref": "#/components/schemas/MethodDPUpdate" },
                  { "$ref": "#/components/schemas/MethodWSTUpdate" }
                ],
                "discriminator": {
                  "propertyName": "method_type_id",
                  "mapping": {
                    "1": "#/components/schemas/MethodCPTUpdate",
                    "2": "#/components/schemas/MethodTOTUpdate",
                    "3": "#/components/schemas/MethodRPUpdate",
                    "4": "#/components/schemas/MethodSAUpdate",
                    "5": "#/components/schemas/MethodPZUpdate",
                    "6": "#/components/schemas/MethodSSUpdate",
                    "7": "#/components/schemas/MethodRWSUpdate",
                    "8": "#/components/schemas/MethodRCDUpdate",
                    "9": "#/components/schemas/MethodRSUpdate",
                    "10": "#/components/schemas/MethodSVTUpdate",
                    "11": "#/components/schemas/MethodSPTUpdate",
                    "12": "#/components/schemas/MethodCDUpdate",
                    "13": "#/components/schemas/MethodTPUpdate",
                    "14": "#/components/schemas/MethodPTUpdate",
                    "15": "#/components/schemas/MethodESAUpdate",
                    "17": "#/components/schemas/MethodADUpdate",
                    "18": "#/components/schemas/MethodROUpdate",
                    "19": "#/components/schemas/MethodINCUpdate",
                    "20": "#/components/schemas/MethodSRUpdate",
                    "21": "#/components/schemas/MethodIWUpdate",
                    "22": "#/components/schemas/MethodDTUpdate",
                    "23": "#/components/schemas/MethodOTHERUpdate",
                    "24": "#/components/schemas/MethodSRSUpdate",
                    "25": "#/components/schemas/MethodDPUpdate",
                    "26": "#/components/schemas/MethodWSTUpdate"
                  }
                },
                "title": "Method In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/MethodCPT" },
                    { "$ref": "#/components/schemas/MethodTOT" },
                    { "$ref": "#/components/schemas/MethodRP" },
                    { "$ref": "#/components/schemas/MethodSA" },
                    { "$ref": "#/components/schemas/MethodPZ" },
                    { "$ref": "#/components/schemas/MethodSS" },
                    { "$ref": "#/components/schemas/MethodRWS" },
                    { "$ref": "#/components/schemas/MethodRCD" },
                    { "$ref": "#/components/schemas/MethodRS" },
                    { "$ref": "#/components/schemas/MethodSVT" },
                    { "$ref": "#/components/schemas/MethodSPT" },
                    { "$ref": "#/components/schemas/MethodCD" },
                    { "$ref": "#/components/schemas/MethodTP" },
                    { "$ref": "#/components/schemas/MethodPT" },
                    { "$ref": "#/components/schemas/MethodESA" },
                    { "$ref": "#/components/schemas/MethodAD" },
                    { "$ref": "#/components/schemas/MethodRO" },
                    { "$ref": "#/components/schemas/MethodINC" },
                    { "$ref": "#/components/schemas/MethodSR" },
                    { "$ref": "#/components/schemas/MethodIW" },
                    { "$ref": "#/components/schemas/MethodDT" },
                    { "$ref": "#/components/schemas/MethodOTHER" },
                    { "$ref": "#/components/schemas/MethodSRS" },
                    { "$ref": "#/components/schemas/MethodDP" },
                    { "$ref": "#/components/schemas/MethodWST" }
                  ],
                  "discriminator": {
                    "propertyName": "method_type_id",
                    "mapping": {
                      "1": "#/components/schemas/MethodCPT",
                      "2": "#/components/schemas/MethodTOT",
                      "3": "#/components/schemas/MethodRP",
                      "4": "#/components/schemas/MethodSA",
                      "5": "#/components/schemas/MethodPZ",
                      "6": "#/components/schemas/MethodSS",
                      "7": "#/components/schemas/MethodRWS",
                      "8": "#/components/schemas/MethodRCD",
                      "9": "#/components/schemas/MethodRS",
                      "10": "#/components/schemas/MethodSVT",
                      "11": "#/components/schemas/MethodSPT",
                      "12": "#/components/schemas/MethodCD",
                      "13": "#/components/schemas/MethodTP",
                      "14": "#/components/schemas/MethodPT",
                      "15": "#/components/schemas/MethodESA",
                      "17": "#/components/schemas/MethodAD",
                      "18": "#/components/schemas/MethodRO",
                      "19": "#/components/schemas/MethodINC",
                      "20": "#/components/schemas/MethodSR",
                      "21": "#/components/schemas/MethodIW",
                      "22": "#/components/schemas/MethodDT",
                      "23": "#/components/schemas/MethodOTHER",
                      "24": "#/components/schemas/MethodSRS",
                      "25": "#/components/schemas/MethodDP",
                      "26": "#/components/schemas/MethodWST"
                    }
                  },
                  "title": "Response Update Method For Location Projects  Project Id  Locations  Location Id  Methods  Method Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["methods"],
        "summary": "Delete Method For Location",
        "description": "Delete method",
        "operationId": "delete_method_for_location_projects__project_id__locations__location_id__methods__method_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/type/{method_type_name}": {
      "get": {
        "tags": ["methods"],
        "summary": "Get Methods For Location Of Type",
        "description": "Get all methods of type `method_type_name` from location.",
        "operationId": "get_methods_for_location_of_type_projects__project_id__locations__location_id__methods_type__method_type_name__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_type_name",
            "in": "path",
            "required": true,
            "schema": { "$ref": "#/components/schemas/MethodTypeEnumStr" }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      { "$ref": "#/components/schemas/MethodCPT" },
                      { "$ref": "#/components/schemas/MethodTOT" },
                      { "$ref": "#/components/schemas/MethodRP" },
                      { "$ref": "#/components/schemas/MethodSA" },
                      { "$ref": "#/components/schemas/MethodPZ" },
                      { "$ref": "#/components/schemas/MethodSS" },
                      { "$ref": "#/components/schemas/MethodRWS" },
                      { "$ref": "#/components/schemas/MethodRCD" },
                      { "$ref": "#/components/schemas/MethodRS" },
                      { "$ref": "#/components/schemas/MethodSVT" },
                      { "$ref": "#/components/schemas/MethodSPT" },
                      { "$ref": "#/components/schemas/MethodCD" },
                      { "$ref": "#/components/schemas/MethodTP" },
                      { "$ref": "#/components/schemas/MethodPT" },
                      { "$ref": "#/components/schemas/MethodESA" },
                      { "$ref": "#/components/schemas/MethodAD" },
                      { "$ref": "#/components/schemas/MethodRO" },
                      { "$ref": "#/components/schemas/MethodINC" },
                      { "$ref": "#/components/schemas/MethodSR" },
                      { "$ref": "#/components/schemas/MethodIW" },
                      { "$ref": "#/components/schemas/MethodDT" },
                      { "$ref": "#/components/schemas/MethodOTHER" },
                      { "$ref": "#/components/schemas/MethodSRS" },
                      { "$ref": "#/components/schemas/MethodDP" },
                      { "$ref": "#/components/schemas/MethodWST" }
                    ],
                    "discriminator": {
                      "propertyName": "method_type_id",
                      "mapping": {
                        "1": "#/components/schemas/MethodCPT",
                        "2": "#/components/schemas/MethodTOT",
                        "3": "#/components/schemas/MethodRP",
                        "4": "#/components/schemas/MethodSA",
                        "5": "#/components/schemas/MethodPZ",
                        "6": "#/components/schemas/MethodSS",
                        "7": "#/components/schemas/MethodRWS",
                        "8": "#/components/schemas/MethodRCD",
                        "9": "#/components/schemas/MethodRS",
                        "10": "#/components/schemas/MethodSVT",
                        "11": "#/components/schemas/MethodSPT",
                        "12": "#/components/schemas/MethodCD",
                        "13": "#/components/schemas/MethodTP",
                        "14": "#/components/schemas/MethodPT",
                        "15": "#/components/schemas/MethodESA",
                        "17": "#/components/schemas/MethodAD",
                        "18": "#/components/schemas/MethodRO",
                        "19": "#/components/schemas/MethodINC",
                        "20": "#/components/schemas/MethodSR",
                        "21": "#/components/schemas/MethodIW",
                        "22": "#/components/schemas/MethodDT",
                        "23": "#/components/schemas/MethodOTHER",
                        "24": "#/components/schemas/MethodSRS",
                        "25": "#/components/schemas/MethodDP",
                        "26": "#/components/schemas/MethodWST"
                      }
                    }
                  },
                  "title": "Response Get Methods For Location Of Type Projects  Project Id  Locations  Location Id  Methods Type  Method Type Name  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/export": {
      "get": {
        "tags": ["methods", "export"],
        "summary": "Export",
        "description": "Endpoint for exporting specified method data.\n\nSupported **export_type** (MethodExportType):\n\n- **SND**: Download SND file.\n\nPlease note that offshore CPTs are split up into strokes that cover different depths. To get information for a\ncomplete offshore CPT you must either call this endpoint for each stroke,\nor use the location export endpoint.",
        "operationId": "export_projects__project_id__locations__location_id__methods__method_id__export_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          },
          {
            "name": "export_type",
            "in": "query",
            "required": true,
            "schema": { "$ref": "#/components/schemas/MethodExportType" }
          },
          {
            "name": "swap_x_y",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Swap X Y"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/files": {
      "get": {
        "tags": ["methods"],
        "summary": "Get Files For Method",
        "description": "Get the method's database file objects.",
        "operationId": "get_files_for_method_projects__project_id__locations__location_id__methods__method_id__files_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          },
          {
            "name": "file_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/FileType" },
                { "type": "null" }
              ],
              "title": "File Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/File" },
                  "title": "Response Get Files For Method Projects  Project Id  Locations  Location Id  Methods  Method Id  Files Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/data": {
      "get": {
        "tags": ["methods"],
        "summary": "Get Methods Data",
        "description": "Get the method's data",
        "operationId": "get_methods_data_projects__project_id__locations__location_id__methods__method_id__data_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      { "$ref": "#/components/schemas/MethodCPTData" },
                      { "$ref": "#/components/schemas/MethodDPData" },
                      { "$ref": "#/components/schemas/MethodDTData" },
                      { "$ref": "#/components/schemas/MethodPZData" },
                      { "$ref": "#/components/schemas/MethodRCDData" },
                      { "$ref": "#/components/schemas/MethodRPData" },
                      { "$ref": "#/components/schemas/MethodSSData" },
                      { "$ref": "#/components/schemas/MethodSRSData" },
                      { "$ref": "#/components/schemas/MethodSVTData" },
                      { "$ref": "#/components/schemas/MethodTOTData" },
                      { "$ref": "#/components/schemas/MethodWSTData" }
                    ],
                    "discriminator": {
                      "propertyName": "method_type_id",
                      "mapping": {
                        "1": "#/components/schemas/MethodCPTData",
                        "25": "#/components/schemas/MethodDPData",
                        "22": "#/components/schemas/MethodDTData",
                        "5": "#/components/schemas/MethodPZData",
                        "8": "#/components/schemas/MethodRCDData",
                        "3": "#/components/schemas/MethodRPData",
                        "6": "#/components/schemas/MethodSSData",
                        "24": "#/components/schemas/MethodSRSData",
                        "10": "#/components/schemas/MethodSVTData",
                        "2": "#/components/schemas/MethodTOTData",
                        "26": "#/components/schemas/MethodWSTData"
                      }
                    }
                  },
                  "title": "Response Get Methods Data Projects  Project Id  Locations  Location Id  Methods  Method Id  Data Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["methods"],
        "summary": "Create Data Row",
        "description": "Create a new data row for a method",
        "operationId": "create_data_row_projects__project_id__locations__location_id__methods__method_id__data_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/MethodCPTDataCreate" },
                  { "$ref": "#/components/schemas/MethodDPDataCreate" },
                  { "$ref": "#/components/schemas/MethodDTDataCreate" },
                  { "$ref": "#/components/schemas/MethodPZDataCreate" },
                  { "$ref": "#/components/schemas/MethodRCDDataCreate" },
                  { "$ref": "#/components/schemas/MethodRPDataCreate" },
                  { "$ref": "#/components/schemas/MethodSRSDataCreate" },
                  { "$ref": "#/components/schemas/MethodSSDataCreate" },
                  { "$ref": "#/components/schemas/MethodSVTDataCreate" },
                  { "$ref": "#/components/schemas/MethodTOTDataCreate" },
                  { "$ref": "#/components/schemas/MethodWSTDataCreate" }
                ],
                "discriminator": {
                  "propertyName": "method_type_id",
                  "mapping": {
                    "1": "#/components/schemas/MethodCPTDataCreate",
                    "25": "#/components/schemas/MethodDPDataCreate",
                    "22": "#/components/schemas/MethodDTDataCreate",
                    "5": "#/components/schemas/MethodPZDataCreate",
                    "8": "#/components/schemas/MethodRCDDataCreate",
                    "3": "#/components/schemas/MethodRPDataCreate",
                    "24": "#/components/schemas/MethodSRSDataCreate",
                    "6": "#/components/schemas/MethodSSDataCreate",
                    "10": "#/components/schemas/MethodSVTDataCreate",
                    "2": "#/components/schemas/MethodTOTDataCreate",
                    "26": "#/components/schemas/MethodWSTDataCreate"
                  }
                },
                "title": "Method Data In"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/MethodCPTData" },
                    { "$ref": "#/components/schemas/MethodDPData" },
                    { "$ref": "#/components/schemas/MethodDTData" },
                    { "$ref": "#/components/schemas/MethodPZData" },
                    { "$ref": "#/components/schemas/MethodRCDData" },
                    { "$ref": "#/components/schemas/MethodRPData" },
                    { "$ref": "#/components/schemas/MethodSSData" },
                    { "$ref": "#/components/schemas/MethodSRSData" },
                    { "$ref": "#/components/schemas/MethodSVTData" },
                    { "$ref": "#/components/schemas/MethodTOTData" },
                    { "$ref": "#/components/schemas/MethodWSTData" }
                  ],
                  "discriminator": {
                    "propertyName": "method_type_id",
                    "mapping": {
                      "1": "#/components/schemas/MethodCPTData",
                      "25": "#/components/schemas/MethodDPData",
                      "22": "#/components/schemas/MethodDTData",
                      "5": "#/components/schemas/MethodPZData",
                      "8": "#/components/schemas/MethodRCDData",
                      "3": "#/components/schemas/MethodRPData",
                      "6": "#/components/schemas/MethodSSData",
                      "24": "#/components/schemas/MethodSRSData",
                      "10": "#/components/schemas/MethodSVTData",
                      "2": "#/components/schemas/MethodTOTData",
                      "26": "#/components/schemas/MethodWSTData"
                    }
                  },
                  "title": "Response Create Data Row Projects  Project Id  Locations  Location Id  Methods  Method Id  Data Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/data/{method_data_id}": {
      "put": {
        "tags": ["methods"],
        "summary": "Update Data Row",
        "description": "Update a method's single data line",
        "operationId": "update_data_row_projects__project_id__locations__location_id__methods__method_id__data__method_data_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          },
          {
            "name": "method_data_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Data Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/MethodCPTDataUpdate" },
                  { "$ref": "#/components/schemas/MethodDTDataUpdate" },
                  { "$ref": "#/components/schemas/MethodPZDataUpdate" },
                  { "$ref": "#/components/schemas/MethodRCDDataUpdate" },
                  { "$ref": "#/components/schemas/MethodRPDataUpdate" },
                  { "$ref": "#/components/schemas/MethodSRSDataUpdate" },
                  { "$ref": "#/components/schemas/MethodSSDataUpdate" },
                  { "$ref": "#/components/schemas/MethodSVTDataUpdate" },
                  { "$ref": "#/components/schemas/MethodTOTDataUpdate" },
                  { "$ref": "#/components/schemas/MethodWSTDataUpdate" }
                ],
                "discriminator": {
                  "propertyName": "method_type_id",
                  "mapping": {
                    "1": "#/components/schemas/MethodCPTDataUpdate",
                    "22": "#/components/schemas/MethodDTDataUpdate",
                    "5": "#/components/schemas/MethodPZDataUpdate",
                    "8": "#/components/schemas/MethodRCDDataUpdate",
                    "3": "#/components/schemas/MethodRPDataUpdate",
                    "24": "#/components/schemas/MethodSRSDataUpdate",
                    "6": "#/components/schemas/MethodSSDataUpdate",
                    "10": "#/components/schemas/MethodSVTDataUpdate",
                    "2": "#/components/schemas/MethodTOTDataUpdate",
                    "26": "#/components/schemas/MethodWSTDataUpdate"
                  }
                },
                "title": "Method Data In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/MethodCPTData" },
                    { "$ref": "#/components/schemas/MethodDPData" },
                    { "$ref": "#/components/schemas/MethodDTData" },
                    { "$ref": "#/components/schemas/MethodPZData" },
                    { "$ref": "#/components/schemas/MethodRCDData" },
                    { "$ref": "#/components/schemas/MethodRPData" },
                    { "$ref": "#/components/schemas/MethodSSData" },
                    { "$ref": "#/components/schemas/MethodSRSData" },
                    { "$ref": "#/components/schemas/MethodSVTData" },
                    { "$ref": "#/components/schemas/MethodTOTData" },
                    { "$ref": "#/components/schemas/MethodWSTData" }
                  ],
                  "discriminator": {
                    "propertyName": "method_type_id",
                    "mapping": {
                      "1": "#/components/schemas/MethodCPTData",
                      "25": "#/components/schemas/MethodDPData",
                      "22": "#/components/schemas/MethodDTData",
                      "5": "#/components/schemas/MethodPZData",
                      "8": "#/components/schemas/MethodRCDData",
                      "3": "#/components/schemas/MethodRPData",
                      "6": "#/components/schemas/MethodSSData",
                      "24": "#/components/schemas/MethodSRSData",
                      "10": "#/components/schemas/MethodSVTData",
                      "2": "#/components/schemas/MethodTOTData",
                      "26": "#/components/schemas/MethodWSTData"
                    }
                  },
                  "title": "Response Update Data Row Projects  Project Id  Locations  Location Id  Methods  Method Id  Data  Method Data Id  Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["methods"],
        "summary": "Delete Data Row",
        "description": "Delete a data row",
        "operationId": "delete_data_row_projects__project_id__locations__location_id__methods__method_id__data__method_data_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          },
          {
            "name": "method_data_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Data Id"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/upload": {
      "post": {
        "tags": ["methods", "files"],
        "summary": "Upload File",
        "description": "Upload method file.\n\nThis endpoint will only allow that the passed in file contains one method.\n\nMulti-method or multi-stroke files should be uploaded to the location endpoint.\n\nIf the file uploaded does not have a recognized method file extension, it is uploaded as a\n\"general file\" and not parsed.",
        "operationId": "upload_file_projects__project_id__locations__location_id__methods__method_id__upload_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_projects__project_id__locations__location_id__methods__method_id__upload_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "oneOf": [
                        { "$ref": "#/components/schemas/MethodCPT" },
                        { "$ref": "#/components/schemas/MethodTOT" },
                        { "$ref": "#/components/schemas/MethodRP" },
                        { "$ref": "#/components/schemas/MethodSA" },
                        { "$ref": "#/components/schemas/MethodPZ" },
                        { "$ref": "#/components/schemas/MethodSS" },
                        { "$ref": "#/components/schemas/MethodRWS" },
                        { "$ref": "#/components/schemas/MethodRCD" },
                        { "$ref": "#/components/schemas/MethodRS" },
                        { "$ref": "#/components/schemas/MethodSVT" },
                        { "$ref": "#/components/schemas/MethodSPT" },
                        { "$ref": "#/components/schemas/MethodCD" },
                        { "$ref": "#/components/schemas/MethodTP" },
                        { "$ref": "#/components/schemas/MethodPT" },
                        { "$ref": "#/components/schemas/MethodESA" },
                        { "$ref": "#/components/schemas/MethodAD" },
                        { "$ref": "#/components/schemas/MethodRO" },
                        { "$ref": "#/components/schemas/MethodINC" },
                        { "$ref": "#/components/schemas/MethodSR" },
                        { "$ref": "#/components/schemas/MethodIW" },
                        { "$ref": "#/components/schemas/MethodDT" },
                        { "$ref": "#/components/schemas/MethodOTHER" },
                        { "$ref": "#/components/schemas/MethodSRS" },
                        { "$ref": "#/components/schemas/MethodDP" },
                        { "$ref": "#/components/schemas/MethodWST" }
                      ],
                      "discriminator": {
                        "propertyName": "method_type_id",
                        "mapping": {
                          "1": "#/components/schemas/MethodCPT",
                          "2": "#/components/schemas/MethodTOT",
                          "3": "#/components/schemas/MethodRP",
                          "4": "#/components/schemas/MethodSA",
                          "5": "#/components/schemas/MethodPZ",
                          "6": "#/components/schemas/MethodSS",
                          "7": "#/components/schemas/MethodRWS",
                          "8": "#/components/schemas/MethodRCD",
                          "9": "#/components/schemas/MethodRS",
                          "10": "#/components/schemas/MethodSVT",
                          "11": "#/components/schemas/MethodSPT",
                          "12": "#/components/schemas/MethodCD",
                          "13": "#/components/schemas/MethodTP",
                          "14": "#/components/schemas/MethodPT",
                          "15": "#/components/schemas/MethodESA",
                          "17": "#/components/schemas/MethodAD",
                          "18": "#/components/schemas/MethodRO",
                          "19": "#/components/schemas/MethodINC",
                          "20": "#/components/schemas/MethodSR",
                          "21": "#/components/schemas/MethodIW",
                          "22": "#/components/schemas/MethodDT",
                          "23": "#/components/schemas/MethodOTHER",
                          "24": "#/components/schemas/MethodSRS",
                          "25": "#/components/schemas/MethodDP",
                          "26": "#/components/schemas/MethodWST"
                        }
                      }
                    },
                    { "type": "null" }
                  ],
                  "title": "Response Upload File Projects  Project Id  Locations  Location Id  Methods  Method Id  Upload Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/files/{file_id}": {
      "delete": {
        "tags": ["methods", "files"],
        "summary": "Delete File",
        "description": "Delete file and method data.\n\nDelete file and method data for passed project/location/method_id and file_id. A file may be the source\nfor several methods, so we don't delete the file blob before the last method data reference is deleted.",
        "operationId": "delete_file_projects__project_id__locations__location_id__methods__method_id__files__file_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Method Id"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/gis/onshore": {
      "get": {
        "tags": ["gis"],
        "summary": "Get Locations In Project",
        "description": "Special endpoint for getting a project's locations flattened with limited aggregated method data. One row per\nlocation.",
        "operationId": "get_locations_in_project_projects__project_id__gis_onshore_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 0, "title": "Skip" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": { "type": "integer", "default": 100, "title": "Limit" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/LocationGis" },
                  "title": "Response Get Locations In Project Projects  Project Id  Gis Onshore Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/location_iogp_types": {
      "get": {
        "tags": ["location types"],
        "summary": "Get Location Iogp Types",
        "operationId": "get_location_iogp_types_location_iogp_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/IOGPType" },
                  "type": "array",
                  "title": "Response Get Location Iogp Types Location Iogp Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/location_iogp_types/{iogp_type_id}": {
      "get": {
        "tags": ["location types"],
        "summary": "Get Location Iogp Type",
        "operationId": "get_location_iogp_type_location_iogp_types__iogp_type_id__get",
        "parameters": [
          {
            "name": "iogp_type_id",
            "in": "path",
            "required": true,
            "schema": { "$ref": "#/components/schemas/IOGPTypeEnum" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/IOGPType" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/map_layouts": {
      "get": {
        "tags": ["map layouts"],
        "summary": "Get Map Layouts In Project",
        "description": "Get all map layouts for project.",
        "operationId": "get_map_layouts_in_project_projects__project_id__map_layouts_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/MapLayout" },
                  "title": "Response Get Map Layouts In Project Projects  Project Id  Map Layouts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["map layouts"],
        "summary": "Delete Map Layouts In Project",
        "description": "Delete all specified map layouts (map_layout_ids) and their map layout versions for the project with project_id.",
        "operationId": "delete_map_layouts_in_project_projects__project_id__map_layouts_delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "type": "string", "format": "uuid" },
                "title": "Map Layout Ids"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["map layouts"],
        "summary": "Add Map Layout To Project",
        "description": "Add map layout to project.",
        "operationId": "add_map_layout_to_project_projects__project_id__map_layouts_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MapLayoutCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MapLayout" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/map_layouts/{map_layout_id}": {
      "get": {
        "tags": ["map layouts"],
        "summary": "Get Map Layout In Project",
        "description": "Get map layout by project_id and map_layout_id.",
        "operationId": "get_map_layout_in_project_projects__project_id__map_layouts__map_layout_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "map_layout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Map Layout Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MapLayout" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["map layouts"],
        "summary": "Delete Map Layout In Project",
        "description": "Delete map layout by project_id and map_layout_id.",
        "operationId": "delete_map_layout_in_project_projects__project_id__map_layouts__map_layout_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "map_layout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Map Layout Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["map layouts"],
        "summary": "Update Map Layout In Project",
        "description": "Update map layout by project_id and map_layout_id.",
        "operationId": "update_map_layout_in_project_projects__project_id__map_layouts__map_layout_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "map_layout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Map Layout Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MapLayoutUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MapLayout" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/map_layouts/{map_layout_id}/versions": {
      "post": {
        "tags": ["map layouts"],
        "summary": "Add Map Layout Version",
        "description": "Add map layout version to map layout.",
        "operationId": "add_map_layout_version_projects__project_id__map_layouts__map_layout_id__versions_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "map_layout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Map Layout Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapLayoutVersionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MapLayoutVersion" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/map_layouts/{map_layout_id}/versions/{map_layout_version_id}": {
      "put": {
        "tags": ["map layouts"],
        "summary": "Update Map Layout Version",
        "description": "Update map layout version by project_id, map_layout_id and map_layout_version_id.",
        "operationId": "update_map_layout_version_projects__project_id__map_layouts__map_layout_id__versions__map_layout_version_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "map_layout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Map Layout Id"
            }
          },
          {
            "name": "map_layout_version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Map Layout Version Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapLayoutVersionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MapLayoutVersion" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["map layouts"],
        "summary": "Delete Map Layout Version",
        "description": "Delete map layout version by project_id, map_layout_id and map_layout_version_id.",
        "operationId": "delete_map_layout_version_projects__project_id__map_layouts__map_layout_id__versions__map_layout_version_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "map_layout_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Map Layout Id"
            }
          },
          {
            "name": "map_layout_version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Map Layout Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/method_types": {
      "get": {
        "tags": ["method types"],
        "summary": "Get Method Types",
        "operationId": "get_method_types_method_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/MethodType" },
                  "type": "array",
                  "title": "Response Get Method Types Method Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/method_types/{method_type_id}": {
      "get": {
        "tags": ["method types"],
        "summary": "Get Method Type",
        "operationId": "get_method_type_method_types__method_type_id__get",
        "parameters": [
          {
            "name": "method_type_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Method Type Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MethodType" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/sampling_techniques": {
      "get": {
        "tags": ["sampling techniques"],
        "summary": "Get Sampling Techniques",
        "operationId": "get_sampling_techniques_sampling_techniques_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/SamplingTechnique" },
                  "type": "array",
                  "title": "Response Get Sampling Techniques Sampling Techniques Get"
                }
              }
            }
          }
        }
      }
    },
    "/sampling_techniques/{sampling_technique_id}": {
      "get": {
        "tags": ["sampling techniques"],
        "summary": "Get Sampling Technique",
        "operationId": "get_sampling_technique_sampling_techniques__sampling_technique_id__get",
        "parameters": [
          {
            "name": "sampling_technique_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sampling Technique Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SamplingTechnique" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/sample_materials": {
      "get": {
        "tags": ["sample materials"],
        "summary": "Get Sample Materials",
        "operationId": "get_sample_materials_sample_materials_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/SampleMaterial" },
                  "type": "array",
                  "title": "Response Get Sample Materials Sample Materials Get"
                }
              }
            }
          }
        }
      }
    },
    "/sample_materials/{sample_material_id}": {
      "get": {
        "tags": ["sample materials"],
        "summary": "Get Sample Material",
        "operationId": "get_sample_material_sample_materials__sample_material_id__get",
        "parameters": [
          {
            "name": "sample_material_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sample Material Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SampleMaterial" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/sample_containers": {
      "get": {
        "tags": ["sample containers"],
        "summary": "Get Sample Containers",
        "operationId": "get_sample_containers_sample_containers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SampleContainerType"
                  },
                  "type": "array",
                  "title": "Response Get Sample Containers Sample Containers Get"
                }
              }
            }
          }
        }
      }
    },
    "/sample_containers/{sample_container_type_id}": {
      "get": {
        "tags": ["sample containers"],
        "summary": "Get Sample Container",
        "operationId": "get_sample_container_sample_containers__sample_container_type_id__get",
        "parameters": [
          {
            "name": "sample_container_type_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sample Container Type Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SampleContainerType" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/sampler_types": {
      "get": {
        "tags": ["sampler types"],
        "summary": "Get Sampler Types",
        "operationId": "get_sampler_types_sampler_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/SamplerType" },
                  "type": "array",
                  "title": "Response Get Sampler Types Sampler Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/sampler_types/{sampler_type_id}": {
      "get": {
        "tags": ["sampler types"],
        "summary": "Get Sampler Type",
        "operationId": "get_sampler_type_sampler_types__sampler_type_id__get",
        "parameters": [
          {
            "name": "sampler_type_id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "title": "Sampler Type Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SamplerType" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/standards": {
      "get": {
        "tags": ["standards"],
        "summary": "Get Project Standards",
        "operationId": "get_project_standards_standards_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/Standard" },
                  "type": "array",
                  "title": "Response Get Project Standards Standards Get"
                }
              }
            }
          }
        }
      }
    },
    "/standards/{standard_id}": {
      "get": {
        "tags": ["standards"],
        "summary": "Get Standard",
        "operationId": "get_standard_standards__standard_id__get",
        "parameters": [
          {
            "name": "standard_id",
            "in": "path",
            "required": true,
            "schema": { "$ref": "#/components/schemas/StandardType" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/StandardType" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/piezometers/models": {
      "get": {
        "tags": ["piezometers"],
        "summary": "Get Piezometer Models",
        "operationId": "get_piezometer_models_projects__project_id__piezometers_models_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PiezometerModel" },
                  "title": "Response Get Piezometer Models Projects  Project Id  Piezometers Models Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["piezometers"],
        "summary": "Create Piezometer Model",
        "description": "Create a new piezometer model",
        "operationId": "create_piezometer_model_projects__project_id__piezometers_models_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PiezometerModelCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PiezometerModel" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/piezometers/models/{model_id}": {
      "get": {
        "tags": ["piezometers"],
        "summary": "Get Piezometer Model",
        "operationId": "get_piezometer_model_projects__project_id__piezometers_models__model_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Model Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PiezometerModel" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["piezometers"],
        "summary": "Update Piezometer Model",
        "description": "Update piezometer model",
        "operationId": "update_piezometer_model_projects__project_id__piezometers_models__model_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "model_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Model Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PiezometerModelUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PiezometerModel" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/piezometers/vendors": {
      "get": {
        "tags": ["piezometers"],
        "summary": "Get Piezometer Vendors",
        "operationId": "get_piezometer_vendors_projects__project_id__piezometers_vendors_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PiezometerVendor" },
                  "title": "Response Get Piezometer Vendors Projects  Project Id  Piezometers Vendors Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/piezometers/vendors/{vendor_id}": {
      "get": {
        "tags": ["piezometers"],
        "summary": "Get Piezometer Vendor",
        "operationId": "get_piezometer_vendor_projects__project_id__piezometers_vendors__vendor_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "vendor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Vendor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PiezometerVendor" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/piezometers/units": {
      "get": {
        "tags": ["piezometers"],
        "summary": "Get Piezometer Units",
        "description": "Return a list of the supported piezometer units.\n\nPlease note that None is also a possible unit (meaning no unit selected)",
        "operationId": "get_piezometer_units_piezometers_units_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/PizeometerUnits" },
                  "type": "array",
                  "title": "Response Get Piezometer Units Piezometers Units Get"
                }
              }
            }
          }
        }
      }
    },
    "/plots/project/{project_id}/plot_sequence/{format}": {
      "post": {
        "tags": ["plots"],
        "summary": "Get Plot Sequence",
        "description": "Get the plots sequence from any location within a given project.",
        "operationId": "get_plot_sequence_plots_project__project_id__plot_sequence__format__post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": { "$ref": "#/components/schemas/PlotFormat" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  { "$ref": "#/components/schemas/Options" },
                  { "type": "null" }
                ],
                "title": "Options"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get the plot sequence for the selected locations",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PlotSequence-Output" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/plots/project/{project_id}/{format}": {
      "post": {
        "tags": ["plots"],
        "summary": "Get Plot From Sequence",
        "description": "Get the plots sequence from any location within a given project.",
        "operationId": "get_plot_from_sequence_plots_project__project_id___format__post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": { "$ref": "#/components/schemas/PlotFormat" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PlotSequence-Input" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get the pdf sequence for the given plot sequence",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/files/{file_id}/token": {
      "get": {
        "tags": ["files", "projects"],
        "summary": "File Token",
        "description": "Get a token for the file blob content by project_id and file_id that later can be used to download that file",
        "operationId": "file_token_projects__project_id__files__file_id__token_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/token": {
      "get": {
        "tags": ["files", "projects"],
        "summary": "Project Token",
        "description": "Get a token for the project_id to use for file downloads within the project",
        "operationId": "project_token_projects__project_id__token_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/files/{file_id}/download": {
      "get": {
        "tags": ["files", "projects"],
        "summary": "Download File",
        "description": "Download the file blob content by project_id and file_id",
        "operationId": "download_file_projects__project_id__files__file_id__download_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/ImageSize" },
                { "type": "null" }
              ],
              "default": "ORIGINAL",
              "title": "Size"
            }
          },
          {
            "name": "geojson",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "title": "Geojson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/download/projects/{project_id}/file": {
      "get": {
        "tags": ["files", "projects"],
        "summary": "Download File Via Token",
        "description": "Download the file specified in the token",
        "operationId": "download_file_via_token_download_projects__project_id__file_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Token" }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/ImageSize" },
                { "type": "null" }
              ],
              "default": "ORIGINAL",
              "title": "Size"
            }
          },
          {
            "name": "geojson",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "default": false,
              "title": "Geojson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/download/projects/{project_id}/file/{file_id}": {
      "get": {
        "tags": ["files", "projects"],
        "summary": "Download File With Temporary Project Token",
        "description": "Download the file specified in the token",
        "operationId": "download_file_with_temporary_project_token_download_projects__project_id__file__file_id__get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          },
          {
            "name": "file_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "File Id" }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Token" }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "$ref": "#/components/schemas/ImageSize" },
                { "type": "null" }
              ],
              "default": "ORIGINAL",
              "title": "Size"
            }
          },
          {
            "name": "geojson",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "boolean" }, { "type": "null" }],
              "title": "Geojson"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/download/projects/{project_id}/export/files": {
      "get": {
        "tags": ["files", "projects"],
        "summary": "Export Files Via Token",
        "description": "Export specified project files in one zip file.\n\nNot limited to files only attached to the project, but also files attached to\nlocations and methods in the specified project.",
        "operationId": "export_files_via_token_download_projects__project_id__export_files_get",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Project Id"
            }
          },
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Token" }
          },
          {
            "name": "file_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "uuid" },
              "title": "File Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/comments": {
      "post": {
        "tags": ["comments"],
        "summary": "Submit Comment",
        "description": "Submit new comment on method or location",
        "operationId": "submit_comment_projects__project_id__locations__location_id__methods__method_id__comments_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CommentCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Comment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["comments"],
        "summary": "Get Comments",
        "description": "Get all non-deleted comments, along with associated likes, on a given method or location",
        "operationId": "get_comments_projects__project_id__locations__location_id__methods__method_id__comments_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Comment" },
                  "title": "Response Get Comments Projects  Project Id  Locations  Location Id  Methods  Method Id  Comments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/comments": {
      "post": {
        "tags": ["comments"],
        "summary": "Submit Comment",
        "description": "Submit new comment on method or location",
        "operationId": "submit_comment_projects__project_id__locations__location_id__comments_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CommentCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Comment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["comments"],
        "summary": "Get Comments",
        "description": "Get all non-deleted comments, along with associated likes, on a given method or location",
        "operationId": "get_comments_projects__project_id__locations__location_id__comments_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "method_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Comment" },
                  "title": "Response Get Comments Projects  Project Id  Locations  Location Id  Comments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/comments/{comment_id}": {
      "delete": {
        "tags": ["comments"],
        "summary": "Delete Comment",
        "description": "Soft delete comment by setting is_deleted true\nOnly the comment creator and project admins are allowed to delete comments",
        "operationId": "delete_comment_projects__project_id__locations__location_id__methods__method_id__comments__comment_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Comment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/comments/{comment_id}": {
      "delete": {
        "tags": ["comments"],
        "summary": "Delete Comment",
        "description": "Soft delete comment by setting is_deleted true\nOnly the comment creator and project admins are allowed to delete comments",
        "operationId": "delete_comment_projects__project_id__locations__location_id__comments__comment_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "method_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Comment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/comments/{comment_id}/text": {
      "put": {
        "tags": ["comments"],
        "summary": "Modify Comment",
        "operationId": "modify_comment_projects__project_id__locations__location_id__methods__method_id__comments__comment_id__text_put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CommentUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Comment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/comments/{comment_id}/text": {
      "put": {
        "tags": ["comments"],
        "summary": "Modify Comment",
        "operationId": "modify_comment_projects__project_id__locations__location_id__comments__comment_id__text_put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "method_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CommentUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Comment" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/comments/{comment_id}/likes": {
      "post": {
        "tags": ["comments"],
        "summary": "Like Comment",
        "description": "Like a comment",
        "operationId": "like_comment_projects__project_id__locations__location_id__methods__method_id__comments__comment_id__likes_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Like" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["comments"],
        "summary": "Get Likes",
        "description": "Get likes on a comment",
        "operationId": "get_likes_projects__project_id__locations__location_id__methods__method_id__comments__comment_id__likes_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Like" },
                  "title": "Response Get Likes Projects  Project Id  Locations  Location Id  Methods  Method Id  Comments  Comment Id  Likes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/comments/{comment_id}/likes": {
      "post": {
        "tags": ["comments"],
        "summary": "Like Comment",
        "description": "Like a comment",
        "operationId": "like_comment_projects__project_id__locations__location_id__comments__comment_id__likes_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "method_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Like" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["comments"],
        "summary": "Get Likes",
        "description": "Get likes on a comment",
        "operationId": "get_likes_projects__project_id__locations__location_id__comments__comment_id__likes_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "method_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Like" },
                  "title": "Response Get Likes Projects  Project Id  Locations  Location Id  Comments  Comment Id  Likes Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/methods/{method_id}/comments/{comment_id}/likes/{like_id}": {
      "delete": {
        "tags": ["comments"],
        "summary": "Unlike Comment",
        "operationId": "unlike_comment_projects__project_id__locations__location_id__methods__method_id__comments__comment_id__likes__like_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "like_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Like Id" }
          },
          {
            "name": "method_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Like" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/locations/{location_id}/comments/{comment_id}/likes/{like_id}": {
      "delete": {
        "tags": ["comments"],
        "summary": "Unlike Comment",
        "operationId": "unlike_comment_projects__project_id__locations__location_id__comments__comment_id__likes__like_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Location Id"
            }
          },
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comment Id"
            }
          },
          {
            "name": "like_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Like Id" }
          },
          {
            "name": "method_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "uuid" },
                { "type": "null" }
              ],
              "title": "Method Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Like" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/cross_sections": {
      "post": {
        "tags": ["cross_sections"],
        "summary": "Create Cross Section",
        "description": "Create a new cross section for a project.",
        "operationId": "create_cross_section_projects__project_id__cross_sections_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CrossSectionCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CrossSection" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["cross_sections"],
        "summary": "Get Cross Sections For Project",
        "description": "Get non-deleted cross sections for a project.",
        "operationId": "get_cross_sections_for_project_projects__project_id__cross_sections_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/CrossSection" },
                  "title": "Response Get Cross Sections For Project Projects  Project Id  Cross Sections Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["cross_sections"],
        "summary": "Delete Cross Sections",
        "description": "Delete a cross section.",
        "operationId": "delete_cross_sections_projects__project_id__cross_sections_delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "cross_section_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "uuid" },
              "title": "Cross Section Ids"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/cross_sections/{cross_section_id}": {
      "get": {
        "tags": ["cross_sections"],
        "summary": "Get Cross Section",
        "description": "Get a cross section.",
        "operationId": "get_cross_section_projects__project_id__cross_sections__cross_section_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "cross_section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cross Section Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CrossSection" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["cross_sections"],
        "summary": "Delete Cross Section",
        "description": "Delete a cross section.",
        "operationId": "delete_cross_section_projects__project_id__cross_sections__cross_section_id__delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "cross_section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cross Section Id"
            }
          }
        ],
        "responses": {
          "204": { "description": "Successful Response" },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["cross_sections"],
        "summary": "Update Cross Section",
        "description": "Update a cross section.",
        "operationId": "update_cross_section_projects__project_id__cross_sections__cross_section_id__put",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "cross_section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cross Section Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CrossSectionUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CrossSection" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/cross_sections/{cross_section_id}/{format}": {
      "get": {
        "tags": ["cross_sections"],
        "summary": "Get Cross Section Plot",
        "operationId": "get_cross_section_plot_projects__project_id__cross_sections__cross_section_id___format__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "cross_section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Cross Section Id"
            }
          },
          {
            "name": "format",
            "in": "path",
            "required": true,
            "schema": {
              "enum": ["dxf", "svg"],
              "type": "string",
              "title": "Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the dxf plot",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/export/files": {
      "get": {
        "tags": ["export", "projects"],
        "summary": "Export Files",
        "description": "Export specified project files in one zip file.\n\nNot limited to files only attached to the project, but also files attached to\nlocations and methods in the specified project.",
        "operationId": "export_files_projects__project_id__export_files_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          },
          {
            "name": "file_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "format": "uuid" },
              "title": "File Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/export": {
      "post": {
        "tags": ["export", "projects"],
        "summary": "Export",
        "description": "Endpoint for exporting project data.\n\nSupported **export_type**:\n\n- **ProjectFiles**: Download files, with ID listed in the file_ids, in a Zip file.\n- **LocationGeoJSON**: Download GeoJSON files.\n- **LocationKOF**: Download KOF files.\n- **LocationCSV**: Download CSV file with key location information (onshore format).\n- **LocationXLS**: Download Excel file with key location information (onshore format).\n- **MethodFiles**: Download all original uploaded source data files.\n- **MethodSND**: Download SND files for all methods in a Zip file.\n- **MethodXLS**: Download Excel file with method data (offshore format).\n\n**method_status_ids**: Filter methods by status. Only return specified statuses. Empty list means all statuses.\n\n**method_type_ids**: Filter methods by type. Only return specified method types. Empty list means all types.\n\n**method_conducted_from**: Optional filter. Only return methods conducted after this time.\n\n**method_conducted_to**: Optional filter. Only return methods conducted before (this time + one day).",
        "operationId": "export_projects__project_id__export_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Export" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": ["version"],
        "summary": "Get Version",
        "description": "Return the version of the Field Manager data API (backend).",
        "operationId": "get_version_version_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": ["users"],
        "summary": "Get User",
        "operationId": "get_user_users__user_id__get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User-Output" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/users": {
      "get": {
        "tags": ["organizations", "users"],
        "summary": "Get Organization Users",
        "description": "Get an organization's users. That is all users that have a direct role to the organization with\nthe passed organization_id.",
        "operationId": "get_organization_users_organizations__organization_id__users_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User-Output" },
                  "title": "Response Get Organization Users Organizations  Organization Id  Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["users"],
        "summary": "Get Users",
        "description": "Return all users the caller has access to.\n\nApplication admin will get all users in the system.\n\nOrganization user (ADMIN/VIEWER) will get all users with a role in the caller's organizations or the caller's\norganizations' projects.\n\nProject user (ADMIN/EDITOR/VIEWER) will get all users with a role in the caller's projects. Not get users that have\na role in the projects' organizations.\n\nThis endpoint is potentially very slow, so consider using other endpoints like `GET /projects/{project_id}/users` or\n`GET /organization/{organization_id}/users` to restrict the search and result set.",
        "operationId": "get_users_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/User-Output" },
                  "type": "array",
                  "title": "Response Get Users Users Get"
                }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      },
      "post": {
        "tags": ["users"],
        "summary": "Add User",
        "description": "Add a new user with roles.\n\nApplication Admins can add users with any roles everywhere.\nOrganization Admins can add users with any roles in own organization and their projects.\nProject Admins may only add users to their own projects.",
        "operationId": "add_user_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User-Input" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User-Output" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "HTTPBearer": [] }]
      }
    },
    "/users/{user_id}/roles": {
      "post": {
        "tags": ["users"],
        "summary": "Add User Role",
        "operationId": "add_user_role_users__user_id__roles_post",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Role" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User-Output" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users"],
        "summary": "Remove User Role",
        "description": "Delete a user's role\n\nYou need to be either an application administrator, organization administrator or a project administrator in the\nsame project as the role is attached to.\n\nThe role_name parameter is the string representation of the role. The format is \"admin--\"",
        "operationId": "remove_user_role_users__user_id__roles_delete",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          },
          {
            "name": "role_name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Role Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User-Output" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/projects/{project_id}/users": {
      "get": {
        "tags": ["projects", "users"],
        "summary": "Get Project Users",
        "operationId": "get_project_users_projects__project_id__users_get",
        "security": [{ "HTTPBearer": [] }],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Project Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User-Output" },
                  "title": "Response Get Project Users Projects  Project Id  Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/public/organizations/{email_address}": {
      "get": {
        "tags": ["public", "organizations"],
        "summary": "Get Organization By Email Address",
        "description": "Return a specific organization by email_address.",
        "operationId": "get_organization_by_email_address_public_organizations__email_address__get",
        "parameters": [
          {
            "name": "email_address",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "title": "Email Address" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/OrganizationMin" },
                    { "type": "null" }
                  ],
                  "title": "Response Get Organization By Email Address Public Organizations  Email Address  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/public/organizations/{organization_id}/information": {
      "get": {
        "tags": ["public", "organizations"],
        "summary": "Get Organization Information",
        "description": "Return a specified organization's login information.",
        "operationId": "get_organization_information_public_organizations__organization_id__information_get",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationInformation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApplicationClassEnum": {
        "type": "integer",
        "enum": [1, 2, 3, 4, 10, 100],
        "title": "ApplicationClassEnum",
        "description": "(\nONE=1,\nTWO=2,\nTHREE=3,\nFOUR=4,\nOUT_OF_BOUNDS=10,\nUNKNOWN=100,\n)"
      },
      "BackgroundMapLayer": {
        "type": "string",
        "enum": [
          "STREET_MAP_WORLD",
          "BACKGROUND_NORWAY",
          "SATELLITE_NORWAY",
          "GEBCO_WORLD",
          "NORWAY_TOPOGRAPHIC",
          "NORWAY_TOPOGRAPHIC_GRAYSCALE"
        ],
        "title": "BackgroundMapLayer",
        "description": "Background map layers. Default is STREET_MAP_WORLD."
      },
      "BedrockInfo": {
        "properties": {
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth"
          },
          "bedrock_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/BedrockType" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "title": "BedrockInfo"
      },
      "BedrockType": {
        "type": "string",
        "enum": ["ROCK_LAYER", "POSSIBLY_BEDROCK", "BEDROCK"],
        "title": "BedrockType"
      },
      "Body_queue_locations_to_project_projects__project_id__locations_queue_post": {
        "properties": {
          "file": { "type": "string", "format": "binary", "title": "File" },
          "comment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Comment",
            "default": ""
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_queue_locations_to_project_projects__project_id__locations_queue_post"
      },
      "Body_upload_file_projects__project_id__locations__location_id__methods__method_id__upload_post": {
        "properties": {
          "comment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Comment",
            "default": ""
          },
          "file": { "type": "string", "format": "binary", "title": "File" }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_file_projects__project_id__locations__location_id__methods__method_id__upload_post"
      },
      "Body_upload_file_to_location_projects__project_id__locations__location_id__upload_post": {
        "properties": {
          "file": { "type": "string", "format": "binary", "title": "File" },
          "comment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Comment",
            "default": ""
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_file_to_location_projects__project_id__locations__location_id__upload_post"
      },
      "Body_upload_file_to_organization_organizations__organization_id__upload_post": {
        "properties": {
          "file": { "type": "string", "format": "binary", "title": "File" },
          "comment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Comment",
            "default": ""
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_file_to_organization_organizations__organization_id__upload_post"
      },
      "Body_upload_file_to_project_projects__project_id__upload_post": {
        "properties": {
          "file": { "type": "string", "format": "binary", "title": "File" },
          "comment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Comment",
            "default": ""
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_file_to_project_projects__project_id__upload_post"
      },
      "Body_upload_locations_to_project_projects__project_id__locations_upload_post": {
        "properties": {
          "file": { "type": "string", "format": "binary", "title": "File" },
          "comment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Comment",
            "default": ""
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_locations_to_project_projects__project_id__locations_upload_post"
      },
      "CPTOptions": {
        "properties": {
          "scaling_mode": {
            "$ref": "#/components/schemas/ScalingMode",
            "default": "percentile"
          },
          "percentile": {
            "type": "number",
            "title": "Percentile",
            "default": 0.975
          }
        },
        "type": "object",
        "title": "CPTOptions"
      },
      "ColorMode": {
        "type": "string",
        "enum": ["color", "grayscale"],
        "title": "ColorMode"
      },
      "Comment": {
        "properties": {
          "text": { "type": "string", "title": "Text" },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "title": "Created By"
          },
          "user_name": { "type": "string", "title": "User Name" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_updated": { "type": "boolean", "title": "Is Updated" },
          "is_deleted": { "type": "boolean", "title": "Is Deleted" },
          "comment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Comment Id"
          },
          "location_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Location Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "likes": {
            "items": { "$ref": "#/components/schemas/Like" },
            "type": "array",
            "title": "Likes",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "text",
          "created_by",
          "user_name",
          "created_at",
          "updated_at",
          "is_updated",
          "is_deleted",
          "comment_id",
          "location_id",
          "method_id"
        ],
        "title": "Comment"
      },
      "CommentCreate": {
        "properties": { "text": { "type": "string", "title": "Text" } },
        "type": "object",
        "required": ["text"],
        "title": "CommentCreate"
      },
      "CommentUpdate": {
        "properties": { "text": { "type": "string", "title": "Text" } },
        "type": "object",
        "required": ["text"],
        "title": "CommentUpdate"
      },
      "CrossSection": {
        "properties": {
          "cross_section_id": {
            "type": "string",
            "format": "uuid",
            "title": "Cross Section Id"
          },
          "horizontal_scale": { "type": "string", "title": "Horizontal Scale" },
          "vertical_scale": { "type": "string", "title": "Vertical Scale" },
          "method_ids": {
            "items": { "type": "string", "format": "uuid" },
            "type": "array",
            "title": "Method Ids"
          },
          "name": { "type": "string", "title": "Name" },
          "width": { "type": "number", "title": "Width" },
          "polyline_linestring": {
            "type": "string",
            "title": "Polyline Linestring"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "srid": { "type": "integer", "title": "Srid" },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Updated By"
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "title": "Created By"
          },
          "polyline_coordinates": {
            "items": {
              "prefixItems": [{ "type": "number" }, { "type": "number" }],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Polyline Coordinates",
            "description": "Compute the polyline_coordinates from the polyline_linestring",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "cross_section_id",
          "horizontal_scale",
          "vertical_scale",
          "method_ids",
          "name",
          "width",
          "polyline_linestring",
          "project_id",
          "srid",
          "created_by",
          "polyline_coordinates"
        ],
        "title": "CrossSection"
      },
      "CrossSectionCreate": {
        "properties": {
          "polyline_coordinates": {
            "items": {
              "prefixItems": [{ "type": "number" }, { "type": "number" }],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Polyline Coordinates"
          },
          "width": { "type": "number", "title": "Width" },
          "vertical_scale": { "type": "string", "title": "Vertical Scale" },
          "horizontal_scale": { "type": "string", "title": "Horizontal Scale" },
          "method_ids": {
            "items": { "type": "string", "format": "uuid" },
            "type": "array",
            "title": "Method Ids"
          },
          "name": { "type": "string", "title": "Name" }
        },
        "type": "object",
        "required": [
          "polyline_coordinates",
          "width",
          "vertical_scale",
          "horizontal_scale",
          "method_ids",
          "name"
        ],
        "title": "CrossSectionCreate"
      },
      "CrossSectionUpdate": {
        "properties": {
          "polyline_coordinates": {
            "anyOf": [
              {
                "items": {
                  "prefixItems": [{ "type": "number" }, { "type": "number" }],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2
                },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Polyline Coordinates"
          },
          "width": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Width"
          },
          "vertical_scale": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Vertical Scale"
          },
          "horizontal_scale": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Horizontal Scale"
          },
          "method_ids": {
            "anyOf": [
              {
                "items": { "type": "string", "format": "uuid" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Method Ids"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "CrossSectionUpdate"
      },
      "DPType": {
        "type": "string",
        "enum": ["DPSH-A", "DPL", "DPM", "DPH", "DPSH-B"],
        "title": "DPType",
        "description": "(Dynamic Probing) DP Type"
      },
      "DateFormat": {
        "type": "string",
        "enum": ["ISO", "NOR"],
        "title": "DateFormat",
        "description": "Date format"
      },
      "Export": {
        "properties": {
          "export_type": { "$ref": "#/components/schemas/ExportType" },
          "location_ids": {
            "items": { "type": "string", "format": "uuid" },
            "type": "array",
            "title": "Location Ids",
            "description": "Used when export_type is one of `LocationKOF`, `LocationXLS`",
            "default": []
          },
          "file_ids": {
            "items": { "type": "string", "format": "uuid" },
            "type": "array",
            "title": "File Ids",
            "description": "Used when export_type is `ProjectFiles`",
            "default": []
          },
          "method_status_ids": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Method Status Ids",
            "description": "Filter methods by status. Empty list means all statuses.",
            "default": []
          },
          "method_type_ids": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Method Type Ids",
            "description": "Filter methods by type. Empty list means all types.",
            "default": []
          },
          "srid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Srid",
            "description": "Specify the output file coordinate system for KOF and SND export. If not specified, the project coordinate system will be used."
          },
          "method_conducted_from": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Method Conducted From",
            "description": "Filter methods by conducted date from this time"
          },
          "method_conducted_to": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Method Conducted To",
            "description": "Filter methods by conducted date from (this time + 1 day)"
          },
          "swap_x_y": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Swap X Y",
            "default": false
          }
        },
        "type": "object",
        "required": ["export_type"],
        "title": "Export"
      },
      "ExportType": {
        "type": "string",
        "enum": [
          "ProjectFiles",
          "LocationGeoJSON",
          "LocationKOF",
          "LocationXLS",
          "LocationCSV",
          "MethodFiles",
          "MethodSND",
          "MethodXLS"
        ],
        "title": "ExportType"
      },
      "FM_PlotOptions-Input": {
        "properties": {
          "fill_curve": {
            "type": "boolean",
            "title": "Fill Curve",
            "default": true
          },
          "depth_scale": {
            "$ref": "#/components/schemas/Scales",
            "default": "Auto scaling"
          },
          "depth_range": {
            "anyOf": [
              {
                "prefixItems": [{ "type": "number" }, { "type": "number" }],
                "type": "array",
                "maxItems": 2,
                "minItems": 2
              },
              { "type": "null" }
            ],
            "title": "Depth Range",
            "default": [0, 0]
          },
          "cpt": {
            "$ref": "#/components/schemas/CPTOptions",
            "default": { "scaling_mode": "percentile", "percentile": 0.975 }
          }
        },
        "type": "object",
        "title": "FM_PlotOptions"
      },
      "FM_PlotOptions-Output": {
        "properties": {
          "fill_curve": {
            "type": "boolean",
            "title": "Fill Curve",
            "default": true
          },
          "depth_scale": {
            "$ref": "#/components/schemas/Scales",
            "default": "Auto scaling"
          },
          "depth_range": {
            "anyOf": [
              {
                "prefixItems": [{ "type": "number" }, { "type": "number" }],
                "type": "array",
                "maxItems": 2,
                "minItems": 2
              },
              { "type": "null" }
            ],
            "title": "Depth Range",
            "default": [0, 0]
          },
          "cpt": {
            "$ref": "#/components/schemas/CPTOptions",
            "default": { "scaling_mode": "percentile", "percentile": 0.975 }
          }
        },
        "type": "object",
        "title": "FM_PlotOptions"
      },
      "File": {
        "properties": {
          "file_id": { "type": "string", "format": "uuid", "title": "File Id" },
          "name": { "type": "string", "title": "Name" },
          "comment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Comment"
          },
          "size": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Size"
          },
          "blob_url": { "type": "string", "title": "Blob Url" },
          "original_filename": {
            "type": "string",
            "title": "Original Filename"
          },
          "file_type": { "$ref": "#/components/schemas/FileType" },
          "mime_type": { "type": "string", "title": "Mime Type" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "image_size_width": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Image Size Width"
          },
          "image_size_height": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Image Size Height"
          },
          "image_taken": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Image Taken"
          },
          "image_point_latitude": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Image Point Latitude"
          },
          "image_point_longitude": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Image Point Longitude"
          },
          "image_point_z": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Image Point Z"
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "name",
          "blob_url",
          "original_filename",
          "file_type",
          "mime_type",
          "created_at"
        ],
        "title": "File"
      },
      "FileExtended": {
        "properties": {
          "file_id": { "type": "string", "format": "uuid", "title": "File Id" },
          "name": { "type": "string", "title": "Name" },
          "comment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Comment"
          },
          "size": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Size"
          },
          "blob_url": { "type": "string", "title": "Blob Url" },
          "original_filename": {
            "type": "string",
            "title": "Original Filename"
          },
          "file_type": { "$ref": "#/components/schemas/FileType" },
          "mime_type": { "type": "string", "title": "Mime Type" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "image_size_width": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Image Size Width"
          },
          "image_size_height": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Image Size Height"
          },
          "image_taken": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Image Taken"
          },
          "image_point_latitude": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Image Point Latitude"
          },
          "image_point_longitude": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Image Point Longitude"
          },
          "image_point_z": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Image Point Z"
          },
          "locations": {
            "items": { "$ref": "#/components/schemas/LocationMin" },
            "type": "array",
            "title": "Locations",
            "default": []
          },
          "methods": {
            "items": { "$ref": "#/components/schemas/MethodMin" },
            "type": "array",
            "title": "Methods",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "name",
          "blob_url",
          "original_filename",
          "file_type",
          "mime_type",
          "created_at"
        ],
        "title": "FileExtended"
      },
      "FileExtension": {
        "properties": {
          "extension": { "type": "string", "title": "Extension" },
          "description": { "type": "string", "title": "Description" }
        },
        "type": "object",
        "required": ["extension", "description"],
        "title": "FileExtension",
        "description": "File extension with description. The extension attribute starts with a period and is always lowercase like '.csv'."
      },
      "FileType": {
        "type": "string",
        "enum": ["GENERAL", "DATA", "LAYER", "IMAGE"],
        "title": "FileType"
      },
      "FileUpdate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "comment": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Comment"
          }
        },
        "type": "object",
        "title": "FileUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HeightReference": {
        "type": "string",
        "enum": [
          "NN2000",
          "LAT_DEPTH",
          "NN1954",
          "MSL_HEIGHT",
          "RH2000",
          "TWVD2001"
        ],
        "title": "HeightReference",
        "description": "Original int values (now converting to strings):\n\n- NN2000      # Onshore Norway EPSG:5941\n- LAT_DEPTH   # Lowest Astronomical Tide EPSG:5861\n- NN1954      # Old on onshore Norway\n- MSL_HEIGHT  # Mean Sea Level height EPSG:5714\n- RH2000      # Swedish national height system EPSG:5613\n- TWVD2001    # TWVD 2001 height EPSG:8904"
      },
      "IOGPType": {
        "properties": {
          "iogp_type_id": { "$ref": "#/components/schemas/IOGPTypeEnum" },
          "name": { "type": "string", "title": "Name" },
          "description": { "type": "string", "title": "Description" },
          "sort_order": { "type": "integer", "title": "Sort Order" }
        },
        "type": "object",
        "required": ["iogp_type_id", "name", "description", "sort_order"],
        "title": "IOGPType"
      },
      "IOGPTypeEnum": {
        "type": "string",
        "enum": [
          "SAMPLING",
          "PILOT",
          "CPT",
          "PCPT",
          "COMPOSITE",
          "HYDRAULIC_FRACTURE",
          "BOX_CORE",
          "SEABED_CPT",
          "SEABED_PCPT",
          "GRAB_SAMPLE",
          "PISTON_CORE",
          "SEISMIC_PCPT",
          "MULTI_CORE",
          "JUMBO_CORE",
          "VIBRO_CORE",
          "GRAVITY_CORE",
          "GEOTECHNICAL_SAMPLE",
          "BENTHIC_SAMPLE",
          "SPI_SEDIMENT_PROFILE_INDEX",
          "SOIL_OR_SEDIMENT_SAMPLE",
          "WATER_SAMPLE",
          "VIDEO_SAMPLE",
          "VELO_VELOCIMETER",
          "CAMERA_TRANSECT",
          "TSDIP",
          "GEOCHEMICAL_SAMPLE",
          "HEAT_FLOW_MEASUREMENT"
        ],
        "title": "IOGPTypeEnum",
        "description": "For offshore locations, an IOGP type is required"
      },
      "ImageSize": {
        "type": "string",
        "enum": ["SMALL", "MEDIUM", "LARGE", "ORIGINAL"],
        "title": "ImageSize"
      },
      "Language": {
        "type": "string",
        "enum": ["eng", "fin", "nor", "swe"],
        "title": "Language",
        "description": "ISO 639-2 language three-letter codes (set 2)"
      },
      "Like": {
        "properties": {
          "like_id": { "type": "string", "format": "uuid", "title": "Like Id" },
          "user_id": { "type": "string", "format": "uuid", "title": "User Id" },
          "user_name": { "type": "string", "title": "User Name" },
          "comment_id": {
            "type": "string",
            "format": "uuid",
            "title": "Comment Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_deleted": { "type": "boolean", "title": "Is Deleted" }
        },
        "type": "object",
        "required": [
          "like_id",
          "user_id",
          "user_name",
          "comment_id",
          "created_at",
          "updated_at",
          "is_deleted"
        ],
        "title": "Like"
      },
      "LinkedProjectInfo": {
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "external_id": { "type": "string", "title": "External Id" },
          "external_id_source": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id Source"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "name": { "type": "string", "title": "Name" },
          "standard_id": { "$ref": "#/components/schemas/StandardType" },
          "srid": { "type": "integer", "title": "Srid" },
          "height_reference": {
            "anyOf": [
              { "$ref": "#/components/schemas/HeightReference" },
              { "type": "null" }
            ]
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": { "type": "string" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Tags",
            "default": []
          },
          "number_of_locations": {
            "type": "integer",
            "title": "Number Of Locations"
          },
          "organization": {
            "anyOf": [
              { "$ref": "#/components/schemas/OrganizationMin" },
              { "type": "null" }
            ]
          },
          "effective_role": {
            "anyOf": [
              { "$ref": "#/components/schemas/Role" },
              { "type": "null" }
            ]
          },
          "last_updated": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Last Updated"
          },
          "favorite": {
            "type": "boolean",
            "title": "Favorite",
            "default": false
          },
          "number_of_active_locations": {
            "type": "integer",
            "title": "Number Of Active Locations"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "external_id",
          "organization_id",
          "name",
          "standard_id",
          "srid",
          "number_of_locations",
          "number_of_active_locations"
        ],
        "title": "LinkedProjectInfo",
        "example": {
          "external_id": "2020193232",
          "height_reference": "NN2000",
          "name": "Project Name",
          "organization_id": "d88187d8-d2b0-4679-b66c-f9c474cdd5fd",
          "project_id": "48de934b-80bf-485b-816f-cb390264e8ea",
          "srid": 3857
        }
      },
      "Location": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "iogp_type_id": {
            "$ref": "#/components/schemas/IOGPTypeEnum",
            "default": "COMPOSITE"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "point_easting": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Easting"
          },
          "point_northing": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Northing"
          },
          "point_z": {
            "anyOf": [
              { "type": "number", "maximum": 10000.0, "minimum": -10000.0 },
              { "type": "null" }
            ],
            "title": "Point Z"
          },
          "srid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Srid"
          },
          "point_x_wgs84_pseudo": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point X Wgs84 Pseudo"
          },
          "point_y_wgs84_pseudo": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Y Wgs84 Pseudo"
          },
          "point_x_wgs84_web": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point X Wgs84 Web"
          },
          "point_y_wgs84_web": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Y Wgs84 Web"
          },
          "tags": {
            "anyOf": [
              {
                "items": { "type": "string" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Tags",
            "default": []
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "is_deleted": { "type": "boolean", "title": "Is Deleted" },
          "methods": {
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/MethodCPT" },
                { "$ref": "#/components/schemas/MethodTOT" },
                { "$ref": "#/components/schemas/MethodRP" },
                { "$ref": "#/components/schemas/MethodSA" },
                { "$ref": "#/components/schemas/MethodPZ" },
                { "$ref": "#/components/schemas/MethodSS" },
                { "$ref": "#/components/schemas/MethodRWS" },
                { "$ref": "#/components/schemas/MethodRCD" },
                { "$ref": "#/components/schemas/MethodRS" },
                { "$ref": "#/components/schemas/MethodSVT" },
                { "$ref": "#/components/schemas/MethodSPT" },
                { "$ref": "#/components/schemas/MethodCD" },
                { "$ref": "#/components/schemas/MethodTP" },
                { "$ref": "#/components/schemas/MethodPT" },
                { "$ref": "#/components/schemas/MethodESA" },
                { "$ref": "#/components/schemas/MethodAD" },
                { "$ref": "#/components/schemas/MethodRO" },
                { "$ref": "#/components/schemas/MethodINC" },
                { "$ref": "#/components/schemas/MethodSR" },
                { "$ref": "#/components/schemas/MethodIW" },
                { "$ref": "#/components/schemas/MethodDT" },
                { "$ref": "#/components/schemas/MethodOTHER" },
                { "$ref": "#/components/schemas/MethodSRS" },
                { "$ref": "#/components/schemas/MethodDP" },
                { "$ref": "#/components/schemas/MethodWST" }
              ],
              "discriminator": {
                "propertyName": "method_type_id",
                "mapping": {
                  "1": "#/components/schemas/MethodCPT",
                  "10": "#/components/schemas/MethodSVT",
                  "11": "#/components/schemas/MethodSPT",
                  "12": "#/components/schemas/MethodCD",
                  "13": "#/components/schemas/MethodTP",
                  "14": "#/components/schemas/MethodPT",
                  "15": "#/components/schemas/MethodESA",
                  "17": "#/components/schemas/MethodAD",
                  "18": "#/components/schemas/MethodRO",
                  "19": "#/components/schemas/MethodINC",
                  "2": "#/components/schemas/MethodTOT",
                  "20": "#/components/schemas/MethodSR",
                  "21": "#/components/schemas/MethodIW",
                  "22": "#/components/schemas/MethodDT",
                  "23": "#/components/schemas/MethodOTHER",
                  "24": "#/components/schemas/MethodSRS",
                  "25": "#/components/schemas/MethodDP",
                  "26": "#/components/schemas/MethodWST",
                  "3": "#/components/schemas/MethodRP",
                  "4": "#/components/schemas/MethodSA",
                  "5": "#/components/schemas/MethodPZ",
                  "6": "#/components/schemas/MethodSS",
                  "7": "#/components/schemas/MethodRWS",
                  "8": "#/components/schemas/MethodRCD",
                  "9": "#/components/schemas/MethodRS"
                }
              }
            },
            "type": "array",
            "title": "Methods",
            "default": []
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "name",
          "created_at",
          "updated_at",
          "location_id",
          "project_id",
          "is_deleted",
          "last_updated"
        ],
        "title": "Location",
        "example": {
          "location_id": "d27bbab8-752d-4964-906b-1e2ee43204ec",
          "name": "Loc01",
          "point_easting": 1194547,
          "point_northing": 8388298,
          "point_z": 0.0,
          "project_id": "d37c27e8-d595-4b0c-b693-aaf0fca72668",
          "srid": 3857
        }
      },
      "LocationCoordinates": {
        "properties": {
          "easting": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Easting"
          },
          "northing": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Northing"
          },
          "elevation": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Elevation"
          }
        },
        "type": "object",
        "title": "LocationCoordinates"
      },
      "LocationCreate": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "iogp_type_id": {
            "$ref": "#/components/schemas/IOGPTypeEnum",
            "default": "COMPOSITE"
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "point_easting": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Easting"
          },
          "point_northing": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Northing"
          },
          "point_z": {
            "anyOf": [
              { "type": "number", "maximum": 10000.0, "minimum": -10000.0 },
              { "type": "null" }
            ],
            "title": "Point Z"
          },
          "srid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Srid"
          },
          "point_x_wgs84_pseudo": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point X Wgs84 Pseudo"
          },
          "point_y_wgs84_pseudo": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Y Wgs84 Pseudo"
          },
          "point_x_wgs84_web": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point X Wgs84 Web"
          },
          "point_y_wgs84_web": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Y Wgs84 Web"
          },
          "tags": {
            "items": { "type": "string" },
            "type": "array",
            "uniqueItems": true,
            "title": "Tags",
            "default": []
          },
          "project_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Project Id"
          },
          "methods": {
            "items": {
              "oneOf": [
                { "$ref": "#/components/schemas/MethodADCreate" },
                { "$ref": "#/components/schemas/MethodCDCreate" },
                { "$ref": "#/components/schemas/MethodCPTCreate" },
                { "$ref": "#/components/schemas/MethodDPCreate" },
                { "$ref": "#/components/schemas/MethodDTCreate" },
                { "$ref": "#/components/schemas/MethodESACreate" },
                { "$ref": "#/components/schemas/MethodINCCreate" },
                { "$ref": "#/components/schemas/MethodIWCreate" },
                { "$ref": "#/components/schemas/MethodOTHERCreate" },
                { "$ref": "#/components/schemas/MethodPTCreate" },
                { "$ref": "#/components/schemas/MethodPZCreate" },
                { "$ref": "#/components/schemas/MethodRCDCreate" },
                { "$ref": "#/components/schemas/MethodROCreate" },
                { "$ref": "#/components/schemas/MethodRPCreate" },
                { "$ref": "#/components/schemas/MethodRSCreate" },
                { "$ref": "#/components/schemas/MethodRWSCreate" },
                { "$ref": "#/components/schemas/MethodSACreate" },
                { "$ref": "#/components/schemas/MethodSPTCreate" },
                { "$ref": "#/components/schemas/MethodSRCreate" },
                { "$ref": "#/components/schemas/MethodSRSCreate" },
                { "$ref": "#/components/schemas/MethodSSCreate" },
                { "$ref": "#/components/schemas/MethodSVTCreate" },
                { "$ref": "#/components/schemas/MethodTOTCreate" },
                { "$ref": "#/components/schemas/MethodTPCreate" },
                { "$ref": "#/components/schemas/MethodWSTCreate" }
              ],
              "discriminator": {
                "propertyName": "method_type_id",
                "mapping": {
                  "1": "#/components/schemas/MethodCPTCreate",
                  "10": "#/components/schemas/MethodSVTCreate",
                  "11": "#/components/schemas/MethodSPTCreate",
                  "12": "#/components/schemas/MethodCDCreate",
                  "13": "#/components/schemas/MethodTPCreate",
                  "14": "#/components/schemas/MethodPTCreate",
                  "15": "#/components/schemas/MethodESACreate",
                  "17": "#/components/schemas/MethodADCreate",
                  "18": "#/components/schemas/MethodROCreate",
                  "19": "#/components/schemas/MethodINCCreate",
                  "2": "#/components/schemas/MethodTOTCreate",
                  "20": "#/components/schemas/MethodSRCreate",
                  "21": "#/components/schemas/MethodIWCreate",
                  "22": "#/components/schemas/MethodDTCreate",
                  "23": "#/components/schemas/MethodOTHERCreate",
                  "24": "#/components/schemas/MethodSRSCreate",
                  "25": "#/components/schemas/MethodDPCreate",
                  "26": "#/components/schemas/MethodWSTCreate",
                  "3": "#/components/schemas/MethodRPCreate",
                  "4": "#/components/schemas/MethodSACreate",
                  "5": "#/components/schemas/MethodPZCreate",
                  "6": "#/components/schemas/MethodSSCreate",
                  "7": "#/components/schemas/MethodRWSCreate",
                  "8": "#/components/schemas/MethodRCDCreate",
                  "9": "#/components/schemas/MethodRSCreate"
                }
              }
            },
            "type": "array",
            "title": "Methods",
            "default": []
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "LocationCreate",
        "example": {
          "methods": [{ "method_type_id": 1 }, { "method_type_id": 2 }],
          "name": "Loc01",
          "point_easting": 1194547,
          "point_northing": 8388298,
          "point_z": 0,
          "srid": 3857
        }
      },
      "LocationGis": {
        "properties": {
          "project_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Project Name"
          },
          "project_external_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Project External Id"
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "arcgisid": { "type": "integer", "title": "Arcgisid" },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "point_x_wgs84_web": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point X Wgs84 Web"
          },
          "point_y_wgs84_web": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Y Wgs84 Web"
          },
          "point_z": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Z"
          },
          "height_reference": {
            "anyOf": [
              { "$ref": "#/components/schemas/HeightReference" },
              { "type": "null" }
            ]
          },
          "point_easting": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Easting"
          },
          "point_northing": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Northing"
          },
          "srid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Srid"
          },
          "method_names": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Method Names"
          },
          "location_status": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Location Status"
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          },
          "depth_in_soil": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Soil"
          },
          "depth_in_rock": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Rock"
          },
          "location_url": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Location Url"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["location_id", "arcgisid"],
        "title": "LocationGis"
      },
      "LocationInfo": {
        "properties": {
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "location_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Location Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "coordinates": { "$ref": "#/components/schemas/LocationCoordinates" }
        },
        "type": "object",
        "required": ["location_id", "created_at", "coordinates"],
        "title": "LocationInfo"
      },
      "LocationMin": {
        "properties": {
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["location_id", "project_id"],
        "title": "LocationMin"
      },
      "LocationSummary": {
        "properties": {
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "iogp_type_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/IOGPTypeEnum" },
              { "type": "null" }
            ]
          },
          "name": { "type": "string", "title": "Name" },
          "point_easting": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Easting"
          },
          "point_northing": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Northing"
          },
          "point_z": {
            "anyOf": [
              { "type": "number", "maximum": 10000.0, "minimum": -10000.0 },
              { "type": "null" }
            ],
            "title": "Point Z"
          },
          "srid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Srid"
          },
          "point_x_wgs84_web": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point X Wgs84 Web"
          },
          "point_y_wgs84_web": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Y Wgs84 Web"
          },
          "point_x_wgs84_pseudo": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point X Wgs84 Pseudo"
          },
          "point_y_wgs84_pseudo": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Y Wgs84 Pseudo"
          },
          "methods": {
            "items": { "$ref": "#/components/schemas/MethodSummary" },
            "type": "array",
            "title": "Methods",
            "default": []
          },
          "tags": {
            "items": { "type": "string" },
            "type": "array",
            "uniqueItems": true,
            "title": "Tags",
            "default": []
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": ["location_id", "name", "last_updated"],
        "title": "LocationSummary"
      },
      "LocationType": {
        "type": "string",
        "enum": ["onshore", "offshore"],
        "title": "LocationType"
      },
      "LocationUpdate": {
        "properties": {
          "project_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Project Id"
          },
          "location_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Location Id"
          },
          "iogp_type_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/IOGPTypeEnum" },
              { "type": "null" }
            ]
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "point_easting": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Easting"
          },
          "point_northing": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Point Northing"
          },
          "point_z": {
            "anyOf": [
              { "type": "number", "maximum": 10000.0, "minimum": -10000.0 },
              { "type": "null" }
            ],
            "title": "Point Z"
          },
          "srid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Srid"
          },
          "tags": {
            "anyOf": [
              {
                "items": { "type": "string" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Tags",
            "default": []
          },
          "methods": {
            "items": {
              "anyOf": [
                {
                  "oneOf": [
                    { "$ref": "#/components/schemas/MethodADCreate" },
                    { "$ref": "#/components/schemas/MethodCDCreate" },
                    { "$ref": "#/components/schemas/MethodCPTCreate" },
                    { "$ref": "#/components/schemas/MethodDPCreate" },
                    { "$ref": "#/components/schemas/MethodDTCreate" },
                    { "$ref": "#/components/schemas/MethodESACreate" },
                    { "$ref": "#/components/schemas/MethodINCCreate" },
                    { "$ref": "#/components/schemas/MethodIWCreate" },
                    { "$ref": "#/components/schemas/MethodOTHERCreate" },
                    { "$ref": "#/components/schemas/MethodPTCreate" },
                    { "$ref": "#/components/schemas/MethodPZCreate" },
                    { "$ref": "#/components/schemas/MethodRCDCreate" },
                    { "$ref": "#/components/schemas/MethodROCreate" },
                    { "$ref": "#/components/schemas/MethodRPCreate" },
                    { "$ref": "#/components/schemas/MethodRSCreate" },
                    { "$ref": "#/components/schemas/MethodRWSCreate" },
                    { "$ref": "#/components/schemas/MethodSACreate" },
                    { "$ref": "#/components/schemas/MethodSPTCreate" },
                    { "$ref": "#/components/schemas/MethodSRCreate" },
                    { "$ref": "#/components/schemas/MethodSRSCreate" },
                    { "$ref": "#/components/schemas/MethodSSCreate" },
                    { "$ref": "#/components/schemas/MethodSVTCreate" },
                    { "$ref": "#/components/schemas/MethodTOTCreate" },
                    { "$ref": "#/components/schemas/MethodTPCreate" },
                    { "$ref": "#/components/schemas/MethodWSTCreate" }
                  ],
                  "discriminator": {
                    "propertyName": "method_type_id",
                    "mapping": {
                      "1": "#/components/schemas/MethodCPTCreate",
                      "10": "#/components/schemas/MethodSVTCreate",
                      "11": "#/components/schemas/MethodSPTCreate",
                      "12": "#/components/schemas/MethodCDCreate",
                      "13": "#/components/schemas/MethodTPCreate",
                      "14": "#/components/schemas/MethodPTCreate",
                      "15": "#/components/schemas/MethodESACreate",
                      "17": "#/components/schemas/MethodADCreate",
                      "18": "#/components/schemas/MethodROCreate",
                      "19": "#/components/schemas/MethodINCCreate",
                      "2": "#/components/schemas/MethodTOTCreate",
                      "20": "#/components/schemas/MethodSRCreate",
                      "21": "#/components/schemas/MethodIWCreate",
                      "22": "#/components/schemas/MethodDTCreate",
                      "23": "#/components/schemas/MethodOTHERCreate",
                      "24": "#/components/schemas/MethodSRSCreate",
                      "25": "#/components/schemas/MethodDPCreate",
                      "26": "#/components/schemas/MethodWSTCreate",
                      "3": "#/components/schemas/MethodRPCreate",
                      "4": "#/components/schemas/MethodSACreate",
                      "5": "#/components/schemas/MethodPZCreate",
                      "6": "#/components/schemas/MethodSSCreate",
                      "7": "#/components/schemas/MethodRWSCreate",
                      "8": "#/components/schemas/MethodRCDCreate",
                      "9": "#/components/schemas/MethodRSCreate"
                    }
                  }
                },
                {
                  "oneOf": [
                    { "$ref": "#/components/schemas/MethodCPTUpdate" },
                    { "$ref": "#/components/schemas/MethodTOTUpdate" },
                    { "$ref": "#/components/schemas/MethodRPUpdate" },
                    { "$ref": "#/components/schemas/MethodSAUpdate" },
                    { "$ref": "#/components/schemas/MethodPZUpdate" },
                    { "$ref": "#/components/schemas/MethodSSUpdate" },
                    { "$ref": "#/components/schemas/MethodRWSUpdate" },
                    { "$ref": "#/components/schemas/MethodRCDUpdate" },
                    { "$ref": "#/components/schemas/MethodRSUpdate" },
                    { "$ref": "#/components/schemas/MethodSVTUpdate" },
                    { "$ref": "#/components/schemas/MethodSPTUpdate" },
                    { "$ref": "#/components/schemas/MethodCDUpdate" },
                    { "$ref": "#/components/schemas/MethodTPUpdate" },
                    { "$ref": "#/components/schemas/MethodPTUpdate" },
                    { "$ref": "#/components/schemas/MethodESAUpdate" },
                    { "$ref": "#/components/schemas/MethodADUpdate" },
                    { "$ref": "#/components/schemas/MethodROUpdate" },
                    { "$ref": "#/components/schemas/MethodINCUpdate" },
                    { "$ref": "#/components/schemas/MethodSRUpdate" },
                    { "$ref": "#/components/schemas/MethodIWUpdate" },
                    { "$ref": "#/components/schemas/MethodDTUpdate" },
                    { "$ref": "#/components/schemas/MethodOTHERUpdate" },
                    { "$ref": "#/components/schemas/MethodSRSUpdate" },
                    { "$ref": "#/components/schemas/MethodDPUpdate" },
                    { "$ref": "#/components/schemas/MethodWSTUpdate" }
                  ],
                  "discriminator": {
                    "propertyName": "method_type_id",
                    "mapping": {
                      "1": "#/components/schemas/MethodCPTUpdate",
                      "10": "#/components/schemas/MethodSVTUpdate",
                      "11": "#/components/schemas/MethodSPTUpdate",
                      "12": "#/components/schemas/MethodCDUpdate",
                      "13": "#/components/schemas/MethodTPUpdate",
                      "14": "#/components/schemas/MethodPTUpdate",
                      "15": "#/components/schemas/MethodESAUpdate",
                      "17": "#/components/schemas/MethodADUpdate",
                      "18": "#/components/schemas/MethodROUpdate",
                      "19": "#/components/schemas/MethodINCUpdate",
                      "2": "#/components/schemas/MethodTOTUpdate",
                      "20": "#/components/schemas/MethodSRUpdate",
                      "21": "#/components/schemas/MethodIWUpdate",
                      "22": "#/components/schemas/MethodDTUpdate",
                      "23": "#/components/schemas/MethodOTHERUpdate",
                      "24": "#/components/schemas/MethodSRSUpdate",
                      "25": "#/components/schemas/MethodDPUpdate",
                      "26": "#/components/schemas/MethodWSTUpdate",
                      "3": "#/components/schemas/MethodRPUpdate",
                      "4": "#/components/schemas/MethodSAUpdate",
                      "5": "#/components/schemas/MethodPZUpdate",
                      "6": "#/components/schemas/MethodSSUpdate",
                      "7": "#/components/schemas/MethodRWSUpdate",
                      "8": "#/components/schemas/MethodRCDUpdate",
                      "9": "#/components/schemas/MethodRSUpdate"
                    }
                  }
                }
              ]
            },
            "type": "array",
            "title": "Methods",
            "default": []
          }
        },
        "type": "object",
        "title": "LocationUpdate"
      },
      "MapLayout": {
        "properties": {
          "map_layout_id": {
            "type": "string",
            "format": "uuid",
            "title": "Map Layout Id"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "name": { "type": "string", "title": "Name" },
          "versions": {
            "items": { "$ref": "#/components/schemas/MapLayoutVersion" },
            "type": "array",
            "title": "Versions"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          }
        },
        "type": "object",
        "required": [
          "map_layout_id",
          "project_id",
          "name",
          "versions",
          "created_at",
          "updated_at"
        ],
        "title": "MapLayout",
        "description": "Map Layout\n\nAny MapLayoutVersions"
      },
      "MapLayoutCreate": {
        "properties": {
          "map_layout_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Map Layout Id"
          },
          "name": { "type": "string", "title": "Name" },
          "versions": {
            "items": { "$ref": "#/components/schemas/MapLayoutVersionCreate" },
            "type": "array",
            "title": "Versions"
          }
        },
        "type": "object",
        "required": ["name", "versions"],
        "title": "MapLayoutCreate",
        "description": "Map Layout Create"
      },
      "MapLayoutUpdate": {
        "properties": {
          "map_layout_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Map Layout Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "versions": {
            "items": { "$ref": "#/components/schemas/MapLayoutVersionUpdate" },
            "type": "array",
            "title": "Versions",
            "default": []
          }
        },
        "type": "object",
        "title": "MapLayoutUpdate",
        "description": "Map Layout Update"
      },
      "MapLayoutVersion": {
        "properties": {
          "map_layout_version_id": {
            "type": "string",
            "format": "uuid",
            "title": "Map Layout Version Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "file_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "File Id"
          },
          "paper_size": {
            "$ref": "#/components/schemas/PaperSize",
            "default": "A3"
          },
          "orientation": {
            "$ref": "#/components/schemas/Orientation",
            "default": "LANDSCAPE"
          },
          "dpi": { "type": "integer", "title": "Dpi", "default": 150 },
          "background_map_layer": {
            "$ref": "#/components/schemas/BackgroundMapLayer",
            "default": "STREET_MAP_WORLD"
          },
          "scale": {
            "$ref": "#/components/schemas/MapScale",
            "default": "S_1_500"
          },
          "boundary": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Boundary"
          },
          "srid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Srid"
          },
          "rotation": { "type": "number", "title": "Rotation", "default": 0.0 },
          "report_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Report Number"
          },
          "report_date": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "null" }
            ],
            "title": "Report Date"
          },
          "client_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "drawn_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Drawn By"
          },
          "approved_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Approved By"
          },
          "controlled_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Controlled By"
          },
          "language": { "$ref": "#/components/schemas/Language" },
          "date_format": { "$ref": "#/components/schemas/DateFormat" },
          "show_method_status": {
            "type": "boolean",
            "title": "Show Method Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          }
        },
        "type": "object",
        "required": [
          "map_layout_version_id",
          "report_number",
          "report_date",
          "client_name",
          "description",
          "drawn_by",
          "approved_by",
          "controlled_by",
          "language",
          "date_format",
          "show_method_status",
          "created_at",
          "updated_at"
        ],
        "title": "MapLayoutVersion",
        "description": "Map Layout Version"
      },
      "MapLayoutVersionCreate": {
        "properties": {
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "file_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "File Id"
          },
          "paper_size": {
            "$ref": "#/components/schemas/PaperSize",
            "default": "A3"
          },
          "orientation": {
            "$ref": "#/components/schemas/Orientation",
            "default": "LANDSCAPE"
          },
          "dpi": { "type": "integer", "title": "Dpi", "default": 150 },
          "background_map_layer": {
            "$ref": "#/components/schemas/BackgroundMapLayer",
            "default": "STREET_MAP_WORLD"
          },
          "scale": {
            "$ref": "#/components/schemas/MapScale",
            "default": "S_1_500"
          },
          "boundary": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Boundary",
            "description": "Boundary as a Well-Known Text (WKT) 2D POLYGON. Example 'POLYGON((1184848.67 8385496.52, 1184848.67 8386496.52,1185848.67 8386496.52, 1185848.67 8385496.52, 1184848.67 8385496.52))'"
          },
          "srid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Srid",
            "description": "Spatial Reference Identifier (SRID) for the boundary box. Defaults to 3857 WGS 84 / Pseudo-Mercator (unit: meter).",
            "default": 3857
          },
          "rotation": { "type": "number", "title": "Rotation", "default": 0.0 },
          "report_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Report Number"
          },
          "report_date": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "null" }
            ],
            "title": "Report Date"
          },
          "client_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "drawn_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Drawn By"
          },
          "approved_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Approved By"
          },
          "controlled_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Controlled By"
          },
          "language": {
            "$ref": "#/components/schemas/Language",
            "default": "eng"
          },
          "date_format": {
            "$ref": "#/components/schemas/DateFormat",
            "default": "ISO"
          },
          "show_method_status": {
            "type": "boolean",
            "title": "Show Method Status",
            "default": false
          }
        },
        "type": "object",
        "title": "MapLayoutVersionCreate"
      },
      "MapLayoutVersionUpdate": {
        "properties": {
          "map_layout_version_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Map Layout Version Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "file_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "File Id"
          },
          "paper_size": {
            "anyOf": [
              { "$ref": "#/components/schemas/PaperSize" },
              { "type": "null" }
            ]
          },
          "orientation": {
            "anyOf": [
              { "$ref": "#/components/schemas/Orientation" },
              { "type": "null" }
            ]
          },
          "dpi": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Dpi"
          },
          "background_map_layer": {
            "anyOf": [
              { "$ref": "#/components/schemas/BackgroundMapLayer" },
              { "type": "null" }
            ]
          },
          "scale": {
            "anyOf": [
              { "$ref": "#/components/schemas/MapScale" },
              { "type": "null" }
            ]
          },
          "boundary": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Boundary",
            "description": "Boundary as a Well-Known Text (WKT) 2D POLYGON. Example 'POLYGON((1184848.67 8385496.52, 1184848.67 8386496.52,1185848.67 8386496.52, 1185848.67 8385496.52, 1184848.67 8385496.52))'"
          },
          "srid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Srid",
            "description": "Spatial Reference Identifier (SRID) for the boundary box. Defaults to 3857 WGS 84 / Pseudo-Mercator (unit: meter).",
            "default": 3857
          },
          "rotation": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Rotation"
          },
          "report_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Report Number"
          },
          "report_date": {
            "anyOf": [
              { "type": "string", "format": "date" },
              { "type": "null" }
            ],
            "title": "Report Date"
          },
          "client_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Name"
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "drawn_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Drawn By"
          },
          "approved_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Approved By"
          },
          "controlled_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Controlled By"
          },
          "language": { "$ref": "#/components/schemas/Language" },
          "date_format": {
            "anyOf": [
              { "$ref": "#/components/schemas/DateFormat" },
              { "type": "null" }
            ]
          },
          "show_method_status": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Show Method Status"
          }
        },
        "type": "object",
        "title": "MapLayoutVersionUpdate",
        "description": "Map Layout Version Update. The map_layout_version_id in the url will override the map_layout_version_id in the body."
      },
      "MapScale": {
        "type": "string",
        "enum": [
          "S_1_50",
          "S_1_100",
          "S_1_500",
          "S_1_1000",
          "S_1_2000",
          "S_1_5000",
          "S_1_10000"
        ],
        "title": "MapScale",
        "description": "Map scales\n    1:50\n    1:100\n    1:500 (default)\n    1:1000\n    1:2000\n    1:5000\n    1:10000"
      },
      "MethodAD": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 17,
            "title": "Method Type Id",
            "default": 17
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodAD"
      },
      "MethodADCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "AD" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 17,
            "title": "Method Type Id",
            "default": 17
          }
        },
        "type": "object",
        "title": "MethodADCreate"
      },
      "MethodADUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 17,
            "title": "Method Type Id",
            "default": 17
          }
        },
        "type": "object",
        "title": "MethodADUpdate"
      },
      "MethodCD": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 12,
            "title": "Method Type Id",
            "default": 12
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "sampler_type_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sampler Type Id"
          },
          "inclination": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Inclination",
            "description": "Inclination angle (deg)."
          },
          "azimuth": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Azimuth",
            "description": "Azimuth angle relative to N (deg)."
          },
          "length_in_soil": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Length In Soil",
            "description": "Length drilled in soil (m)."
          },
          "total_length": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Total Length",
            "description": "Total length drilled (m)."
          },
          "casing_length": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Casing Length",
            "description": "Length of casing (m)."
          },
          "casing_size": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Casing Size",
            "description": "Size of casing (mm)."
          },
          "removed_casing": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Removed Casing",
            "description": "Casing removed."
          },
          "length_in_rock": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Length In Rock",
            "description": "Calculated length in rock (m)."
          },
          "total_depth": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Total Depth",
            "description": "Calculated total depth (m)."
          },
          "depth_in_soil": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Soil",
            "description": "Calculated depth in soil (m)."
          },
          "depth_in_rock": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Rock",
            "description": "Calculated depth in rock (m)."
          },
          "bedrock_elevation": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Bedrock Elevation",
            "description": "Calculated bedrock elevation according to location (m)."
          },
          "horizontal_total_length": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Horizontal Total Length",
            "description": "Calculated horizontal length in rock (m)."
          },
          "horizontal_length_in_soil": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Horizontal Length In Soil",
            "description": "Calculated horizontal length in soil (m)."
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top",
            "description": "Calculated horizontal length in soil (m)."
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base",
            "description": "Calculated horizontal length in soil (m)."
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodCD",
        "description": "Core Drilling (CD) (Kjerneboring)"
      },
      "MethodCDCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "default": "CD"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 12,
            "title": "Method Type Id",
            "default": 12
          },
          "sampler_type_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sampler Type Id"
          },
          "inclination": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Inclination",
            "description": "Inclination angle (deg)."
          },
          "azimuth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Azimuth",
            "description": "Azimuth angle relative to N (deg)."
          },
          "length_in_soil": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Length In Soil",
            "description": "Length drilled in soil (m)."
          },
          "total_length": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Total Length",
            "description": "Total length drilled (m)."
          },
          "casing_length": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Casing Length",
            "description": "Length of casing (m)."
          },
          "casing_size": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Casing Size",
            "description": "Size of casing (mm)."
          },
          "removed_casing": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Removed Casing",
            "description": "Casing removed."
          }
        },
        "type": "object",
        "title": "MethodCDCreate"
      },
      "MethodCDUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 12,
            "title": "Method Type Id",
            "default": 12
          },
          "sampler_type_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sampler Type Id"
          },
          "inclination": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Inclination",
            "description": "Inclination angle (deg)."
          },
          "azimuth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Azimuth",
            "description": "Azimuth angle relative to N (deg)."
          },
          "length_in_soil": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Length In Soil",
            "description": "Length drilled in soil (m)."
          },
          "total_length": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Total Length",
            "description": "Total length drilled (m)."
          },
          "casing_length": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Casing Length",
            "description": "Length of casing (m)."
          },
          "casing_size": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Casing Size",
            "description": "Size of casing (mm)."
          },
          "removed_casing": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Removed Casing",
            "description": "Casing removed."
          }
        },
        "type": "object",
        "title": "MethodCDUpdate"
      },
      "MethodCPT": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 1,
            "title": "Method Type Id",
            "default": 1
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "predrilling_depth": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Predrilling Depth"
          },
          "cone_reference": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cone Reference"
          },
          "water_depth": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Water Depth"
          },
          "cone_area_ratio": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Cone Area Ratio"
          },
          "sleeve_area_ratio": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Sleeve Area Ratio"
          },
          "application_class": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "description": "This is the maximum value of all the other application classes (depth, resistance, friction and pressure)",
            "default": 100
          },
          "application_class_depth": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          },
          "application_class_resistance": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          },
          "application_class_friction": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          },
          "application_class_pressure": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base"
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodCPT",
        "description": "Structure for a cone penetration test method instance"
      },
      "MethodCPTCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "CPT" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 1,
            "title": "Method Type Id",
            "default": 1
          },
          "predrilling_depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Predrilling Depth"
          },
          "cone_reference": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cone Reference"
          },
          "water_depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Water Depth"
          },
          "cone_area_ratio": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Cone Area Ratio"
          },
          "sleeve_area_ratio": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Sleeve Area Ratio"
          },
          "application_class_depth": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          },
          "application_class_resistance": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          },
          "application_class_friction": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          },
          "application_class_pressure": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          }
        },
        "type": "object",
        "title": "MethodCPTCreate",
        "description": "Structure for creating a new CPT method. All parameters are optional and defaults values are provided."
      },
      "MethodCPTData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 1,
            "title": "Method Type Id",
            "default": 1
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "depth": {
            "type": "number",
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "penetration_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s). SGF code B."
          },
          "penetration_force": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Force",
            "description": "Penetration force (kN). SGF code A."
          },
          "fs": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Fs",
            "description": "Friction (kPa). SGF code FS/F."
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code",
            "description": "Comment code. Two digit value."
          },
          "conductivity": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Conductivity",
            "description": "Conductivity (S/m). SGF code M."
          },
          "zero_value_resistance": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Zero Value Resistance",
            "description": "Zero value resistance (MPa). SGF code NA."
          },
          "zero_value_friction": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Zero Value Friction",
            "description": "Zero value friction (kPa). SGF code NB."
          },
          "zero_value_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Zero Value Pressure",
            "description": "Zero value pressure (kPa). SGF code NC."
          },
          "temperature": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Temperature",
            "description": "Temperature (degree C). SGF code O."
          },
          "qc": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Qc",
            "description": "Resistance (MPa). SGF code QC."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks",
            "description": "Remarks. SGF code T"
          },
          "tilt": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Tilt",
            "description": "Inclination (degree). SGF code TA."
          },
          "u2": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "U2",
            "description": "Shoulder pressure (kPa). SGF code U."
          }
        },
        "type": "object",
        "required": [
          "method_data_id",
          "method_id",
          "created_at",
          "updated_at",
          "depth"
        ],
        "title": "MethodCPTData"
      },
      "MethodCPTDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 1,
            "title": "Method Type Id",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "penetration_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Rate"
          },
          "penetration_force": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Force"
          },
          "fs": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Fs"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          },
          "conductivity": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Conductivity"
          },
          "zero_value_resistance": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Zero Value Resistance"
          },
          "zero_value_friction": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Zero Value Friction"
          },
          "zero_value_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Zero Value Pressure"
          },
          "temperature": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Temperature"
          },
          "qc": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Qc"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "tilt": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Tilt"
          },
          "u2": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "U2"
          }
        },
        "type": "object",
        "required": ["depth"],
        "title": "MethodCPTDataCreate"
      },
      "MethodCPTDataUpdate": {
        "properties": {
          "method_type_id": {
            "type": "integer",
            "const": 1,
            "title": "Method Type Id",
            "default": 1
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "title": "MethodCPTDataUpdate",
        "description": "Method CPT data update structure"
      },
      "MethodCPTUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 1,
            "title": "Method Type Id",
            "default": 1
          },
          "predrilling_depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Predrilling Depth"
          },
          "cone_reference": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cone Reference"
          },
          "water_depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Water Depth"
          },
          "cone_area_ratio": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Cone Area Ratio"
          },
          "sleeve_area_ratio": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Sleeve Area Ratio"
          },
          "application_class_depth": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          },
          "application_class_resistance": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          },
          "application_class_friction": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          },
          "application_class_pressure": {
            "$ref": "#/components/schemas/ApplicationClassEnum",
            "default": 100
          }
        },
        "type": "object",
        "title": "MethodCPTUpdate",
        "description": "Structure for updating a cone penetration test method instance"
      },
      "MethodDP": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 25,
            "title": "Method Type Id",
            "default": 25
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "type": {
            "$ref": "#/components/schemas/DPType",
            "default": "DPSH-A"
          },
          "predrilling_depth": {
            "type": "number",
            "title": "Predrilling Depth",
            "default": 0.0
          },
          "cone_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cone Type"
          },
          "cushion_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cushion Type"
          },
          "use_damper": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Use Damper"
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base"
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          },
          "depth_in_soil": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Soil"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodDP",
        "description": "DP method\nDynamic Probing\nSwedish Ram sounding (Swedish hejarsondering)"
      },
      "MethodDPCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "DP" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 25,
            "title": "Method Type Id",
            "default": 25
          },
          "type": {
            "$ref": "#/components/schemas/DPType",
            "default": "DPSH-A"
          },
          "predrilling_depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Predrilling Depth"
          },
          "cone_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cone Type"
          },
          "cushion_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cushion Type"
          },
          "use_damper": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Use Damper"
          },
          "depth_top": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Base"
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          }
        },
        "type": "object",
        "title": "MethodDPCreate"
      },
      "MethodDPData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 25,
            "title": "Method Type Id",
            "default": 25
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "depth": {
            "type": "number",
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code",
            "description": "Comment code. Two digit value."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "penetration_force": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Force",
            "description": "Penetration force (kN)"
          },
          "penetration_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s)"
          },
          "torque": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Torque",
            "description": "Torque (kNm)"
          },
          "ramming": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Ramming",
            "description": "Ramming (blow/0.2m)"
          },
          "rotation_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Rotation Rate",
            "description": "Rotation rate (rpm)"
          },
          "increased_rotation_rate": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Increased Rotation Rate",
            "description": "rotation"
          }
        },
        "type": "object",
        "required": [
          "method_data_id",
          "method_id",
          "created_at",
          "updated_at",
          "depth"
        ],
        "title": "MethodDPData"
      },
      "MethodDPDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 25,
            "title": "Method Type Id",
            "default": 25
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code",
            "description": "Comment code. Two digit value."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "penetration_force": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Force",
            "description": "Penetration force (kN). SGF code A."
          },
          "penetration_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s). SGF code B."
          },
          "torque": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Torque",
            "description": "Torque (kNm). SGF code V."
          },
          "ramming": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Ramming",
            "description": "Ramming (blow/0.2m)"
          },
          "rotation_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Rotation Rate",
            "description": "Rotation rate (rpm). SGF code R."
          },
          "increased_rotation_rate": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Increased Rotation Rate",
            "description": "rotation"
          }
        },
        "type": "object",
        "required": ["depth"],
        "title": "MethodDPDataCreate"
      },
      "MethodDPUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 25,
            "title": "Method Type Id",
            "default": 25
          }
        },
        "type": "object",
        "title": "MethodDPUpdate"
      },
      "MethodDT": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 22,
            "title": "Method Type Id",
            "default": 22
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "u2_initial": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "U2 Initial",
            "description": "Initial shoulder pressure (kPa)."
          },
          "u2_equilibrium": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "U2 Equilibrium",
            "description": "Equilibrium shoulder pressure (kPa)."
          },
          "degree_dissipation": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Degree Dissipation",
            "description": "Degree of dissipation (%)."
          },
          "time_dissipation": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Time Dissipation",
            "description": "Time of dissipation (s)."
          },
          "coefficient_consolidation_vertical": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Coefficient Consolidation Vertical",
            "description": "Vertical consolidation coefficient (m**2/year)."
          },
          "coefficient_consolidation_horizontal": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Coefficient Consolidation Horizontal",
            "description": "Horizontal consolidation coefficient (m**2/year). Year = 365.25 * days."
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodDT",
        "description": "DT"
      },
      "MethodDTCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "DT" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 22,
            "title": "Method Type Id",
            "default": 22
          },
          "depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "u2_initial": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "U2 Initial"
          },
          "u2_equilibrium": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "U2 Equilibrium"
          },
          "degree_dissipation": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Degree Dissipation"
          },
          "time_dissipation": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Time Dissipation"
          },
          "coefficient_consolidation_vertical": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Coefficient Consolidation Vertical"
          },
          "coefficient_consolidation_horizontal": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Coefficient Consolidation Horizontal"
          }
        },
        "type": "object",
        "title": "MethodDTCreate",
        "description": "Structure for creating a new DT method. All parameters are optional and defaults values are provided."
      },
      "MethodDTData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 22,
            "title": "Method Type Id",
            "default": 22
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "time": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Time",
            "description": "Time (s)."
          },
          "qc": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Qc",
            "description": "Cone resistance (MPa). SGF code QC."
          },
          "u2": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "U2",
            "description": "Shoulder pressure (kPa). SGF code U."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "required": ["method_data_id", "method_id", "created_at", "updated_at"],
        "title": "MethodDTData"
      },
      "MethodDTDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 22,
            "title": "Method Type Id",
            "default": 22
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth"
          },
          "time": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Time"
          },
          "qc": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Qc"
          },
          "u2": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "U2"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "title": "MethodDTDataCreate"
      },
      "MethodDTDataUpdate": {
        "properties": {
          "method_type_id": {
            "type": "integer",
            "const": 22,
            "title": "Method Type Id",
            "default": 22
          },
          "depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth"
          },
          "time": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Time"
          },
          "qc": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Qc"
          },
          "u2": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "U2"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "title": "MethodDTDataUpdate",
        "description": "Method DT data update structure"
      },
      "MethodDTUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 22,
            "title": "Method Type Id",
            "default": 22
          },
          "depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth"
          },
          "u2_initial": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "U2 Initial"
          },
          "u2_equilibrium": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "U2 Equilibrium"
          },
          "degree_dissipation": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Degree Dissipation"
          },
          "time_dissipation": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Time Dissipation"
          },
          "coefficient_consolidation_vertical": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Coefficient Consolidation Vertical"
          },
          "coefficient_consolidation_horizontal": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Coefficient Consolidation Horizontal"
          }
        },
        "type": "object",
        "title": "MethodDTUpdate"
      },
      "MethodESA": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 15,
            "title": "Method Type Id",
            "default": 15
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodESA"
      },
      "MethodESACreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "ESA" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 15,
            "title": "Method Type Id",
            "default": 15
          }
        },
        "type": "object",
        "title": "MethodESACreate"
      },
      "MethodESAUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 15,
            "title": "Method Type Id",
            "default": 15
          }
        },
        "type": "object",
        "title": "MethodESAUpdate"
      },
      "MethodExportType": {
        "type": "string",
        "enum": ["SND"],
        "title": "MethodExportType"
      },
      "MethodINC": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 19,
            "title": "Method Type Id",
            "default": 19
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodINC",
        "description": "INC"
      },
      "MethodINCCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "INC" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 19,
            "title": "Method Type Id",
            "default": 19
          }
        },
        "type": "object",
        "title": "MethodINCCreate"
      },
      "MethodINCUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 19,
            "title": "Method Type Id",
            "default": 19
          }
        },
        "type": "object",
        "title": "MethodINCUpdate"
      },
      "MethodIW": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 21,
            "title": "Method Type Id",
            "default": 21
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodIW"
      },
      "MethodIWCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "IW" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 21,
            "title": "Method Type Id",
            "default": 21
          }
        },
        "type": "object",
        "title": "MethodIWCreate"
      },
      "MethodIWUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 21,
            "title": "Method Type Id",
            "default": 21
          }
        },
        "type": "object",
        "title": "MethodIWUpdate"
      },
      "MethodInfo-Input": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_name": { "type": "string", "title": "Method Name" },
          "method_status": { "$ref": "#/components/schemas/MethodStatusEnum" },
          "method_type": { "$ref": "#/components/schemas/MethodTypeEnum" },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "cone_reference": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cone Reference"
          },
          "srs_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/SoundingClass" },
              { "type": "null" }
            ]
          },
          "bedrock_info": {
            "anyOf": [
              { "$ref": "#/components/schemas/BedrockInfo" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "method_name",
          "method_status",
          "method_type",
          "created_at"
        ],
        "title": "MethodInfo"
      },
      "MethodInfo-Output": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_name": { "type": "string", "title": "Method Name" },
          "method_status": { "$ref": "#/components/schemas/MethodStatusEnum" },
          "method_type": { "$ref": "#/components/schemas/MethodTypeEnum" },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "cone_reference": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cone Reference"
          },
          "srs_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/SoundingClass" },
              { "type": "null" }
            ]
          },
          "bedrock_info": {
            "anyOf": [
              { "$ref": "#/components/schemas/BedrockInfo" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "method_name",
          "method_status",
          "method_type",
          "created_at"
        ],
        "title": "MethodInfo"
      },
      "MethodMin": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["method_id", "location_id"],
        "title": "MethodMin"
      },
      "MethodOTHER": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 23,
            "title": "Method Type Id",
            "default": 23
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodOTHER",
        "description": "OTHER"
      },
      "MethodOTHERCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "OTHER" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 23,
            "title": "Method Type Id",
            "default": 23
          }
        },
        "type": "object",
        "title": "MethodOTHERCreate"
      },
      "MethodOTHERUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 23,
            "title": "Method Type Id",
            "default": 23
          }
        },
        "type": "object",
        "title": "MethodOTHERUpdate"
      },
      "MethodPT": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 14,
            "title": "Method Type Id",
            "default": 14
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodPT",
        "description": "PT"
      },
      "MethodPTCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "PT" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 14,
            "title": "Method Type Id",
            "default": 14
          }
        },
        "type": "object",
        "title": "MethodPTCreate"
      },
      "MethodPTUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 14,
            "title": "Method Type Id",
            "default": 14
          }
        },
        "type": "object",
        "title": "MethodPTUpdate"
      },
      "MethodPZ": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 5,
            "title": "Method Type Id",
            "default": 5
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "piezometer_type": { "$ref": "#/components/schemas/PiezometerType" },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base"
          },
          "distance_over_terrain": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Distance Over Terrain"
          },
          "model_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Model Id"
          },
          "transformation_type": {
            "$ref": "#/components/schemas/TransformationType"
          },
          "mandatory_barometric_pressure": {
            "type": "boolean",
            "title": "Mandatory Barometric Pressure"
          },
          "mandatory_temperature": {
            "type": "boolean",
            "title": "Mandatory Temperature"
          },
          "pore_pressure_unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pore Pressure Unit"
          },
          "serial_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serial Number"
          },
          "default_barometric_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Default Barometric Pressure"
          },
          "polynomial_factor_a": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Polynomial Factor A"
          },
          "polynomial_factor_b": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Polynomial Factor B"
          },
          "polynomial_factor_k": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Polynomial Factor K"
          },
          "polynomial_factor_a_unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Polynomial Factor A Unit"
          },
          "polynomial_factor_b_unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Polynomial Factor B Unit"
          },
          "polynomial_factor_k_unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Polynomial Factor K Unit"
          },
          "zero_reading_pore_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Zero Reading Pore Pressure"
          },
          "zero_reading_barometric_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Zero Reading Barometric Pressure"
          },
          "zero_reading_temperature": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Zero Reading Temperature"
          },
          "missing_variables_pore_pressure": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Missing Variables Pore Pressure",
            "description": "Missing variables to calculate pore pressure."
          },
          "missing_variables_piezometric_head": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Missing Variables Piezometric Head",
            "description": "Missing variables to calculate piezometric head."
          },
          "missing_variables_piezometric_potential": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Missing Variables Piezometric Potential",
            "description": "Missing variables to calculate piezometric potential."
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at",
          "piezometer_type",
          "transformation_type",
          "mandatory_barometric_pressure",
          "mandatory_temperature"
        ],
        "title": "MethodPZ",
        "description": "PZ"
      },
      "MethodPZCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name",
            "default": "PZ"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 5,
            "title": "Method Type Id",
            "default": 5
          },
          "piezometer_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/PiezometerType" },
              { "type": "null" }
            ],
            "default": "ELECTRIC"
          },
          "depth_top": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Base"
          },
          "distance_over_terrain": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Distance Over Terrain"
          },
          "model_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Model Id"
          },
          "serial_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serial Number"
          },
          "transformation_type": {
            "$ref": "#/components/schemas/TransformationType",
            "default": "NONE"
          },
          "mandatory_barometric_pressure": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Mandatory Barometric Pressure",
            "default": false
          },
          "mandatory_temperature": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Mandatory Temperature",
            "default": false
          },
          "pore_pressure_unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pore Pressure Unit"
          },
          "default_barometric_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Default Barometric Pressure"
          },
          "polynomial_factor_a": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Polynomial Factor A"
          },
          "polynomial_factor_b": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Polynomial Factor B"
          },
          "polynomial_factor_k": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Polynomial Factor K"
          },
          "zero_reading_pore_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Zero Reading Pore Pressure"
          },
          "zero_reading_barometric_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Zero Reading Barometric Pressure"
          },
          "zero_reading_temperature": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Zero Reading Temperature"
          }
        },
        "type": "object",
        "title": "MethodPZCreate"
      },
      "MethodPZData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 5,
            "title": "Method Type Id",
            "default": 5
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "reading_type": { "$ref": "#/components/schemas/ReadingType" },
          "date": { "type": "string", "format": "date-time", "title": "Date" },
          "pore_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Pore Pressure"
          },
          "barometric_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Barometric Pressure"
          },
          "temperature": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Temperature"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "calculated_pore_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Calculated Pore Pressure"
          },
          "calculated_piezometric_head": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Calculated Piezometric Head"
          },
          "calculated_piezometric_potential_level": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Calculated Piezometric Potential Level"
          }
        },
        "type": "object",
        "required": [
          "method_data_id",
          "method_id",
          "created_at",
          "updated_at",
          "reading_type",
          "date"
        ],
        "title": "MethodPZData"
      },
      "MethodPZDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 5,
            "title": "Method Type Id",
            "default": 5
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "reading_type": { "$ref": "#/components/schemas/ReadingType" },
          "date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Date"
          },
          "pore_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Pore Pressure"
          },
          "barometric_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Barometric Pressure"
          },
          "temperature": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Temperature"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "required": ["reading_type"],
        "title": "MethodPZDataCreate"
      },
      "MethodPZDataUpdate": {
        "properties": {
          "method_type_id": {
            "type": "integer",
            "const": 5,
            "title": "Method Type Id",
            "default": 5
          },
          "reading_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/ReadingType" },
              { "type": "null" }
            ]
          },
          "date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Date"
          },
          "pore_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Pore Pressure"
          },
          "barometric_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Barometric Pressure"
          },
          "temperature": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Temperature"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "title": "MethodPZDataUpdate"
      },
      "MethodPZUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 5,
            "title": "Method Type Id",
            "default": 5
          },
          "piezometer_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/PiezometerType" },
              { "type": "null" }
            ]
          },
          "depth_top": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Base"
          },
          "distance_over_terrain": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Distance Over Terrain"
          },
          "model_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Model Id"
          },
          "transformation_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/TransformationType" },
              { "type": "null" }
            ]
          },
          "mandatory_barometric_pressure": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Mandatory Barometric Pressure"
          },
          "mandatory_temperature": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Mandatory Temperature"
          },
          "pore_pressure_unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pore Pressure Unit"
          },
          "serial_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serial Number"
          },
          "default_barometric_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Default Barometric Pressure"
          },
          "polynomial_factor_a": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Polynomial Factor A"
          },
          "polynomial_factor_b": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Polynomial Factor B"
          },
          "polynomial_factor_k": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Polynomial Factor K"
          },
          "zero_reading_pore_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Zero Reading Pore Pressure"
          },
          "zero_reading_barometric_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Zero Reading Barometric Pressure"
          },
          "zero_reading_temperature": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Zero Reading Temperature"
          }
        },
        "type": "object",
        "title": "MethodPZUpdate"
      },
      "MethodRCD": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 8,
            "title": "Method Type Id",
            "default": 8
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base"
          },
          "depth_in_soil": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Soil"
          },
          "depth_in_rock": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Rock"
          },
          "bedrock_elevation": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Bedrock Elevation"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodRCD",
        "description": "RCD"
      },
      "MethodRCDCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "RCD" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 8,
            "title": "Method Type Id",
            "default": 8
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          }
        },
        "type": "object",
        "title": "MethodRCDCreate"
      },
      "MethodRCDData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 8,
            "title": "Method Type Id",
            "default": 8
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "depth": {
            "type": "number",
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks",
            "description": "Remarks. SGF code T"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code",
            "description": "Comment code. Two digit value."
          },
          "penetration_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s). SGF code B."
          }
        },
        "type": "object",
        "required": [
          "method_data_id",
          "method_id",
          "created_at",
          "updated_at",
          "depth"
        ],
        "title": "MethodRCDData"
      },
      "MethodRCDDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 8,
            "title": "Method Type Id",
            "default": 8
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "penetration_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Rate"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "required": ["depth"],
        "title": "MethodRCDDataCreate"
      },
      "MethodRCDDataUpdate": {
        "properties": {
          "method_type_id": {
            "type": "integer",
            "const": 8,
            "title": "Method Type Id",
            "default": 8
          },
          "depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          },
          "penetration_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Rate"
          }
        },
        "type": "object",
        "title": "MethodRCDDataUpdate"
      },
      "MethodRCDUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 8,
            "title": "Method Type Id",
            "default": 8
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          }
        },
        "type": "object",
        "title": "MethodRCDUpdate"
      },
      "MethodRO": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 18,
            "title": "Method Type Id",
            "default": 18
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodRO",
        "description": "RO"
      },
      "MethodROCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "RO" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 18,
            "title": "Method Type Id",
            "default": 18
          }
        },
        "type": "object",
        "title": "MethodROCreate"
      },
      "MethodROUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 18,
            "title": "Method Type Id",
            "default": 18
          }
        },
        "type": "object",
        "title": "MethodROUpdate"
      },
      "MethodRP": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 3,
            "title": "Method Type Id",
            "default": 3
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "predrilling_depth": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Predrilling Depth"
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodRP",
        "description": "Structure for a rotary pressure method instance"
      },
      "MethodRPCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "RP" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 3,
            "title": "Method Type Id",
            "default": 3
          },
          "predrilling_depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Predrilling Depth"
          }
        },
        "type": "object",
        "title": "MethodRPCreate",
        "description": "Structure for creating a new rotary pressure method. All parameters are optional, and default values\nwill be provided."
      },
      "MethodRPData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 3,
            "title": "Method Type Id",
            "default": 3
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "depth": {
            "type": "number",
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "penetration_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s). SGF code B."
          },
          "penetration_force": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Force",
            "description": "Penetration force (kN). SGF code A."
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code",
            "description": "Comment code. Two digit value."
          },
          "flushing": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Flushing"
          },
          "flushing_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Flushing Pressure",
            "description": "Flushing pressure (MPa). SGF code I."
          },
          "flushing_flow": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Flushing Flow",
            "description": "Flushing flow (liter/minute). SGF code J."
          },
          "rotation_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Rotation Rate",
            "description": "Rotation rate (rpm). SGF code R."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "increased_rotation_rate": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Increased Rotation Rate"
          }
        },
        "type": "object",
        "required": [
          "method_data_id",
          "method_id",
          "created_at",
          "updated_at",
          "depth"
        ],
        "title": "MethodRPData"
      },
      "MethodRPDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 3,
            "title": "Method Type Id",
            "default": 3
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "penetration_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Rate"
          },
          "penetration_force": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Force"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          },
          "flushing": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Flushing"
          },
          "flushing_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Flushing Pressure",
            "description": "Flushing pressure (MPa). SGF code I."
          },
          "flushing_flow": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Flushing Flow",
            "description": "Flushing flow (liter/minute). SGF code J."
          },
          "rotation_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Rotation Rate"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "increased_rotation_rate": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Increased Rotation Rate"
          }
        },
        "type": "object",
        "required": ["depth"],
        "title": "MethodRPDataCreate"
      },
      "MethodRPDataUpdate": {
        "properties": {
          "method_type_id": {
            "type": "integer",
            "const": 3,
            "title": "Method Type Id",
            "default": 3
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "title": "MethodRPDataUpdate",
        "description": "Method RP data update structure"
      },
      "MethodRPUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 3,
            "title": "Method Type Id",
            "default": 3
          },
          "predrilling_depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Predrilling Depth"
          }
        },
        "type": "object",
        "title": "MethodRPUpdate",
        "description": "Structure for updating a rotary pressure method instance"
      },
      "MethodRS": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 9,
            "title": "Method Type Id",
            "default": 9
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodRS",
        "description": "RS"
      },
      "MethodRSCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "RS" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 9,
            "title": "Method Type Id",
            "default": 9
          }
        },
        "type": "object",
        "title": "MethodRSCreate"
      },
      "MethodRSUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 9,
            "title": "Method Type Id",
            "default": 9
          }
        },
        "type": "object",
        "title": "MethodRSUpdate"
      },
      "MethodRWS": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 7,
            "title": "Method Type Id",
            "default": 7
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodRWS",
        "description": "RWS"
      },
      "MethodRWSCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "RWS" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 7,
            "title": "Method Type Id",
            "default": 7
          }
        },
        "type": "object",
        "title": "MethodRWSCreate"
      },
      "MethodRWSUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 7,
            "title": "Method Type Id",
            "default": 7
          }
        },
        "type": "object",
        "title": "MethodRWSUpdate"
      },
      "MethodSA": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 4,
            "title": "Method Type Id",
            "default": 4
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top",
            "description": "Depth top (m)."
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base",
            "description": "Depth base (m)."
          },
          "length": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Length"
          },
          "diameter": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Diameter",
            "description": "Diameter (mm)."
          },
          "sample_container_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Sample Container Id"
          },
          "sample_container_type_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sample Container Type Id"
          },
          "sample_material_ids": {
            "items": { "type": "integer" },
            "type": "array",
            "uniqueItems": true,
            "title": "Sample Material Ids",
            "default": []
          },
          "ags_sample_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ags Sample Type",
            "description": "Original AGS SAMP_TYPE value used to populate sampling_technique_id during AGS file import."
          },
          "sampling_technique_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sampling Technique Id"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodSA"
      },
      "MethodSACreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "SA" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 4,
            "title": "Method Type Id",
            "default": 4
          },
          "depth_top": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Base"
          },
          "diameter": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Diameter"
          },
          "sample_container_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Sample Container Id"
          },
          "sample_container_type_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sample Container Type Id"
          },
          "sample_material_ids": {
            "items": { "type": "integer" },
            "type": "array",
            "uniqueItems": true,
            "title": "Sample Material Ids",
            "default": []
          },
          "ags_sample_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ags Sample Type"
          },
          "sampling_technique_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sampling Technique Id"
          }
        },
        "type": "object",
        "title": "MethodSACreate"
      },
      "MethodSAUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 4,
            "title": "Method Type Id",
            "default": 4
          },
          "depth_top": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Base"
          },
          "diameter": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Diameter"
          },
          "sample_container_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Sample Container Id"
          },
          "sample_container_type_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sample Container Type Id"
          },
          "sample_material_ids": {
            "items": { "type": "integer" },
            "type": "array",
            "uniqueItems": true,
            "title": "Sample Material Ids",
            "default": []
          },
          "ags_sample_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ags Sample Type"
          },
          "sampling_technique_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sampling Technique Id"
          }
        },
        "type": "object",
        "title": "MethodSAUpdate"
      },
      "MethodSPT": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 11,
            "title": "Method Type Id",
            "default": 11
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodSPT",
        "description": "SPT"
      },
      "MethodSPTCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "SPT" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 11,
            "title": "Method Type Id",
            "default": 11
          }
        },
        "type": "object",
        "title": "MethodSPTCreate"
      },
      "MethodSPTUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 11,
            "title": "Method Type Id",
            "default": 11
          }
        },
        "type": "object",
        "title": "MethodSPTUpdate"
      },
      "MethodSR": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 20,
            "title": "Method Type Id",
            "default": 20
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodSR",
        "description": "SR"
      },
      "MethodSRCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "SR" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 20,
            "title": "Method Type Id",
            "default": 20
          }
        },
        "type": "object",
        "title": "MethodSRCreate"
      },
      "MethodSRS": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 24,
            "title": "Method Type Id",
            "default": 24
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "sounding_class": {
            "anyOf": [
              { "$ref": "#/components/schemas/SoundingClass" },
              { "type": "null" }
            ]
          },
          "serial_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serial Number"
          },
          "calibration_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Calibration Date"
          },
          "conversion_factor": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Conversion Factor"
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base"
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          },
          "depth_in_soil": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Soil"
          },
          "depth_in_rock": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Rock"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodSRS",
        "description": "SRS method\nSoil-Rock Sounding (Swedish Jord-bergsondering)"
      },
      "MethodSRSCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "SRS" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 24,
            "title": "Method Type Id",
            "default": 24
          },
          "sounding_class": {
            "$ref": "#/components/schemas/SoundingClass",
            "default": "Jb-1"
          },
          "serial_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serial Number"
          },
          "calibration_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Calibration Date"
          },
          "conversion_factor": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Conversion Factor"
          }
        },
        "type": "object",
        "title": "MethodSRSCreate"
      },
      "MethodSRSData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 24,
            "title": "Method Type Id",
            "default": 24
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "depth": {
            "type": "number",
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks",
            "description": "Remarks. SGF code T"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code",
            "description": "Comment code. Two digit value."
          },
          "penetration_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s). SGF code B."
          },
          "penetration_force": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Force",
            "description": "Penetration force (kN). SGF code A."
          },
          "hammering_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Hammering Pressure",
            "description": "Hammering pressure (MPa). SGF code AZ."
          },
          "hammering": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hammering",
            "description": "Hammering 0=off 1=on. SGF code AP."
          },
          "engine_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Engine Pressure",
            "description": "Engine pressure (MPa). SGF code P."
          },
          "torque": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Torque",
            "description": "Torque (kNm). SGF code V."
          },
          "rotation_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Rotation Rate",
            "description": "Rotation rate (rpm). SGF code R."
          },
          "flushing": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Flushing",
            "description": "Flushing 0=off 1=on. SGF code AR."
          },
          "flushing_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Flushing Pressure",
            "description": "Flushing pressure (MPa). SGF code I."
          },
          "flushing_flow": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Flushing Flow",
            "description": "Flushing flow (liter/minute). SGF code J."
          }
        },
        "type": "object",
        "required": [
          "method_data_id",
          "method_id",
          "created_at",
          "updated_at",
          "depth"
        ],
        "title": "MethodSRSData"
      },
      "MethodSRSDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 24,
            "title": "Method Type Id",
            "default": 24
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          },
          "penetration_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s). SGF code B."
          },
          "penetration_force": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Force",
            "description": "Penetration force (kN). SGF code A."
          },
          "hammering_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Hammering Pressure",
            "description": "Hammering pressure (MPa). SGF code AZ."
          },
          "hammering": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hammering",
            "description": "Hammering 0=off 1=on. SGF code AP."
          },
          "engine_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Engine Pressure",
            "description": "Engine pressure (MPa). SGF code P."
          },
          "torque": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Torque",
            "description": "Torque (kNm). SGF code V."
          },
          "rotation_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Rotation Rate",
            "description": "Rotation rate (rpm). SGF code R."
          },
          "flushing": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Flushing",
            "description": "Flushing 0=off 1=on. SGF code AR."
          },
          "flushing_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Flushing Pressure",
            "description": "Flushing pressure (MPa). SGF code I."
          },
          "flushing_flow": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Flushing Flow",
            "description": "Flushing flow (liter/minute). SGF code J."
          }
        },
        "type": "object",
        "required": ["depth"],
        "title": "MethodSRSDataCreate"
      },
      "MethodSRSDataUpdate": {
        "properties": {
          "method_type_id": {
            "type": "integer",
            "const": 24,
            "title": "Method Type Id",
            "default": 24
          },
          "depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks",
            "description": "Remarks. SGF code T"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code",
            "description": "Comment code. Two digit value."
          },
          "penetration_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s). SGF code B."
          },
          "penetration_force": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Force",
            "description": "Penetration force (kN). SGF code A."
          },
          "hammering_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Hammering Pressure",
            "description": "Hammering pressure (MPa). SGF code AZ."
          },
          "hammering": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hammering",
            "description": "Hammering 0=off 1=on. SGF code AP."
          },
          "engine_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Engine Pressure",
            "description": "Engine pressure (MPa). SGF code P."
          },
          "torque": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Torque",
            "description": "Torque (kNm). SGF code V."
          },
          "rotation_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Rotation Rate",
            "description": "Rotation rate (rpm). SGF code R."
          },
          "flushing": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Flushing",
            "description": "Flushing 0=off 1=on. SGF code AR."
          },
          "flushing_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Flushing Pressure",
            "description": "Flushing pressure (MPa). SGF code I."
          },
          "flushing_flow": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Flushing Flow",
            "description": "Flushing flow (liter/minute). SGF code J."
          }
        },
        "type": "object",
        "title": "MethodSRSDataUpdate"
      },
      "MethodSRSUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 24,
            "title": "Method Type Id",
            "default": 24
          },
          "sounding_class": {
            "anyOf": [
              { "$ref": "#/components/schemas/SoundingClass" },
              { "type": "null" }
            ]
          },
          "serial_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serial Number"
          },
          "calibration_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Calibration Date"
          },
          "conversion_factor": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Conversion Factor"
          }
        },
        "type": "object",
        "title": "MethodSRSUpdate"
      },
      "MethodSRUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 20,
            "title": "Method Type Id",
            "default": 20
          }
        },
        "type": "object",
        "title": "MethodSRUpdate"
      },
      "MethodSS": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 6,
            "title": "Method Type Id",
            "default": 6
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base"
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodSS",
        "description": "Simple Sounding (SS) / Enkelsondering"
      },
      "MethodSSCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "SS" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 6,
            "title": "Method Type Id",
            "default": 6
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          }
        },
        "type": "object",
        "title": "MethodSSCreate"
      },
      "MethodSSData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 6,
            "title": "Method Type Id",
            "default": 6
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top",
            "description": "Depth top (m)."
          },
          "depth_base": {
            "type": "number",
            "title": "Depth Base",
            "description": "Depth (m). SGF code D."
          },
          "time": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Time"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          }
        },
        "type": "object",
        "required": [
          "method_data_id",
          "method_id",
          "created_at",
          "updated_at",
          "depth_base"
        ],
        "title": "MethodSSData"
      },
      "MethodSSDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 6,
            "title": "Method Type Id",
            "default": 6
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "depth_top": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Top",
            "description": "Depth top (m)."
          },
          "depth_base": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Base",
            "description": "Depth base (m)."
          },
          "time": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Time"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          }
        },
        "type": "object",
        "title": "MethodSSDataCreate"
      },
      "MethodSSDataUpdate": {
        "properties": {
          "method_type_id": {
            "type": "integer",
            "const": 6,
            "title": "Method Type Id",
            "default": 6
          },
          "depth_top": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Top",
            "description": "Depth top (m)."
          },
          "depth_base": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Base",
            "description": "Depth base (m)."
          },
          "time": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Time"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          }
        },
        "type": "object",
        "title": "MethodSSDataUpdate",
        "description": "Method SS data update structure"
      },
      "MethodSSUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 6,
            "title": "Method Type Id",
            "default": 6
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          }
        },
        "type": "object",
        "title": "MethodSSUpdate"
      },
      "MethodSVT": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 10,
            "title": "Method Type Id",
            "default": 10
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "vane_height": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Vane Height",
            "description": "Height of the vane used (mm)."
          },
          "vane_diameter": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Vane Diameter",
            "description": "Diameter of the vane used (mm)."
          },
          "serial_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serial Number",
            "description": "Serial number of the vane used."
          },
          "calibration_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Calibration Date",
            "description": "Date of calibration of the vane used."
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top",
            "description": "Minimum depth of the data rows (m)."
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base",
            "description": "Maximum depth of the data rows (m)."
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodSVT",
        "description": "Shear vane test (SVT)"
      },
      "MethodSVTCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "SVT" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 10,
            "title": "Method Type Id",
            "default": 10
          },
          "depth_top": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Base"
          },
          "vane_height": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Vane Height",
            "description": "Height of the vane used (mm)."
          },
          "vane_diameter": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Vane Diameter",
            "description": "Diameter of the vane used (mm)."
          },
          "serial_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serial Number",
            "description": "Serial number of the vane used."
          },
          "calibration_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Calibration Date",
            "description": "Date of calibration of the vane used."
          }
        },
        "type": "object",
        "title": "MethodSVTCreate"
      },
      "MethodSVTData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 10,
            "title": "Method Type Id",
            "default": 10
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "depth": {
            "type": "number",
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "maximum_measurement_torque": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Maximum Measurement Torque",
            "description": "Maximum measurement torque (Nm). SGF code AB."
          },
          "maximum_measurement_torque_remoulded": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Maximum Measurement Torque Remoulded",
            "description": "Maximum measurement torque (Nm). SGF code AB2."
          },
          "shear_strength": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Shear Strength",
            "description": "Shear strength (kPa). SGF code AS."
          },
          "shear_strength_remoulded": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Shear Strength Remoulded",
            "description": "Shear strength (kPa)."
          },
          "sensitivity": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Sensitivity",
            "description": "Sensitivity (unitless). SGF code SV."
          },
          "calculated_shear_strength": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Calculated Shear Strength",
            "description": "Calculated shear strength (kPa)."
          },
          "calculated_shear_strength_remoulded": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Calculated Shear Strength Remoulded",
            "description": "Calculated shear strength (kPa)."
          },
          "calculated_sensitivity": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Calculated Sensitivity",
            "description": "Calculated sensitivity (unitless)."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "required": [
          "method_data_id",
          "method_id",
          "created_at",
          "updated_at",
          "depth"
        ],
        "title": "MethodSVTData"
      },
      "MethodSVTDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 10,
            "title": "Method Type Id",
            "default": 10
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Depth",
            "description": "Depth (m)."
          },
          "maximum_measurement_torque": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Maximum Measurement Torque",
            "description": "Maximum measurement torque (Nm)."
          },
          "maximum_measurement_torque_remoulded": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Maximum Measurement Torque Remoulded",
            "description": "Maximum measurement torque (Nm)."
          },
          "shear_strength": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Shear Strength",
            "description": "Shear strength (kPa). SGF code AS."
          },
          "shear_strength_remoulded": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Shear Strength Remoulded",
            "description": "Shear strength (kPa)."
          },
          "sensitivity": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Sensitivity",
            "description": "Sensitivity (unitless). SGF code SV."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "required": ["depth"],
        "title": "MethodSVTDataCreate"
      },
      "MethodSVTDataUpdate": {
        "properties": {
          "method_type_id": {
            "type": "integer",
            "const": 10,
            "title": "Method Type Id",
            "default": 10
          },
          "depth_top": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Top",
            "description": "Depth (m)."
          },
          "maximum_measurement_torque": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Maximum Measurement Torque",
            "description": "Maximum measurement torque (Nm)."
          },
          "maximum_measurement_torque_remoulded": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Maximum Measurement Torque Remoulded",
            "description": "Maximum measurement torque (Nm)."
          },
          "shear_strength": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Shear Strength",
            "description": "Shear strength (kPa). SGF code AS."
          },
          "shear_strength_remoulded": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Shear Strength Remoulded",
            "description": "Shear strength (kPa)."
          },
          "sensitivity": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Sensitivity",
            "description": "Sensitivity (unitless). SGF code SV."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "title": "MethodSVTDataUpdate"
      },
      "MethodSVTUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 10,
            "title": "Method Type Id",
            "default": 10
          },
          "vane_height": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Vane Height",
            "description": "Height of the vane used (mm)."
          },
          "vane_diameter": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Vane Diameter",
            "description": "Diameter of the vane used (mm)."
          },
          "serial_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Serial Number",
            "description": "Serial number of the vane used."
          },
          "calibration_date": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Calibration Date",
            "description": "Date of calibration of the vane used."
          },
          "depth_top": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth Base"
          }
        },
        "type": "object",
        "title": "MethodSVTUpdate"
      },
      "MethodStatusEnum": {
        "type": "integer",
        "enum": [1, 2, 3, 4, 5],
        "title": "MethodStatusEnum",
        "description": "(\nPLANNED=1,\nREADY=2,\nCONDUCTED=3,\nVOIDED=4,\nAPPROVED=5,\n)"
      },
      "MethodSummary": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": { "$ref": "#/components/schemas/MethodTypeEnum" },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "depth_in_soil": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Soil"
          },
          "depth_in_rock": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Rock"
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base"
          },
          "bedrock_elevation": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Bedrock Elevation"
          },
          "sample_container_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Sample Container Id"
          },
          "inclination": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Inclination"
          },
          "azimuth": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Azimuth"
          },
          "total_length": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Total Length"
          },
          "length_in_rock": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Length In Rock"
          },
          "sample_container_type_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sample Container Type Id"
          },
          "sampling_technique_id": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sampling Technique Id"
          },
          "diameter": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Diameter"
          }
        },
        "type": "object",
        "required": ["method_id", "method_type_id", "method_status_id"],
        "title": "MethodSummary",
        "description": "Schema class for returning a subset of attributes for all kind of methods."
      },
      "MethodTOT": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 2,
            "title": "Method Type Id",
            "default": 2
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "predrilling_depth": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Predrilling Depth"
          },
          "stopcode": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Stopcode"
          },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base"
          },
          "depth_in_soil": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Soil"
          },
          "depth_in_rock": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth In Rock"
          },
          "bedrock_elevation": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Bedrock Elevation"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodTOT",
        "description": "Structure for a total sounding method instance"
      },
      "MethodTOTCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "TOT" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 2,
            "title": "Method Type Id",
            "default": 2
          },
          "predrilling_depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Predrilling Depth"
          }
        },
        "type": "object",
        "title": "MethodTOTCreate",
        "description": "Structure for creating a new total sounding method. All parameters are optional, and default values will be set."
      },
      "MethodTOTData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 2,
            "title": "Method Type Id",
            "default": 2
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "depth": {
            "type": "number",
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "penetration_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s). SGF code B."
          },
          "penetration_force": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Force",
            "description": "Penetration force (kN). SGF code A."
          },
          "engine_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Engine Pressure"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code",
            "description": "Comment code. Two digit value."
          },
          "hammering": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hammering"
          },
          "flushing": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Flushing"
          },
          "flushing_pressure": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Flushing Pressure",
            "description": "Flushing pressure (MPa). SGF code I."
          },
          "flushing_flow": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Flushing Flow",
            "description": "Flushing flow (liter/minute). SGF code J."
          },
          "rotation_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Rotation Rate",
            "description": "Rotation rate (rpm). SGF code R."
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks",
            "description": "Remarks. SGF code T"
          },
          "increased_rotation_rate": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Increased Rotation Rate"
          }
        },
        "type": "object",
        "required": [
          "method_data_id",
          "method_id",
          "created_at",
          "updated_at",
          "depth"
        ],
        "title": "MethodTOTData"
      },
      "MethodTOTDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 2,
            "title": "Method Type Id",
            "default": 2
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "penetration_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Rate"
          },
          "penetration_force": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Force"
          },
          "engine_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Engine Pressure"
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          },
          "hammering": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hammering"
          },
          "flushing": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Flushing"
          },
          "flushing_pressure": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Flushing Pressure",
            "description": "Flushing pressure (MPa). SGF code I."
          },
          "flushing_flow": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Flushing Flow",
            "description": "Flushing flow (liter/minute). SGF code J."
          },
          "rotation_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Rotation Rate"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "increased_rotation_rate": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Increased Rotation Rate"
          }
        },
        "type": "object",
        "required": ["depth"],
        "title": "MethodTOTDataCreate"
      },
      "MethodTOTDataUpdate": {
        "properties": {
          "method_type_id": {
            "type": "integer",
            "const": 2,
            "title": "Method Type Id",
            "default": 2
          },
          "comment_code": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Comment Code"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          }
        },
        "type": "object",
        "title": "MethodTOTDataUpdate",
        "description": "Method TOT data update structure"
      },
      "MethodTOTUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 2,
            "title": "Method Type Id",
            "default": 2
          },
          "predrilling_depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Predrilling Depth"
          }
        },
        "type": "object",
        "title": "MethodTOTUpdate",
        "description": "Structure for updating a total sounding method instance"
      },
      "MethodTP": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 13,
            "title": "Method Type Id",
            "default": 13
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at"
        ],
        "title": "MethodTP",
        "description": "TP"
      },
      "MethodTPCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "TP" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 13,
            "title": "Method Type Id",
            "default": 13
          }
        },
        "type": "object",
        "title": "MethodTPCreate"
      },
      "MethodTPUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 13,
            "title": "Method Type Id",
            "default": 13
          }
        },
        "type": "object",
        "title": "MethodTPUpdate"
      },
      "MethodType": {
        "properties": {
          "method_type_id": { "$ref": "#/components/schemas/MethodTypeEnum" },
          "name": { "type": "string", "title": "Name" },
          "description": { "type": "string", "title": "Description" },
          "category": { "type": "string", "title": "Category" },
          "sort_order": { "type": "integer", "title": "Sort Order" },
          "raw_file_extensions": {
            "items": { "$ref": "#/components/schemas/FileExtension" },
            "type": "array",
            "title": "Raw File Extensions"
          }
        },
        "type": "object",
        "required": [
          "method_type_id",
          "name",
          "description",
          "category",
          "sort_order",
          "raw_file_extensions"
        ],
        "title": "MethodType"
      },
      "MethodTypeEnum": {
        "type": "integer",
        "enum": [
          1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21,
          22, 23, 24, 25, 26
        ],
        "title": "MethodTypeEnum",
        "description": "(\nCPT=1,\nTOT=2,\nRP=3,\nSA=4,\nPZ=5,\nSS=6,\nRWS=7,\nRCD=8,\nRS=9,\nSVT=10,\nSPT=11,\nCD=12,\nTP=13,\nPT=14,\nESA=15,\nAD=17,\nRO=18,\nINC=19,\nSR=20,\nIW=21,\nDT=22,\nOTHER=23,\nSRS=24,\nDP=25,\nWST=26,\n)"
      },
      "MethodTypeEnumStr": {
        "type": "string",
        "enum": [
          "cpt",
          "tot",
          "rp",
          "sa",
          "pz",
          "ss",
          "rws",
          "rcd",
          "rs",
          "svt",
          "spt",
          "cd",
          "tp",
          "pt",
          "esa",
          "ad",
          "ro",
          "inc",
          "sr",
          "iw",
          "dt",
          "other",
          "srs",
          "dp",
          "wst"
        ],
        "title": "MethodTypeEnumStr"
      },
      "MethodWST": {
        "properties": {
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_type_id": {
            "type": "integer",
            "const": 26,
            "title": "Method Type Id",
            "default": 26
          },
          "location_id": {
            "type": "string",
            "format": "uuid",
            "title": "Location Id"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "files": {
            "items": { "$ref": "#/components/schemas/File" },
            "type": "array",
            "title": "Files",
            "default": []
          },
          "self": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Self"
          },
          "operation": { "$ref": "#/components/schemas/Operation" },
          "depth_top": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Top"
          },
          "depth_base": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Depth Base"
          }
        },
        "type": "object",
        "required": [
          "method_id",
          "name",
          "location_id",
          "method_status_id",
          "created_at",
          "updated_at",
          "operation"
        ],
        "title": "MethodWST",
        "description": "WST method\nWeight Sounding Test (Swedish Viktsondering)"
      },
      "MethodWSTCreate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": { "type": "string", "title": "Name", "default": "WST" },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "$ref": "#/components/schemas/MethodStatusEnum",
            "default": 1
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Created By"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 26,
            "title": "Method Type Id",
            "default": 26
          },
          "operation": {
            "$ref": "#/components/schemas/Operation",
            "default": "MECHANICAL"
          }
        },
        "type": "object",
        "title": "MethodWSTCreate"
      },
      "MethodWSTData": {
        "properties": {
          "method_data_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Data Id"
          },
          "method_id": {
            "type": "string",
            "format": "uuid",
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 26,
            "title": "Method Type Id",
            "default": 26
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "depth": {
            "type": "number",
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "turning": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Turning",
            "description": "Turning (half revolution/0.2 m)"
          },
          "load": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Load",
            "description": "Load (kN)"
          },
          "penetration_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s)"
          },
          "hammering": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hammering",
            "description": "Hammering 0=off 1=on SGF code AP."
          },
          "rotation_rate": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Rotation Rate",
            "description": "Rotation rate (rpm)"
          }
        },
        "type": "object",
        "required": [
          "method_data_id",
          "method_id",
          "created_at",
          "updated_at",
          "depth"
        ],
        "title": "MethodWSTData"
      },
      "MethodWSTDataCreate": {
        "properties": {
          "method_data_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Data Id"
          },
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "method_type_id": {
            "type": "integer",
            "const": 26,
            "title": "Method Type Id",
            "default": 26
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "depth": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Depth",
            "description": "Depth (m)"
          },
          "turning": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Turning",
            "description": "Turning (half revolution/0.2 m)"
          },
          "load": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Load",
            "description": "Load (kN)"
          },
          "penetration_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s)"
          },
          "hammering": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hammering"
          },
          "rotation_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Rotation Rate",
            "description": "Rotation rate (rpm)"
          }
        },
        "type": "object",
        "required": ["depth"],
        "title": "MethodWSTDataCreate"
      },
      "MethodWSTDataUpdate": {
        "properties": {
          "method_type_id": {
            "type": "integer",
            "const": 26,
            "title": "Method Type Id",
            "default": 26
          },
          "depth": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Depth",
            "description": "Depth (m). SGF code D."
          },
          "turning": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Turning",
            "description": "Turning (half revolution/0.2 m)"
          },
          "load": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Load",
            "description": "Load (kN)"
          },
          "penetration_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Penetration Rate",
            "description": "Penetration rate (mm/s)"
          },
          "hammering": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hammering"
          },
          "rotation_rate": {
            "anyOf": [
              { "type": "number" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Rotation Rate",
            "description": "Rotation rate (rpm)"
          }
        },
        "type": "object",
        "title": "MethodWSTDataUpdate"
      },
      "MethodWSTUpdate": {
        "properties": {
          "method_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Method Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "remarks": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Remarks"
          },
          "method_status_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/MethodStatusEnum" },
              { "type": "null" }
            ]
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Updated By"
          },
          "conducted_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Conducted By"
          },
          "conducted_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Conducted At"
          },
          "method_type_id": {
            "type": "integer",
            "const": 26,
            "title": "Method Type Id",
            "default": 26
          },
          "operation": {
            "anyOf": [
              { "$ref": "#/components/schemas/Operation" },
              { "type": "null" }
            ]
          }
        },
        "type": "object",
        "title": "MethodWSTUpdate"
      },
      "Operation": {
        "type": "string",
        "enum": ["MANUAL", "MECHANICAL"],
        "title": "Operation",
        "description": "Operation\n(\nMANUAL = \"MANUAL\",\nMECHANICAL = \"MECHANICAL\"\n)"
      },
      "Options": {
        "properties": {
          "location_ids": {
            "items": { "type": "string", "format": "uuid" },
            "type": "array",
            "title": "Location Ids"
          },
          "pdf": {
            "$ref": "#/components/schemas/PdfOptions",
            "default": {
              "lang": "eng",
              "date_format": "YYYY-MM-DD",
              "date": "",
              "use_controlled_by": false,
              "use_revision": true,
              "report_number_suffix": "",
              "revision": "",
              "paper_size": "A4",
              "plot_scale": "1/100",
              "report_number": "",
              "client_name": "",
              "sort_figures_by": "location",
              "page_number_prefix": "",
              "page_number_start": "1",
              "page_number_prefix_per_method": {
                "CPT": "",
                "DP": "",
                "PZ": "",
                "RCD": "",
                "RP": "",
                "SRS": "",
                "SS": "",
                "SVT": "",
                "TOT": "",
                "WST": ""
              },
              "page_number_start_per_method": {
                "CPT": "",
                "DP": "",
                "PZ": "",
                "RCD": "",
                "RP": "",
                "SRS": "",
                "SS": "",
                "SVT": "",
                "TOT": "",
                "WST": ""
              },
              "drawn_by": "",
              "controlled_by": "",
              "use_approved_by": true,
              "approved_by": "",
              "show_comment_in_plot": false,
              "projection_system": "",
              "max_pages": -1,
              "color_mode": "grayscale",
              "fill_curve": true
            }
          },
          "plot": {
            "$ref": "#/components/schemas/FM_PlotOptions-Input",
            "default": {
              "fill_curve": true,
              "depth_scale": "Auto scaling",
              "depth_range": [0.0, 0.0],
              "cpt": { "percentile": 0.975, "scaling_mode": "percentile" }
            }
          },
          "auto_set_depth": {
            "type": "boolean",
            "title": "Auto Set Depth",
            "default": false
          },
          "methods": {
            "items": { "$ref": "#/components/schemas/PlotType" },
            "type": "array",
            "title": "Methods",
            "default": ["all"]
          }
        },
        "type": "object",
        "required": ["location_ids"],
        "title": "Options"
      },
      "Organization": {
        "properties": {
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "external_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id"
          },
          "name": { "type": "string", "title": "Name" },
          "short_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Short Name"
          },
          "number_of_projects": {
            "type": "integer",
            "title": "Number Of Projects"
          },
          "email_domains": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email Domains"
          },
          "authentication_alias": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Authentication Alias"
          },
          "authentication_issuer": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Authentication Issuer"
          },
          "default_role": { "$ref": "#/components/schemas/RoleEnum" },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "effective_role": {
            "anyOf": [
              { "$ref": "#/components/schemas/Role" },
              { "type": "null" }
            ]
          },
          "default_standard_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/StandardType" },
              { "type": "null" }
            ]
          },
          "available_standard_ids": {
            "items": { "$ref": "#/components/schemas/StandardType" },
            "type": "array",
            "title": "Available Standard Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "name",
          "number_of_projects",
          "default_role"
        ],
        "title": "Organization"
      },
      "OrganizationCreate": {
        "properties": {
          "organization_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Organization Id"
          },
          "external_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id"
          },
          "name": { "type": "string", "title": "Name" },
          "short_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Short Name"
          },
          "email_domains": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email Domains"
          },
          "authentication_issuer": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Authentication Issuer"
          },
          "default_role": {
            "anyOf": [
              { "$ref": "#/components/schemas/RoleEnum" },
              { "type": "null" }
            ]
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "default_standard_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/StandardType" },
              { "type": "null" }
            ]
          },
          "available_standard_ids": {
            "items": { "$ref": "#/components/schemas/StandardType" },
            "type": "array",
            "title": "Available Standard Ids",
            "default": []
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "OrganizationCreate"
      },
      "OrganizationInformation": {
        "properties": {
          "external_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "logo": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Logo"
          },
          "logo_mime_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Logo Mime Type"
          },
          "authentication_alias": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Authentication Alias"
          }
        },
        "type": "object",
        "title": "OrganizationInformation"
      },
      "OrganizationMin": {
        "properties": {
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "external_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id"
          },
          "name": { "type": "string", "title": "Name" },
          "short_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Short Name"
          }
        },
        "type": "object",
        "required": ["organization_id", "name"],
        "title": "OrganizationMin"
      },
      "OrganizationUpdate": {
        "properties": {
          "external_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "short_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Short Name"
          },
          "email_domains": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email Domains"
          },
          "authentication_alias": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Authentication Alias"
          },
          "authentication_issuer": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Authentication Issuer"
          },
          "default_role": {
            "anyOf": [
              { "$ref": "#/components/schemas/RoleEnum" },
              { "type": "null" }
            ]
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "default_standard_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/StandardType" },
              { "type": "null" }
            ]
          },
          "available_standard_ids": {
            "items": { "$ref": "#/components/schemas/StandardType" },
            "type": "array",
            "title": "Available Standard Ids",
            "default": []
          }
        },
        "type": "object",
        "title": "OrganizationUpdate"
      },
      "Orientation": {
        "type": "string",
        "enum": ["PORTRAIT", "LANDSCAPE"],
        "title": "Orientation",
        "description": "Page orientation. Default is landscape."
      },
      "PDFPageInfo": {
        "properties": {
          "project_name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Project Name",
            "default": ""
          },
          "client": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client",
            "default": ""
          },
          "report_number": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Report Number",
            "default": ""
          },
          "revision": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Revision",
            "default": ""
          },
          "date": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Date",
            "default": ""
          },
          "page_number": {
            "anyOf": [
              { "type": "string" },
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Page Number",
            "default": ""
          },
          "info_table": {
            "anyOf": [
              { "items": {}, "type": "array" },
              { "type": "string" },
              { "type": "null" }
            ],
            "title": "Info Table",
            "default": ""
          },
          "drawn_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Drawn By",
            "default": ""
          },
          "controlled_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Controlled By",
            "default": ""
          },
          "approved_by": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Approved By",
            "default": ""
          },
          "split_page_info": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Split Page Info"
          }
        },
        "type": "object",
        "title": "PDFPageInfo"
      },
      "PageNumberPrefixByMethod": {
        "properties": {
          "CPT": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cpt",
            "default": ""
          },
          "PZ": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pz",
            "default": ""
          },
          "SS": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ss",
            "default": ""
          },
          "SVT": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Svt",
            "default": ""
          },
          "RP": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Rp",
            "default": ""
          },
          "TOT": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Tot",
            "default": ""
          },
          "RCD": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Rcd",
            "default": ""
          },
          "DP": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Dp",
            "default": ""
          },
          "SRS": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Srs",
            "default": ""
          },
          "WST": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Wst",
            "default": ""
          }
        },
        "type": "object",
        "title": "PageNumberPrefixByMethod"
      },
      "PageNumberStartPerMethod": {
        "properties": {
          "CPT": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Cpt",
            "default": ""
          },
          "PZ": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Pz",
            "default": ""
          },
          "SS": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Ss",
            "default": ""
          },
          "SVT": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Svt",
            "default": ""
          },
          "RP": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Rp",
            "default": ""
          },
          "TOT": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Tot",
            "default": ""
          },
          "RCD": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Rcd",
            "default": ""
          },
          "DP": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Dp",
            "default": ""
          },
          "SRS": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Srs",
            "default": ""
          },
          "WST": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Wst",
            "default": ""
          }
        },
        "type": "object",
        "title": "PageNumberStartPerMethod"
      },
      "PaperSize": {
        "type": "string",
        "enum": [
          "A0",
          "A1",
          "A2",
          "A3",
          "A4",
          "A5",
          "A6",
          "A7",
          "A8",
          "A9",
          "A10"
        ],
        "title": "PaperSize"
      },
      "PdfOptions": {
        "properties": {
          "lang": {
            "type": "string",
            "enum": ["eng", "nor"],
            "title": "Lang",
            "default": "eng"
          },
          "date_format": {
            "type": "string",
            "enum": ["YYYY-MM-DD", "DD.MM.YYYY"],
            "title": "Date Format",
            "default": "YYYY-MM-DD"
          },
          "date": { "type": "string", "title": "Date", "default": "" },
          "use_controlled_by": {
            "type": "boolean",
            "title": "Use Controlled By",
            "default": false
          },
          "use_revision": {
            "type": "boolean",
            "title": "Use Revision",
            "default": true
          },
          "report_number_suffix": {
            "type": "string",
            "title": "Report Number Suffix",
            "default": ""
          },
          "revision": { "type": "string", "title": "Revision", "default": "" },
          "paper_size": {
            "type": "string",
            "enum": ["A4", "A3"],
            "title": "Paper Size",
            "default": "A4"
          },
          "plot_scale": {
            "$ref": "#/components/schemas/Scales",
            "default": "1/100"
          },
          "report_number": {
            "type": "string",
            "title": "Report Number",
            "default": ""
          },
          "client_name": {
            "type": "string",
            "title": "Client Name",
            "default": ""
          },
          "sort_figures_by": {
            "type": "string",
            "enum": ["location", "method"],
            "title": "Sort Figures By",
            "default": "location"
          },
          "page_number_prefix": {
            "type": "string",
            "title": "Page Number Prefix",
            "default": ""
          },
          "page_number_start": {
            "type": "string",
            "title": "Page Number Start",
            "default": "1"
          },
          "page_number_prefix_per_method": {
            "$ref": "#/components/schemas/PageNumberPrefixByMethod"
          },
          "page_number_start_per_method": {
            "$ref": "#/components/schemas/PageNumberStartPerMethod"
          },
          "drawn_by": { "type": "string", "title": "Drawn By", "default": "" },
          "controlled_by": {
            "type": "string",
            "title": "Controlled By",
            "default": ""
          },
          "use_approved_by": {
            "type": "boolean",
            "title": "Use Approved By",
            "default": true
          },
          "approved_by": {
            "type": "string",
            "title": "Approved By",
            "default": ""
          },
          "show_comment_in_plot": {
            "type": "boolean",
            "title": "Show Comment In Plot",
            "default": false
          },
          "projection_system": {
            "type": "string",
            "title": "Projection System",
            "default": ""
          },
          "max_pages": {
            "type": "integer",
            "title": "Max Pages",
            "default": -1
          },
          "color_mode": {
            "$ref": "#/components/schemas/ColorMode",
            "default": "grayscale"
          },
          "fill_curve": {
            "type": "boolean",
            "title": "Fill Curve",
            "default": true
          }
        },
        "type": "object",
        "title": "PdfOptions"
      },
      "PiezometerModel": {
        "properties": {
          "model_id": {
            "type": "string",
            "format": "uuid",
            "title": "Model Id"
          },
          "vendor_id": {
            "type": "string",
            "format": "uuid",
            "title": "Vendor Id"
          },
          "name": { "type": "string", "title": "Name" },
          "piezometer_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Piezometer Type"
          },
          "default_transformation_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/TransformationType" },
              { "type": "null" }
            ]
          },
          "default_pore_pressure_unit": {
            "type": "string",
            "title": "Default Pore Pressure Unit"
          },
          "sort_order": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sort Order"
          },
          "vendor": { "$ref": "#/components/schemas/PiezometerVendor" }
        },
        "type": "object",
        "required": [
          "model_id",
          "vendor_id",
          "name",
          "default_pore_pressure_unit",
          "vendor"
        ],
        "title": "PiezometerModel"
      },
      "PiezometerModelCreate": {
        "properties": {
          "model_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Model Id"
          },
          "vendor_id": {
            "type": "string",
            "format": "uuid",
            "title": "Vendor Id"
          },
          "name": { "type": "string", "title": "Name" },
          "piezometer_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Piezometer Type"
          },
          "default_transformation_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/TransformationType" },
              { "type": "null" }
            ]
          },
          "default_pore_pressure_unit": {
            "type": "string",
            "title": "Default Pore Pressure Unit"
          },
          "sort_order": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sort Order"
          }
        },
        "type": "object",
        "required": ["vendor_id", "name", "default_pore_pressure_unit"],
        "title": "PiezometerModelCreate"
      },
      "PiezometerModelUpdate": {
        "properties": {
          "vendor_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Vendor Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "piezometer_type": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Piezometer Type"
          },
          "default_transformation_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/TransformationType" },
              { "type": "null" }
            ]
          },
          "default_pore_pressure_unit": {
            "type": "string",
            "title": "Default Pore Pressure Unit"
          },
          "sort_order": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sort Order"
          }
        },
        "type": "object",
        "required": ["default_pore_pressure_unit"],
        "title": "PiezometerModelUpdate"
      },
      "PiezometerType": {
        "type": "string",
        "enum": ["ELECTRIC", "HYDRAULIC", "STANDPIPE"],
        "title": "PiezometerType",
        "description": "(\nELECTRIC = Piezometer Electric,\nHYDRAULIC = Piezometer Hydraulic,\nSTANDPIPE = Piezometer Standpipe,\n)"
      },
      "PiezometerVendor": {
        "properties": {
          "vendor_id": {
            "type": "string",
            "format": "uuid",
            "title": "Vendor Id"
          },
          "name": { "type": "string", "title": "Name" },
          "organization_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Organization Id"
          },
          "sort_order": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Sort Order"
          }
        },
        "type": "object",
        "required": ["vendor_id", "name"],
        "title": "PiezometerVendor"
      },
      "PizeometerUnits": {
        "properties": {
          "type": { "$ref": "#/components/schemas/PiezometerType" },
          "transformation": {
            "$ref": "#/components/schemas/TransformationType"
          },
          "units": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "null" }] },
            "type": "array",
            "title": "Units",
            "default": []
          },
          "default_unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Default Unit"
          }
        },
        "type": "object",
        "title": "PizeometerUnits"
      },
      "PlotDataStats": {
        "properties": {
          "value_min": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Value Min"
          },
          "value_max": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Value Max"
          },
          "count": { "type": "integer", "title": "Count" },
          "mean": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Mean"
          },
          "std": {
            "anyOf": [{ "type": "number" }, { "type": "string" }],
            "title": "Std"
          },
          "percentiles": {
            "additionalProperties": {
              "anyOf": [{ "type": "number" }, { "type": "string" }]
            },
            "type": "object",
            "title": "Percentiles"
          }
        },
        "type": "object",
        "required": ["value_min", "value_max", "count", "mean", "std"],
        "title": "PlotDataStats"
      },
      "PlotFormat": {
        "type": "string",
        "enum": ["pdf", "svg", "static", "dynamic", "preview"],
        "title": "PlotFormat"
      },
      "PlotInfoObject-Input": {
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "location_type": { "$ref": "#/components/schemas/LocationType" },
          "location_ids": {
            "items": { "type": "string", "format": "uuid" },
            "type": "array",
            "title": "Location Ids"
          },
          "location_names": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Location Names"
          },
          "location_coordinates": {
            "items": { "$ref": "#/components/schemas/LocationCoordinates" },
            "type": "array",
            "title": "Location Coordinates"
          },
          "location_info": {
            "items": { "$ref": "#/components/schemas/LocationInfo" },
            "type": "array",
            "title": "Location Info"
          },
          "method_info": {
            "items": { "$ref": "#/components/schemas/MethodInfo-Input" },
            "type": "array",
            "title": "Method Info"
          },
          "method_ids": {
            "items": { "type": "string", "format": "uuid" },
            "type": "array",
            "title": "Method Ids"
          },
          "method_type": { "type": "string", "title": "Method Type" },
          "is_combined_plot": {
            "type": "boolean",
            "title": "Is Combined Plot"
          },
          "plot_type": { "$ref": "#/components/schemas/PlotType" },
          "plot_options": {
            "$ref": "#/components/schemas/FM_PlotOptions-Input"
          },
          "messages": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Messages"
          },
          "pdf_info": {
            "$ref": "#/components/schemas/PDFPageInfo",
            "default": {
              "project_name": "",
              "client": "",
              "report_number": "",
              "revision": "",
              "date": "",
              "page_number": "",
              "info_table": "",
              "drawn_by": "",
              "controlled_by": "",
              "approved_by": ""
            }
          },
          "stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/PlotDataStats"
                },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Stats"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "location_type",
          "location_ids",
          "location_names",
          "location_coordinates",
          "location_info",
          "method_info",
          "method_ids",
          "method_type",
          "is_combined_plot",
          "plot_type",
          "plot_options"
        ],
        "title": "PlotInfoObject"
      },
      "PlotInfoObject-Output": {
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "location_type": { "$ref": "#/components/schemas/LocationType" },
          "location_ids": {
            "items": { "type": "string", "format": "uuid" },
            "type": "array",
            "title": "Location Ids"
          },
          "location_names": {
            "items": { "type": "string" },
            "type": "array",
            "title": "Location Names"
          },
          "location_coordinates": {
            "items": { "$ref": "#/components/schemas/LocationCoordinates" },
            "type": "array",
            "title": "Location Coordinates"
          },
          "location_info": {
            "items": { "$ref": "#/components/schemas/LocationInfo" },
            "type": "array",
            "title": "Location Info"
          },
          "method_info": {
            "items": { "$ref": "#/components/schemas/MethodInfo-Output" },
            "type": "array",
            "title": "Method Info"
          },
          "method_ids": {
            "items": { "type": "string", "format": "uuid" },
            "type": "array",
            "title": "Method Ids"
          },
          "method_type": { "type": "string", "title": "Method Type" },
          "is_combined_plot": {
            "type": "boolean",
            "title": "Is Combined Plot"
          },
          "plot_type": { "$ref": "#/components/schemas/PlotType" },
          "plot_options": {
            "$ref": "#/components/schemas/FM_PlotOptions-Output"
          },
          "messages": {
            "anyOf": [
              { "items": { "type": "string" }, "type": "array" },
              { "type": "null" }
            ],
            "title": "Messages"
          },
          "pdf_info": {
            "$ref": "#/components/schemas/PDFPageInfo",
            "default": {
              "project_name": "",
              "client": "",
              "report_number": "",
              "revision": "",
              "date": "",
              "page_number": "",
              "info_table": "",
              "drawn_by": "",
              "controlled_by": "",
              "approved_by": ""
            }
          },
          "stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/PlotDataStats"
                },
                "type": "object"
              },
              { "type": "null" }
            ],
            "title": "Stats"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "location_type",
          "location_ids",
          "location_names",
          "location_coordinates",
          "location_info",
          "method_info",
          "method_ids",
          "method_type",
          "is_combined_plot",
          "plot_type",
          "plot_options"
        ],
        "title": "PlotInfoObject"
      },
      "PlotSequence-Input": {
        "properties": {
          "sequence": {
            "items": { "$ref": "#/components/schemas/PlotInfoObject-Input" },
            "type": "array",
            "title": "Sequence"
          },
          "options": {
            "$ref": "#/components/schemas/PlotSequenceOptions-Input",
            "default": {
              "auto_set_depth": false,
              "pdf_filename": "factual_report.pdf",
              "pdf": {
                "approved_by": "",
                "client_name": "",
                "color_mode": "grayscale",
                "controlled_by": "",
                "date": "",
                "date_format": "YYYY-MM-DD",
                "drawn_by": "",
                "fill_curve": true,
                "lang": "eng",
                "max_pages": -1,
                "page_number_prefix": "",
                "page_number_prefix_per_method": {
                  "CPT": "",
                  "DP": "",
                  "PZ": "",
                  "RCD": "",
                  "RP": "",
                  "SRS": "",
                  "SS": "",
                  "SVT": "",
                  "TOT": "",
                  "WST": ""
                },
                "page_number_start": "1",
                "page_number_start_per_method": {
                  "CPT": "",
                  "DP": "",
                  "PZ": "",
                  "RCD": "",
                  "RP": "",
                  "SRS": "",
                  "SS": "",
                  "SVT": "",
                  "TOT": "",
                  "WST": ""
                },
                "paper_size": "A4",
                "plot_scale": "1/100",
                "projection_system": "",
                "report_number": "",
                "report_number_suffix": "",
                "revision": "",
                "show_comment_in_plot": false,
                "sort_figures_by": "location",
                "use_approved_by": true,
                "use_controlled_by": false,
                "use_revision": true
              }
            }
          }
        },
        "type": "object",
        "required": ["sequence"],
        "title": "PlotSequence"
      },
      "PlotSequence-Output": {
        "properties": {
          "sequence": {
            "items": { "$ref": "#/components/schemas/PlotInfoObject-Output" },
            "type": "array",
            "title": "Sequence"
          },
          "options": {
            "$ref": "#/components/schemas/PlotSequenceOptions-Output",
            "default": {
              "auto_set_depth": false,
              "pdf_filename": "factual_report.pdf",
              "pdf": {
                "approved_by": "",
                "client_name": "",
                "color_mode": "grayscale",
                "controlled_by": "",
                "date": "",
                "date_format": "YYYY-MM-DD",
                "drawn_by": "",
                "fill_curve": true,
                "lang": "eng",
                "max_pages": -1,
                "page_number_prefix": "",
                "page_number_prefix_per_method": {
                  "CPT": "",
                  "DP": "",
                  "PZ": "",
                  "RCD": "",
                  "RP": "",
                  "SRS": "",
                  "SS": "",
                  "SVT": "",
                  "TOT": "",
                  "WST": ""
                },
                "page_number_start": "1",
                "page_number_start_per_method": {
                  "CPT": "",
                  "DP": "",
                  "PZ": "",
                  "RCD": "",
                  "RP": "",
                  "SRS": "",
                  "SS": "",
                  "SVT": "",
                  "TOT": "",
                  "WST": ""
                },
                "paper_size": "A4",
                "plot_scale": "1/100",
                "projection_system": "",
                "report_number": "",
                "report_number_suffix": "",
                "revision": "",
                "show_comment_in_plot": false,
                "sort_figures_by": "location",
                "use_approved_by": true,
                "use_controlled_by": false,
                "use_revision": true
              }
            }
          }
        },
        "type": "object",
        "required": ["sequence"],
        "title": "PlotSequence"
      },
      "PlotSequenceOptions-Input": {
        "properties": {
          "auto_set_depth": {
            "type": "boolean",
            "title": "Auto Set Depth",
            "default": false
          },
          "pdf_filename": {
            "type": "string",
            "title": "Pdf Filename",
            "default": "factual_report.pdf"
          },
          "pdf": {
            "$ref": "#/components/schemas/PdfOptions",
            "default": {
              "lang": "eng",
              "date_format": "YYYY-MM-DD",
              "date": "",
              "use_controlled_by": false,
              "use_revision": true,
              "report_number_suffix": "",
              "revision": "",
              "paper_size": "A4",
              "plot_scale": "1/100",
              "report_number": "",
              "client_name": "",
              "sort_figures_by": "location",
              "page_number_prefix": "",
              "page_number_start": "1",
              "page_number_prefix_per_method": {
                "CPT": "",
                "DP": "",
                "PZ": "",
                "RCD": "",
                "RP": "",
                "SRS": "",
                "SS": "",
                "SVT": "",
                "TOT": "",
                "WST": ""
              },
              "page_number_start_per_method": {
                "CPT": "",
                "DP": "",
                "PZ": "",
                "RCD": "",
                "RP": "",
                "SRS": "",
                "SS": "",
                "SVT": "",
                "TOT": "",
                "WST": ""
              },
              "drawn_by": "",
              "controlled_by": "",
              "use_approved_by": true,
              "approved_by": "",
              "show_comment_in_plot": false,
              "projection_system": "",
              "max_pages": -1,
              "color_mode": "grayscale",
              "fill_curve": true
            }
          }
        },
        "type": "object",
        "title": "PlotSequenceOptions"
      },
      "PlotSequenceOptions-Output": {
        "properties": {
          "auto_set_depth": {
            "type": "boolean",
            "title": "Auto Set Depth",
            "default": false
          },
          "pdf_filename": {
            "type": "string",
            "title": "Pdf Filename",
            "default": "factual_report.pdf"
          },
          "pdf": {
            "$ref": "#/components/schemas/PdfOptions",
            "default": {
              "lang": "eng",
              "date_format": "YYYY-MM-DD",
              "date": "",
              "use_controlled_by": false,
              "use_revision": true,
              "report_number_suffix": "",
              "revision": "",
              "paper_size": "A4",
              "plot_scale": "1/100",
              "report_number": "",
              "client_name": "",
              "sort_figures_by": "location",
              "page_number_prefix": "",
              "page_number_start": "1",
              "page_number_prefix_per_method": {
                "CPT": "",
                "DP": "",
                "PZ": "",
                "RCD": "",
                "RP": "",
                "SRS": "",
                "SS": "",
                "SVT": "",
                "TOT": "",
                "WST": ""
              },
              "page_number_start_per_method": {
                "CPT": "",
                "DP": "",
                "PZ": "",
                "RCD": "",
                "RP": "",
                "SRS": "",
                "SS": "",
                "SVT": "",
                "TOT": "",
                "WST": ""
              },
              "drawn_by": "",
              "controlled_by": "",
              "use_approved_by": true,
              "approved_by": "",
              "show_comment_in_plot": false,
              "projection_system": "",
              "max_pages": -1,
              "color_mode": "grayscale",
              "fill_curve": true
            }
          }
        },
        "type": "object",
        "title": "PlotSequenceOptions"
      },
      "PlotType": {
        "type": "string",
        "enum": [
          "all",
          "cpt",
          "pz",
          "ss",
          "svt",
          "rp",
          "tot",
          "rcd",
          "dp",
          "srs",
          "wst"
        ],
        "title": "PlotType"
      },
      "Project": {
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "external_id": { "type": "string", "title": "External Id" },
          "external_id_source": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id Source"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "name": { "type": "string", "title": "Name" },
          "standard_id": { "$ref": "#/components/schemas/StandardType" },
          "srid": { "type": "integer", "title": "Srid" },
          "height_reference": {
            "anyOf": [
              { "$ref": "#/components/schemas/HeightReference" },
              { "type": "null" }
            ]
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": { "type": "string" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Tags",
            "default": []
          },
          "number_of_locations": {
            "type": "integer",
            "title": "Number Of Locations"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "external_id",
          "organization_id",
          "name",
          "standard_id",
          "srid",
          "height_reference",
          "number_of_locations"
        ],
        "title": "Project",
        "example": {
          "external_id": "2020193232",
          "height_reference": "NN2000",
          "name": "Project Name",
          "organization_id": "d88187d8-d2b0-4679-b66c-f9c474cdd5fd",
          "project_id": "48de934b-80bf-485b-816f-cb390264e8ea",
          "srid": 3857
        }
      },
      "ProjectCreate": {
        "properties": {
          "project_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Project Id"
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "external_id": { "type": "string", "title": "External Id" },
          "external_id_source": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id Source"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "name": { "type": "string", "title": "Name" },
          "standard_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/StandardType" },
              { "type": "null" }
            ],
            "default": "NGF"
          },
          "srid": { "type": "integer", "title": "Srid" },
          "height_reference": {
            "anyOf": [
              { "$ref": "#/components/schemas/HeightReference" },
              { "type": "null" }
            ]
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "tags": {
            "items": { "type": "string" },
            "type": "array",
            "uniqueItems": true,
            "title": "Tags",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "external_id",
          "organization_id",
          "name",
          "srid",
          "height_reference"
        ],
        "title": "ProjectCreate"
      },
      "ProjectInfo": {
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "external_id": { "type": "string", "title": "External Id" },
          "external_id_source": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id Source"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "name": { "type": "string", "title": "Name" },
          "standard_id": { "$ref": "#/components/schemas/StandardType" },
          "srid": { "type": "integer", "title": "Srid" },
          "height_reference": {
            "anyOf": [
              { "$ref": "#/components/schemas/HeightReference" },
              { "type": "null" }
            ]
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": { "type": "string" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Tags",
            "default": []
          },
          "number_of_locations": {
            "type": "integer",
            "title": "Number Of Locations"
          },
          "organization": {
            "anyOf": [
              { "$ref": "#/components/schemas/OrganizationMin" },
              { "type": "null" }
            ]
          },
          "effective_role": {
            "anyOf": [
              { "$ref": "#/components/schemas/Role" },
              { "type": "null" }
            ]
          },
          "last_updated": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Last Updated"
          },
          "favorite": {
            "type": "boolean",
            "title": "Favorite",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "external_id",
          "organization_id",
          "name",
          "standard_id",
          "srid",
          "height_reference",
          "number_of_locations"
        ],
        "title": "ProjectInfo",
        "example": {
          "external_id": "2020193232",
          "height_reference": "NN2000",
          "name": "Project Name",
          "organization_id": "d88187d8-d2b0-4679-b66c-f9c474cdd5fd",
          "project_id": "48de934b-80bf-485b-816f-cb390264e8ea",
          "srid": 3857
        }
      },
      "ProjectSearch": {
        "properties": {
          "project_ids": {
            "anyOf": [
              {
                "items": { "type": "string", "format": "uuid" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Project Ids",
            "default": []
          }
        },
        "type": "object",
        "title": "ProjectSearch"
      },
      "ProjectSummary": {
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "created_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          },
          "external_id": { "type": "string", "title": "External Id" },
          "external_id_source": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id Source"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "name": { "type": "string", "title": "Name" },
          "standard_id": { "$ref": "#/components/schemas/StandardType" },
          "srid": { "type": "integer", "title": "Srid" },
          "height_reference": {
            "anyOf": [
              { "$ref": "#/components/schemas/HeightReference" },
              { "type": "null" }
            ]
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": { "type": "string" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Tags",
            "default": []
          },
          "number_of_locations": {
            "type": "integer",
            "title": "Number Of Locations"
          },
          "organization": {
            "anyOf": [
              { "$ref": "#/components/schemas/OrganizationMin" },
              { "type": "null" }
            ]
          },
          "effective_role": {
            "anyOf": [
              { "$ref": "#/components/schemas/Role" },
              { "type": "null" }
            ]
          },
          "last_updated": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Last Updated"
          },
          "favorite": {
            "type": "boolean",
            "title": "Favorite",
            "default": false
          },
          "locations": {
            "items": { "$ref": "#/components/schemas/LocationSummary" },
            "type": "array",
            "title": "Locations",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "external_id",
          "organization_id",
          "name",
          "standard_id",
          "srid",
          "height_reference",
          "number_of_locations"
        ],
        "title": "ProjectSummary",
        "example": {
          "external_id": "2020193232",
          "height_reference": "NN2000",
          "name": "Project Name",
          "organization_id": "d88187d8-d2b0-4679-b66c-f9c474cdd5fd",
          "project_id": "48de934b-80bf-485b-816f-cb390264e8ea",
          "srid": 3857
        }
      },
      "ProjectUpdate": {
        "properties": {
          "external_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id"
          },
          "external_id_source": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "External Id Source"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "standard_id": {
            "anyOf": [
              { "$ref": "#/components/schemas/StandardType" },
              { "type": "null" }
            ]
          },
          "srid": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Srid"
          },
          "height_reference": {
            "anyOf": [
              { "$ref": "#/components/schemas/HeightReference" },
              { "type": "null" }
            ]
          },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": { "type": "string" },
                "type": "array",
                "uniqueItems": true
              },
              { "type": "null" }
            ],
            "title": "Tags",
            "default": []
          }
        },
        "type": "object",
        "title": "ProjectUpdate",
        "example": {
          "external_id": "2020193232",
          "height_reference": "NN2000",
          "name": "Project Name",
          "srid": 3857
        }
      },
      "ReadingType": {
        "type": "string",
        "enum": ["PRE_INSTALLATION", "POST_INSTALLATION", "REGULAR"],
        "title": "ReadingType"
      },
      "Role": {
        "properties": {
          "role_type": { "$ref": "#/components/schemas/RoleEnum" },
          "role_entity_type": {
            "anyOf": [
              { "$ref": "#/components/schemas/RoleEntityEnum" },
              { "type": "null" }
            ]
          },
          "role_entity_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "Role Entity Id"
          }
        },
        "type": "object",
        "required": ["role_type"],
        "title": "Role"
      },
      "RoleEntityEnum": {
        "type": "string",
        "enum": ["proj", "org"],
        "title": "RoleEntityEnum"
      },
      "RoleEnum": {
        "type": "string",
        "enum": ["reference", "viewer", "editor", "admin"],
        "title": "RoleEnum"
      },
      "SampleContainerType": {
        "properties": {
          "sample_container_type_id": {
            "type": "integer",
            "title": "Sample Container Type Id"
          },
          "name": { "type": "string", "title": "Name" },
          "description": { "type": "string", "title": "Description" },
          "sort_order": { "type": "integer", "title": "Sort Order" }
        },
        "type": "object",
        "required": [
          "sample_container_type_id",
          "name",
          "description",
          "sort_order"
        ],
        "title": "SampleContainerType"
      },
      "SampleMaterial": {
        "properties": {
          "sample_material_id": {
            "type": "integer",
            "title": "Sample Material Id"
          },
          "name": { "type": "string", "title": "Name" },
          "description": { "type": "string", "title": "Description" },
          "sort_order": { "type": "integer", "title": "Sort Order" }
        },
        "type": "object",
        "required": ["sample_material_id", "name", "description", "sort_order"],
        "title": "SampleMaterial"
      },
      "SamplerType": {
        "properties": {
          "sampler_type_id": { "type": "integer", "title": "Sampler Type Id" },
          "name": { "type": "string", "title": "Name" },
          "description": { "type": "string", "title": "Description" },
          "sort_order": { "type": "integer", "title": "Sort Order" }
        },
        "type": "object",
        "required": ["sampler_type_id", "name", "description", "sort_order"],
        "title": "SamplerType"
      },
      "SamplingTechnique": {
        "properties": {
          "sampling_technique_id": {
            "type": "integer",
            "title": "Sampling Technique Id"
          },
          "name": { "type": "string", "title": "Name" },
          "description": { "type": "string", "title": "Description" },
          "sort_order": { "type": "integer", "title": "Sort Order" }
        },
        "type": "object",
        "required": [
          "sampling_technique_id",
          "name",
          "description",
          "sort_order"
        ],
        "title": "SamplingTechnique"
      },
      "Scales": {
        "type": "string",
        "enum": [
          "Auto scaling",
          "Fit scaling",
          "1/25",
          "1/50",
          "1/75",
          "1/100",
          "1/125",
          "1/150",
          "1/175",
          "1/200",
          "1/250",
          "1/300",
          "1/350",
          "1/400",
          "1/450",
          "1/500",
          "1/600",
          "1/750",
          "1/800",
          "1/1000"
        ],
        "title": "Scales"
      },
      "ScalingMode": {
        "type": "string",
        "enum": ["auto", "manual", "percentile"],
        "title": "ScalingMode"
      },
      "SoundingClass": {
        "type": "string",
        "enum": ["Jb-1", "Jb-2", "Jb-3", "Jb-tot"],
        "title": "SoundingClass",
        "description": "Soil-Rock-Sounding (Swedish Jord-bergsondering) classes\n(\nJB1 = Jb-1,\nJB2 = Jb-2,\nJB3 = Jb-3,\nJBTOT = Jb-tot,\n)"
      },
      "Standard": {
        "properties": {
          "standard_id": { "$ref": "#/components/schemas/StandardType" },
          "name": { "type": "string", "title": "Name" },
          "description": { "type": "string", "title": "Description" },
          "sort_order": { "type": "integer", "title": "Sort Order" },
          "method_types": {
            "items": { "$ref": "#/components/schemas/MethodType" },
            "type": "array",
            "title": "Method Types",
            "default": []
          }
        },
        "type": "object",
        "required": ["standard_id", "name", "description", "sort_order"],
        "title": "Standard"
      },
      "StandardType": {
        "type": "string",
        "enum": ["NGF", "SGF", "IOGP", "OW"],
        "title": "StandardType"
      },
      "TransformationType": {
        "type": "string",
        "enum": ["POLYNOMIAL", "ABSOLUTE", "NONE"],
        "title": "TransformationType",
        "description": "Piezometer Transformation Types"
      },
      "User-Input": {
        "properties": {
          "user_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "User Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email"
          },
          "roles": {
            "items": { "$ref": "#/components/schemas/Role" },
            "type": "array",
            "title": "Roles",
            "default": []
          },
          "email_verified": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Email Verified"
          }
        },
        "type": "object",
        "title": "User"
      },
      "User-Output": {
        "properties": {
          "user_id": {
            "anyOf": [
              { "type": "string", "format": "uuid" },
              { "type": "null" }
            ],
            "title": "User Id"
          },
          "name": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Name"
          },
          "email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email"
          },
          "roles": {
            "items": { "$ref": "#/components/schemas/Role" },
            "type": "array",
            "title": "Roles",
            "default": []
          },
          "email_verified": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Email Verified"
          }
        },
        "type": "object",
        "title": "User"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": { "HTTPBearer": { "type": "http", "scheme": "bearer" } }
  }
}
